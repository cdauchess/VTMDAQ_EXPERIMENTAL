ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ADC_SAR_Seq_1_SAR.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ADC_SAR_Seq_1_SAR_initVar
  19              		.bss
  20              		.type	ADC_SAR_Seq_1_SAR_initVar, %object
  21              		.size	ADC_SAR_Seq_1_SAR_initVar, 1
  22              	ADC_SAR_Seq_1_SAR_initVar:
  23 0000 00       		.space	1
  24              		.comm	ADC_SAR_Seq_1_SAR_offset,2,2
  25              		.comm	ADC_SAR_Seq_1_SAR_countsPerVolt,2,2
  26              		.comm	ADC_SAR_Seq_1_SAR_countsPer10Volt,4,4
  27              		.comm	ADC_SAR_Seq_1_SAR_shift,2,2
  28              		.section	.text.ADC_SAR_Seq_1_SAR_Start,"ax",%progbits
  29              		.align	2
  30              		.global	ADC_SAR_Seq_1_SAR_Start
  31              		.thumb
  32              		.thumb_func
  33              		.type	ADC_SAR_Seq_1_SAR_Start, %function
  34              	ADC_SAR_Seq_1_SAR_Start:
  35              	.LFB0:
  36              		.file 1 ".\\Generated_Source\\PSoC5\\ADC_SAR_Seq_1_SAR.c"
   1:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * File Name: ADC_SAR_Seq_1_SAR.c
   3:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Version 3.0
   4:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
   5:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Description:
   6:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  This file provides the source code to the API for the Successive
   7:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  approximation ADC Component.
   8:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
   9:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Note:
  10:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
  11:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
  18:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** #include "ADC_SAR_Seq_1_SAR.h"
  20:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
  21:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** #if(ADC_SAR_Seq_1_SAR_DEFAULT_INTERNAL_CLK)
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 2


  22:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #include "ADC_SAR_Seq_1_SAR_theACLK.h"
  23:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** #endif /* End ADC_SAR_Seq_1_SAR_DEFAULT_INTERNAL_CLK */
  24:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
  25:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
  26:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** /***************************************
  27:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Forward function references
  28:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** ***************************************/
  29:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** static void ADC_SAR_Seq_1_SAR_CalcGain(uint8 resolution);
  30:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
  31:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
  32:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** /***************************************
  33:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Global data allocation
  34:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** ***************************************/
  35:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** uint8 ADC_SAR_Seq_1_SAR_initVar = 0u;
  36:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** volatile int16 ADC_SAR_Seq_1_SAR_offset;
  37:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** volatile int16 ADC_SAR_Seq_1_SAR_countsPerVolt;     /* Obsolete Gain compensation */
  38:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** volatile int32 ADC_SAR_Seq_1_SAR_countsPer10Volt;   /* Gain compensation */
  39:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** volatile int16 ADC_SAR_Seq_1_SAR_shift;
  40:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
  41:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
  42:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** /*******************************************************************************
  43:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Function Name: ADC_SAR_Seq_1_SAR_Start
  44:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** ********************************************************************************
  45:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
  46:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Summary:
  47:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  This is the preferred method to begin component operation.
  48:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_Start() sets the initVar variable, calls the
  49:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_Init() function, and then calls the
  50:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_Enable() function.
  51:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
  52:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Parameters:
  53:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  None.
  54:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
  55:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Return:
  56:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  None.
  57:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
  58:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Global variables:
  59:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  The ADC_SAR_Seq_1_SAR_initVar variable is used to indicate when/if initial
  60:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  configuration of this component has happened. The variable is initialized to
  61:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_Start() routine.
  64:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  If re-initialization of the component is required the variable should be set
  65:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  to zero before call of ADC_SAR_Seq_1_SAR_Start() routine, or the user may call
  66:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_Init() and ADC_SAR_Seq_1_SAR_Enable() as done in the
  67:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_Start() routine.
  68:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
  69:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Side Effect:
  70:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  If the initVar variable is already set, this function only calls the
  71:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_Enable() function.
  72:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
  73:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *******************************************************************************/
  74:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** void ADC_SAR_Seq_1_SAR_Start(void)
  75:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** {
  37              		.loc 1 75 0
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 3


  40              		@ frame_needed = 1, uses_anonymous_args = 0
  41 0000 80B5     		push	{r7, lr}
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  76:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
  77:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* If not Initialized then initialize all required hardware and software */
  78:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     if(ADC_SAR_Seq_1_SAR_initVar == 0u)
  47              		.loc 1 78 0
  48 0004 054B     		ldr	r3, .L3
  49 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  50 0008 002B     		cmp	r3, #0
  51 000a 04D1     		bne	.L2
  79:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     {
  80:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         ADC_SAR_Seq_1_SAR_Init();
  52              		.loc 1 80 0
  53 000c FFF7FEFF 		bl	ADC_SAR_Seq_1_SAR_Init
  81:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         ADC_SAR_Seq_1_SAR_initVar = 1u;
  54              		.loc 1 81 0
  55 0010 024B     		ldr	r3, .L3
  56 0012 0122     		movs	r2, #1
  57 0014 1A70     		strb	r2, [r3]
  58              	.L2:
  82:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     }
  83:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_Enable();
  59              		.loc 1 83 0
  60 0016 FFF7FEFF 		bl	ADC_SAR_Seq_1_SAR_Enable
  84:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** }
  61              		.loc 1 84 0
  62 001a 80BD     		pop	{r7, pc}
  63              	.L4:
  64              		.align	2
  65              	.L3:
  66 001c 00000000 		.word	ADC_SAR_Seq_1_SAR_initVar
  67              		.cfi_endproc
  68              	.LFE0:
  69              		.size	ADC_SAR_Seq_1_SAR_Start, .-ADC_SAR_Seq_1_SAR_Start
  70              		.section	.text.ADC_SAR_Seq_1_SAR_Init,"ax",%progbits
  71              		.align	2
  72              		.global	ADC_SAR_Seq_1_SAR_Init
  73              		.thumb
  74              		.thumb_func
  75              		.type	ADC_SAR_Seq_1_SAR_Init, %function
  76              	ADC_SAR_Seq_1_SAR_Init:
  77              	.LFB1:
  85:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
  86:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
  87:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** /*******************************************************************************
  88:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Function Name: ADC_SAR_Seq_1_SAR_Init
  89:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** ********************************************************************************
  90:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
  91:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Summary:
  92:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  Initialize component's parameters to the parameters set by user in the
  93:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  customizer of the component placed onto schematic. Usually called in
  94:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_Start().
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 4


  95:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
  96:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Parameters:
  97:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  None.
  98:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
  99:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Return:
 100:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  None.
 101:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 102:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Global variables:
 103:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  The ADC_SAR_Seq_1_SAR_offset variable is initialized to 0.
 104:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 105:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** void ADC_SAR_Seq_1_SAR_Init(void)
 107:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** {
  78              		.loc 1 107 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82 0000 80B5     		push	{r7, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 7, -8
  85              		.cfi_offset 14, -4
  86 0002 00AF     		add	r7, sp, #0
  87              		.cfi_def_cfa_register 7
 108:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 109:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* This is only valid if there is an internal clock */
 110:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #if(ADC_SAR_Seq_1_SAR_DEFAULT_INTERNAL_CLK)
 111:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         ADC_SAR_Seq_1_SAR_theACLK_SetMode(CYCLK_DUTY);
 112:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #endif /* End ADC_SAR_Seq_1_SAR_DEFAULT_INTERNAL_CLK */
 113:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 114:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #if(ADC_SAR_Seq_1_SAR_IRQ_REMOVE == 0u)
 115:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         /* Start and set interrupt vector */
 116:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         CyIntSetPriority(ADC_SAR_Seq_1_SAR_INTC_NUMBER, ADC_SAR_Seq_1_SAR_INTC_PRIOR_NUMBER);
 117:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_SAR_INTC_NUMBER, &ADC_SAR_Seq_1_SAR_ISR);
 118:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #endif   /* End ADC_SAR_Seq_1_SAR_IRQ_REMOVE */
 119:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 120:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* Enable IRQ mode*/
 121:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_SAR_CSR1_REG |= ADC_SAR_Seq_1_SAR_SAR_IRQ_MASK_EN | ADC_SAR_Seq_1_SAR_SAR_IRQ
  88              		.loc 1 121 0
  89 0004 074B     		ldr	r3, .L6
  90 0006 074A     		ldr	r2, .L6
  91 0008 1278     		ldrb	r2, [r2]
  92 000a D2B2     		uxtb	r2, r2
  93 000c 42F00602 		orr	r2, r2, #6
  94 0010 D2B2     		uxtb	r2, r2
  95 0012 1A70     		strb	r2, [r3]
 122:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 123:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /*Set SAR ADC resolution ADC */
 124:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_SetResolution(ADC_SAR_Seq_1_SAR_DEFAULT_RESOLUTION);
  96              		.loc 1 124 0
  97 0014 0C20     		movs	r0, #12
  98 0016 FFF7FEFF 		bl	ADC_SAR_Seq_1_SAR_SetResolution
 125:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_offset = 0;
  99              		.loc 1 125 0
 100 001a 034B     		ldr	r3, .L6+4
 101 001c 0022     		movs	r2, #0
 102 001e 1A80     		strh	r2, [r3]	@ movhi
 126:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** }
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 5


 103              		.loc 1 126 0
 104 0020 80BD     		pop	{r7, pc}
 105              	.L7:
 106 0022 00BF     		.align	2
 107              	.L6:
 108 0024 01590040 		.word	1073764609
 109 0028 00000000 		.word	ADC_SAR_Seq_1_SAR_offset
 110              		.cfi_endproc
 111              	.LFE1:
 112              		.size	ADC_SAR_Seq_1_SAR_Init, .-ADC_SAR_Seq_1_SAR_Init
 113              		.section	.text.ADC_SAR_Seq_1_SAR_Enable,"ax",%progbits
 114              		.align	2
 115              		.global	ADC_SAR_Seq_1_SAR_Enable
 116              		.thumb
 117              		.thumb_func
 118              		.type	ADC_SAR_Seq_1_SAR_Enable, %function
 119              	ADC_SAR_Seq_1_SAR_Enable:
 120              	.LFB2:
 127:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 128:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 129:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** /*******************************************************************************
 130:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Function Name: ADC_SAR_Seq_1_SAR_Enable
 131:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** ********************************************************************************
 132:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 133:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Summary:
 134:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  Enables the reference, clock and power for SAR ADC.
 135:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 136:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Parameters:
 137:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  None.
 138:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 139:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Return:
 140:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  None.
 141:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 142:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *******************************************************************************/
 143:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** void ADC_SAR_Seq_1_SAR_Enable(void)
 144:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** {
 121              		.loc 1 144 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 8
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
 129 0002 82B0     		sub	sp, sp, #8
 130              		.cfi_def_cfa_offset 16
 131 0004 00AF     		add	r7, sp, #0
 132              		.cfi_def_cfa_register 7
 145:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     uint8 tmpReg;
 146:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     uint8 enableInterrupts;
 147:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     enableInterrupts = CyEnterCriticalSection();
 133              		.loc 1 147 0
 134 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 135 000a 0346     		mov	r3, r0
 136 000c FB71     		strb	r3, [r7, #7]
 148:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 149:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* Enable the SAR ADC block in Active Power Mode */
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 6


 150:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_PWRMGR_SAR_REG |= ADC_SAR_Seq_1_SAR_ACT_PWR_SAR_EN;
 137              		.loc 1 150 0
 138 000e 244B     		ldr	r3, .L9
 139 0010 234A     		ldr	r2, .L9
 140 0012 1278     		ldrb	r2, [r2]
 141 0014 D2B2     		uxtb	r2, r2
 142 0016 42F00102 		orr	r2, r2, #1
 143 001a D2B2     		uxtb	r2, r2
 144 001c 1A70     		strb	r2, [r3]
 151:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 152:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_STBY_PWRMGR_SAR_REG |= ADC_SAR_Seq_1_SAR_STBY_PWR_SAR_EN;
 145              		.loc 1 153 0
 146 001e 214B     		ldr	r3, .L9+4
 147 0020 204A     		ldr	r2, .L9+4
 148 0022 1278     		ldrb	r2, [r2]
 149 0024 D2B2     		uxtb	r2, r2
 150 0026 42F00102 		orr	r2, r2, #1
 151 002a D2B2     		uxtb	r2, r2
 152 002c 1A70     		strb	r2, [r3]
 154:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 155:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* This is only valid if there is an internal clock */
 156:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #if(ADC_SAR_Seq_1_SAR_DEFAULT_INTERNAL_CLK)
 157:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         ADC_SAR_Seq_1_SAR_PWRMGR_CLK_REG |= ADC_SAR_Seq_1_SAR_ACT_PWR_CLK_EN;
 158:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         ADC_SAR_Seq_1_SAR_STBY_PWRMGR_CLK_REG |= ADC_SAR_Seq_1_SAR_STBY_PWR_CLK_EN;
 159:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #endif /* End ADC_SAR_Seq_1_SAR_DEFAULT_INTERNAL_CLK */
 160:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 161:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     tmpReg = ADC_SAR_Seq_1_SAR_SAR_CSR3_REG;
 153              		.loc 1 162 0
 154 002e 1E4B     		ldr	r3, .L9+8
 155 0030 1B78     		ldrb	r3, [r3]
 156 0032 BB71     		strb	r3, [r7, #6]
 163:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     tmpReg |= ADC_SAR_Seq_1_SAR_SAR_EN_BUF_VCM_EN;
 157              		.loc 1 163 0
 158 0034 BB79     		ldrb	r3, [r7, #6]
 159 0036 43F00203 		orr	r3, r3, #2
 160 003a BB71     		strb	r3, [r7, #6]
 164:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #if((ADC_SAR_Seq_1_SAR_DEFAULT_REFERENCE == ADC_SAR_Seq_1_SAR__EXT_REF) || \
 166:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         (ADC_SAR_Seq_1_SAR_DEFAULT_RANGE == ADC_SAR_Seq_1_SAR__VNEG_VDDA_DIFF))
 167:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         tmpReg &= (uint8)~ADC_SAR_Seq_1_SAR_SAR_EN_BUF_VREF_EN;
 168:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         tmpReg |= ADC_SAR_Seq_1_SAR_SAR_EN_BUF_VREF_EN;
 161              		.loc 1 169 0
 162 003c BB79     		ldrb	r3, [r7, #6]
 163 003e 43F00103 		orr	r3, r3, #1
 164 0042 BB71     		strb	r3, [r7, #6]
 170:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #endif /* ADC_SAR_Seq_1_SAR_DEFAULT_REFERENCE == ADC_SAR_Seq_1_SAR__EXT_REF */
 171:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_SAR_CSR3_REG = tmpReg;
 165              		.loc 1 171 0
 166 0044 184B     		ldr	r3, .L9+8
 167 0046 BA79     		ldrb	r2, [r7, #6]
 168 0048 1A70     		strb	r2, [r3]
 172:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 173:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* Set reference for ADC */
 174:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #if(ADC_SAR_Seq_1_SAR_DEFAULT_RANGE == ADC_SAR_Seq_1_SAR__VNEG_VDDA_DIFF)
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 7


 175:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         #if(ADC_SAR_Seq_1_SAR_DEFAULT_REFERENCE == ADC_SAR_Seq_1_SAR__EXT_REF)
 176:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             ADC_SAR_Seq_1_SAR_SAR_CSR6_REG = ADC_SAR_Seq_1_SAR_INT_BYPASS_EXT_VREF; /* S2 */
 177:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             ADC_SAR_Seq_1_SAR_SAR_CSR6_REG = ADC_SAR_Seq_1_SAR_VDDA_VREF;           /* S7 */
 179:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         #endif /* ADC_SAR_Seq_1_SAR_DEFAULT_REFERENCE == ADC_SAR_Seq_1_SAR__EXT_REF */
 180:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #else  /* Reference goes through internal buffer */
 181:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         #if(ADC_SAR_Seq_1_SAR_DEFAULT_REFERENCE == ADC_SAR_Seq_1_SAR__INT_REF_NOT_BYPASSED)
 182:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             ADC_SAR_Seq_1_SAR_SAR_CSR6_REG = ADC_SAR_Seq_1_SAR_INT_VREF;            /* S3 + S4 */
 169              		.loc 1 182 0
 170 004a 184B     		ldr	r3, .L9+12
 171 004c 1822     		movs	r2, #24
 172 004e 1A70     		strb	r2, [r3]
 183:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         #else /* INTREF Bypassed of External */
 184:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             ADC_SAR_Seq_1_SAR_SAR_CSR6_REG = ADC_SAR_Seq_1_SAR_INT_BYPASS_EXT_VREF; /* S2 */
 185:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         #endif /* ADC_SAR_Seq_1_SAR_DEFAULT_REFERENCE == ADC_SAR_Seq_1_SAR__INT_REF_NOT_BYPASSED */
 186:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #endif /* VNEG_VDDA_DIFF */
 187:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 188:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #if(ADC_SAR_Seq_1_SAR_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         ADC_SAR_Seq_1_SAR_SAR_CSR5_REG &= (uint8)~ADC_SAR_Seq_1_SAR_SAR_DLY_INC;
 191:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         ADC_SAR_Seq_1_SAR_SAR_CSR5_REG |= ADC_SAR_Seq_1_SAR_SAR_DLY_INC;
 173              		.loc 1 192 0
 174 0050 174B     		ldr	r3, .L9+16
 175 0052 174A     		ldr	r2, .L9+16
 176 0054 1278     		ldrb	r2, [r2]
 177 0056 D2B2     		uxtb	r2, r2
 178 0058 42F04002 		orr	r2, r2, #64
 179 005c D2B2     		uxtb	r2, r2
 180 005e 1A70     		strb	r2, [r3]
 193:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #endif /* ADC_SAR_Seq_1_SAR_HIGH_POWER_PULSE == 0u */
 194:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 195:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* Increase comparator latch enable delay by 20%, 
 196:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  Default for 1MSPS) 
 198:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     */
 199:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #if(ADC_SAR_Seq_1_SAR_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         ADC_SAR_Seq_1_SAR_SAR_CSR5_REG |= ADC_SAR_Seq_1_SAR_SAR_SEL_CSEL_DFT_CHAR;
 201:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #else /* for <500ksps */
 202:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         ADC_SAR_Seq_1_SAR_SAR_CSR5_REG &= (uint8)~ADC_SAR_Seq_1_SAR_SAR_SEL_CSEL_DFT_CHAR;
 181              		.loc 1 202 0
 182 0060 134B     		ldr	r3, .L9+16
 183 0062 134A     		ldr	r2, .L9+16
 184 0064 1278     		ldrb	r2, [r2]
 185 0066 D2B2     		uxtb	r2, r2
 186 0068 22F00302 		bic	r2, r2, #3
 187 006c D2B2     		uxtb	r2, r2
 188 006e 1A70     		strb	r2, [r3]
 203:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #endif /* ADC_SAR_Seq_1_SAR_HIGH_POWER_PULSE == 0u */
 204:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 205:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_SAR_CSR0_REG = (uint8)((uint8)ADC_SAR_Seq_1_SAR_DEFAULT_POWER << ADC_SAR_Seq_
 189              		.loc 1 206 0
 190 0070 104B     		ldr	r3, .L9+20
 191 0072 C822     		movs	r2, #200
 192 0074 1A70     		strb	r2, [r3]
 207:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 8


 208:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #if ((CY_PSOC5LP) || (ADC_SAR_Seq_1_SAR_DEFAULT_REFERENCE != ADC_SAR_Seq_1_SAR__EXT_REF))
 209:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         | ADC_SAR_Seq_1_SAR_SAR_HIZ_CLEAR
 210:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #endif /* SAR_HIZ_CLEAR */
 211:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /*Set Convertion mode */
 212:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #if(ADC_SAR_Seq_1_SAR_DEFAULT_CONV_MODE != ADC_SAR_Seq_1_SAR__FREE_RUNNING)      /* If triggere
 213:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         | ADC_SAR_Seq_1_SAR_SAR_MX_SOF_UDB           /* source: UDB */
 214:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         | ADC_SAR_Seq_1_SAR_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #endif /* ADC_SAR_Seq_1_SAR_DEFAULT_CONV_MODE */
 216:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ; /* end of multiple line initialization */
 217:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 218:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_SAR_TR0_REG = ADC_SAR_Seq_1_SAR_SAR_CAP_TRIM_2;
 193              		.loc 1 218 0
 194 0076 104B     		ldr	r3, .L9+24
 195 0078 0222     		movs	r2, #2
 196 007a 1A70     		strb	r2, [r3]
 219:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 220:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* Enable clock for SAR ADC*/
 221:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_SAR_CLK_REG |= ADC_SAR_Seq_1_SAR_SAR_MX_CLK_EN;
 197              		.loc 1 221 0
 198 007c 0F4B     		ldr	r3, .L9+28
 199 007e 0F4A     		ldr	r2, .L9+28
 200 0080 1278     		ldrb	r2, [r2]
 201 0082 D2B2     		uxtb	r2, r2
 202 0084 42F00802 		orr	r2, r2, #8
 203 0088 D2B2     		uxtb	r2, r2
 204 008a 1A70     		strb	r2, [r3]
 222:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 223:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 205              		.loc 1 223 0
 206 008c 0A20     		movs	r0, #10
 207 008e FFF7FEFF 		bl	CyDelayUs
 224:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 225:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #if(ADC_SAR_Seq_1_SAR_IRQ_REMOVE == 0u)
 226:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         /* Clear a pending interrupt */
 227:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         CyIntClearPending(ADC_SAR_Seq_1_SAR_INTC_NUMBER);
 228:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #endif   /* End ADC_SAR_Seq_1_SAR_IRQ_REMOVE */
 229:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 230:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     CyExitCriticalSection(enableInterrupts);
 208              		.loc 1 230 0
 209 0092 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 210 0094 1846     		mov	r0, r3
 211 0096 FFF7FEFF 		bl	CyExitCriticalSection
 231:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** }
 212              		.loc 1 231 0
 213 009a 0837     		adds	r7, r7, #8
 214 009c BD46     		mov	sp, r7
 215              		@ sp needed
 216 009e 80BD     		pop	{r7, pc}
 217              	.L10:
 218              		.align	2
 219              	.L9:
 220 00a0 AB430040 		.word	1073759147
 221 00a4 BB430040 		.word	1073759163
 222 00a8 03590040 		.word	1073764611
 223 00ac 06590040 		.word	1073764614
 224 00b0 05590040 		.word	1073764613
 225 00b4 00590040 		.word	1073764608
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 9


 226 00b8 14460040 		.word	1073759764
 227 00bc 275B0040 		.word	1073765159
 228              		.cfi_endproc
 229              	.LFE2:
 230              		.size	ADC_SAR_Seq_1_SAR_Enable, .-ADC_SAR_Seq_1_SAR_Enable
 231              		.section	.text.ADC_SAR_Seq_1_SAR_Stop,"ax",%progbits
 232              		.align	2
 233              		.global	ADC_SAR_Seq_1_SAR_Stop
 234              		.thumb
 235              		.thumb_func
 236              		.type	ADC_SAR_Seq_1_SAR_Stop, %function
 237              	ADC_SAR_Seq_1_SAR_Stop:
 238              	.LFB3:
 232:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 233:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 234:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** /*******************************************************************************
 235:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Function Name: ADC_SAR_Seq_1_SAR_Stop
 236:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** ********************************************************************************
 237:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 238:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Summary:
 239:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 241:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Parameters:
 242:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  None.
 243:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 244:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Return:
 245:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  None.
 246:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 247:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *******************************************************************************/
 248:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** void ADC_SAR_Seq_1_SAR_Stop(void)
 249:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** {
 239              		.loc 1 249 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 8
 242              		@ frame_needed = 1, uses_anonymous_args = 0
 243 0000 80B5     		push	{r7, lr}
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 7, -8
 246              		.cfi_offset 14, -4
 247 0002 82B0     		sub	sp, sp, #8
 248              		.cfi_def_cfa_offset 16
 249 0004 00AF     		add	r7, sp, #0
 250              		.cfi_def_cfa_register 7
 250:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     uint8 enableInterrupts;
 251:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     enableInterrupts = CyEnterCriticalSection();
 251              		.loc 1 251 0
 252 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 253 000a 0346     		mov	r3, r0
 254 000c FB71     		strb	r3, [r7, #7]
 252:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 253:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* Stop all conversions */
 254:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_SAR_CSR0_REG &= (uint8)~ADC_SAR_Seq_1_SAR_SAR_SOF_START_CONV;
 255              		.loc 1 254 0
 256 000e 0F4B     		ldr	r3, .L12
 257 0010 0E4A     		ldr	r2, .L12
 258 0012 1278     		ldrb	r2, [r2]
 259 0014 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 10


 260 0016 22F00102 		bic	r2, r2, #1
 261 001a D2B2     		uxtb	r2, r2
 262 001c 1A70     		strb	r2, [r3]
 255:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_Seq_1_SAR_ACT_PWR_SAR_EN;
 263              		.loc 1 256 0
 264 001e 0C4B     		ldr	r3, .L12+4
 265 0020 0B4A     		ldr	r2, .L12+4
 266 0022 1278     		ldrb	r2, [r2]
 267 0024 D2B2     		uxtb	r2, r2
 268 0026 22F00102 		bic	r2, r2, #1
 269 002a D2B2     		uxtb	r2, r2
 270 002c 1A70     		strb	r2, [r3]
 257:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_Seq_1_SAR_STBY_PWR_SAR_EN;
 271              		.loc 1 258 0
 272 002e 094B     		ldr	r3, .L12+8
 273 0030 084A     		ldr	r2, .L12+8
 274 0032 1278     		ldrb	r2, [r2]
 275 0034 D2B2     		uxtb	r2, r2
 276 0036 22F00102 		bic	r2, r2, #1
 277 003a D2B2     		uxtb	r2, r2
 278 003c 1A70     		strb	r2, [r3]
 259:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 260:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* This is only valid if there is an internal clock */
 261:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #if(ADC_SAR_Seq_1_SAR_DEFAULT_INTERNAL_CLK)
 262:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         ADC_SAR_Seq_1_SAR_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_Seq_1_SAR_ACT_PWR_CLK_EN;
 263:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         ADC_SAR_Seq_1_SAR_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_Seq_1_SAR_STBY_PWR_CLK_EN;
 264:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #endif /* End ADC_SAR_Seq_1_SAR_DEFAULT_INTERNAL_CLK */
 265:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 266:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     CyExitCriticalSection(enableInterrupts);
 279              		.loc 1 266 0
 280 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 281 0040 1846     		mov	r0, r3
 282 0042 FFF7FEFF 		bl	CyExitCriticalSection
 267:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 268:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** }
 283              		.loc 1 268 0
 284 0046 0837     		adds	r7, r7, #8
 285 0048 BD46     		mov	sp, r7
 286              		@ sp needed
 287 004a 80BD     		pop	{r7, pc}
 288              	.L13:
 289              		.align	2
 290              	.L12:
 291 004c 00590040 		.word	1073764608
 292 0050 AB430040 		.word	1073759147
 293 0054 BB430040 		.word	1073759163
 294              		.cfi_endproc
 295              	.LFE3:
 296              		.size	ADC_SAR_Seq_1_SAR_Stop, .-ADC_SAR_Seq_1_SAR_Stop
 297              		.section	.text.ADC_SAR_Seq_1_SAR_SetPower,"ax",%progbits
 298              		.align	2
 299              		.global	ADC_SAR_Seq_1_SAR_SetPower
 300              		.thumb
 301              		.thumb_func
 302              		.type	ADC_SAR_Seq_1_SAR_SetPower, %function
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 11


 303              	ADC_SAR_Seq_1_SAR_SetPower:
 304              	.LFB4:
 269:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 270:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 271:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** /*******************************************************************************
 272:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Function Name: ADC_SAR_Seq_1_SAR_SetPower
 273:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** ********************************************************************************
 274:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 275:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Summary:
 276:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  settings with faster clock speeds.
 278:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 279:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Parameters:
 280:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  power:  Power setting for ADC
 281:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  0 ->    Normal
 282:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  1 ->    Medium power
 283:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  2 ->    1.25 power
 284:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  3 ->    Minimum power.
 285:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 286:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Return:
 287:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  None.
 288:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 289:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *******************************************************************************/
 290:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** void ADC_SAR_Seq_1_SAR_SetPower(uint8 power)
 291:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** {
 305              		.loc 1 291 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 16
 308              		@ frame_needed = 1, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 310 0000 80B4     		push	{r7}
 311              		.cfi_def_cfa_offset 4
 312              		.cfi_offset 7, -4
 313 0002 85B0     		sub	sp, sp, #20
 314              		.cfi_def_cfa_offset 24
 315 0004 00AF     		add	r7, sp, #0
 316              		.cfi_def_cfa_register 7
 317 0006 0346     		mov	r3, r0
 318 0008 FB71     		strb	r3, [r7, #7]
 292:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     uint8 tmpReg;
 293:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 294:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* mask off invalid power settings */
 295:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     power &= ADC_SAR_Seq_1_SAR_SAR_API_POWER_MASK;
 319              		.loc 1 295 0
 320 000a FB79     		ldrb	r3, [r7, #7]
 321 000c 03F00303 		and	r3, r3, #3
 322 0010 FB71     		strb	r3, [r7, #7]
 296:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 297:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* Set Power parameter  */
 298:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     tmpReg = ADC_SAR_Seq_1_SAR_SAR_CSR0_REG & (uint8)~ADC_SAR_Seq_1_SAR_SAR_POWER_MASK;
 323              		.loc 1 298 0
 324 0012 0A4B     		ldr	r3, .L15
 325 0014 1B78     		ldrb	r3, [r3]
 326 0016 DBB2     		uxtb	r3, r3
 327 0018 03F03F03 		and	r3, r3, #63
 328 001c FB73     		strb	r3, [r7, #15]
 299:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     tmpReg |= (uint8)(power << ADC_SAR_Seq_1_SAR_SAR_POWER_SHIFT);
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 12


 329              		.loc 1 299 0
 330 001e FB79     		ldrb	r3, [r7, #7]
 331 0020 9B01     		lsls	r3, r3, #6
 332 0022 DAB2     		uxtb	r2, r3
 333 0024 FB7B     		ldrb	r3, [r7, #15]
 334 0026 1343     		orrs	r3, r3, r2
 335 0028 FB73     		strb	r3, [r7, #15]
 300:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_SAR_CSR0_REG = tmpReg;
 336              		.loc 1 300 0
 337 002a 044B     		ldr	r3, .L15
 338 002c FA7B     		ldrb	r2, [r7, #15]
 339 002e 1A70     		strb	r2, [r3]
 301:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** }
 340              		.loc 1 301 0
 341 0030 1437     		adds	r7, r7, #20
 342 0032 BD46     		mov	sp, r7
 343              		@ sp needed
 344 0034 5DF8047B 		ldr	r7, [sp], #4
 345 0038 7047     		bx	lr
 346              	.L16:
 347 003a 00BF     		.align	2
 348              	.L15:
 349 003c 00590040 		.word	1073764608
 350              		.cfi_endproc
 351              	.LFE4:
 352              		.size	ADC_SAR_Seq_1_SAR_SetPower, .-ADC_SAR_Seq_1_SAR_SetPower
 353              		.section	.text.ADC_SAR_Seq_1_SAR_SetResolution,"ax",%progbits
 354              		.align	2
 355              		.global	ADC_SAR_Seq_1_SAR_SetResolution
 356              		.thumb
 357              		.thumb_func
 358              		.type	ADC_SAR_Seq_1_SAR_SetResolution, %function
 359              	ADC_SAR_Seq_1_SAR_SetResolution:
 360              	.LFB5:
 302:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 303:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 304:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** /*******************************************************************************
 305:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Function Name: ADC_SAR_Seq_1_SAR_SetResolution
 306:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** ********************************************************************************
 307:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 308:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Summary:
 309:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  Sets the Relution of the SAR.
 310:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 311:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Parameters:
 312:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  resolution:
 313:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  12 ->    RES12
 314:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  10 ->    RES10
 315:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  8  ->    RES8
 316:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 317:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Return:
 318:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  None.
 319:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 320:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Side Effects:
 321:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  recommended best practice is to stop conversions with
 323:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  conversions with ADC_StartConvert().
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 13


 325:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  If you decide not to stop conversions before calling this API, you
 326:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  before changing the resolution.
 328:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  not be changed until the current conversion is complete. Data will not be
 330:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  clock cycles.
 332:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  You may need add a delay of this number of clock cycles after
 333:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SetResolution() is called before data is valid again.
 334:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  input range, and voltage reference.
 338:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 339:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *******************************************************************************/
 340:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** void ADC_SAR_Seq_1_SAR_SetResolution(uint8 resolution)
 341:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** {
 361              		.loc 1 341 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 16
 364              		@ frame_needed = 1, uses_anonymous_args = 0
 365 0000 80B5     		push	{r7, lr}
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 7, -8
 368              		.cfi_offset 14, -4
 369 0002 84B0     		sub	sp, sp, #16
 370              		.cfi_def_cfa_offset 24
 371 0004 00AF     		add	r7, sp, #0
 372              		.cfi_def_cfa_register 7
 373 0006 0346     		mov	r3, r0
 374 0008 FB71     		strb	r3, [r7, #7]
 342:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     uint8 tmpReg;
 343:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 344:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     switch (resolution)
 375              		.loc 1 345 0
 376 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 377 000c 0A2B     		cmp	r3, #10
 378 000e 07D0     		beq	.L19
 379 0010 0C2B     		cmp	r3, #12
 380 0012 02D0     		beq	.L20
 381 0014 082B     		cmp	r3, #8
 382 0016 06D0     		beq	.L21
 383 0018 08E0     		b	.L23
 384              	.L20:
 346:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     {
 347:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         case (uint8)ADC_SAR_Seq_1_SAR__BITS_12:
 348:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             tmpReg = ADC_SAR_Seq_1_SAR_SAR_RESOLUTION_12BIT | ADC_SAR_Seq_1_SAR_SAR_SAMPLE_WIDTH;
 385              		.loc 1 348 0
 386 001a C223     		movs	r3, #194
 387 001c FB73     		strb	r3, [r7, #15]
 349:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             break;
 388              		.loc 1 349 0
 389 001e 0BE0     		b	.L22
 390              	.L19:
 350:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         case (uint8)ADC_SAR_Seq_1_SAR__BITS_10:
 351:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             tmpReg = ADC_SAR_Seq_1_SAR_SAR_RESOLUTION_10BIT | ADC_SAR_Seq_1_SAR_SAR_SAMPLE_WIDTH;
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 14


 391              		.loc 1 351 0
 392 0020 8223     		movs	r3, #130
 393 0022 FB73     		strb	r3, [r7, #15]
 352:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             break;
 394              		.loc 1 352 0
 395 0024 08E0     		b	.L22
 396              	.L21:
 353:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         case (uint8)ADC_SAR_Seq_1_SAR__BITS_8:
 354:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             tmpReg = ADC_SAR_Seq_1_SAR_SAR_RESOLUTION_8BIT | ADC_SAR_Seq_1_SAR_SAR_SAMPLE_WIDTH;
 397              		.loc 1 354 0
 398 0026 4223     		movs	r3, #66
 399 0028 FB73     		strb	r3, [r7, #15]
 355:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             break;
 400              		.loc 1 355 0
 401 002a 05E0     		b	.L22
 402              	.L23:
 356:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         default:
 357:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             tmpReg = ADC_SAR_Seq_1_SAR_SAR_RESOLUTION_12BIT | ADC_SAR_Seq_1_SAR_SAR_SAMPLE_WIDTH;
 403              		.loc 1 357 0
 404 002c C223     		movs	r3, #194
 405 002e FB73     		strb	r3, [r7, #15]
 358:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             CYASSERT(0u != 0u);
 406              		.loc 1 359 0
 407 0030 0020     		movs	r0, #0
 408 0032 FFF7FEFF 		bl	CyHalt
 360:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             break;
 409              		.loc 1 360 0
 410 0036 00BF     		nop
 411              	.L22:
 361:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     }
 362:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_SAR_CSR2_REG = tmpReg;
 412              		.loc 1 362 0
 413 0038 044B     		ldr	r3, .L24
 414 003a FA7B     		ldrb	r2, [r7, #15]
 415 003c 1A70     		strb	r2, [r3]
 363:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 364:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****      /* Calculate gain for convert counts to volts */
 365:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_CalcGain(resolution);
 416              		.loc 1 365 0
 417 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 418 0040 1846     		mov	r0, r3
 419 0042 FFF7FEFF 		bl	ADC_SAR_Seq_1_SAR_CalcGain
 366:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** }
 420              		.loc 1 366 0
 421 0046 1037     		adds	r7, r7, #16
 422 0048 BD46     		mov	sp, r7
 423              		@ sp needed
 424 004a 80BD     		pop	{r7, pc}
 425              	.L25:
 426              		.align	2
 427              	.L24:
 428 004c 02590040 		.word	1073764610
 429              		.cfi_endproc
 430              	.LFE5:
 431              		.size	ADC_SAR_Seq_1_SAR_SetResolution, .-ADC_SAR_Seq_1_SAR_SetResolution
 432              		.section	.text.ADC_SAR_Seq_1_SAR_StartConvert,"ax",%progbits
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 15


 433              		.align	2
 434              		.global	ADC_SAR_Seq_1_SAR_StartConvert
 435              		.thumb
 436              		.thumb_func
 437              		.type	ADC_SAR_Seq_1_SAR_StartConvert, %function
 438              	ADC_SAR_Seq_1_SAR_StartConvert:
 439              	.LFB6:
 367:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 368:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 369:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** #if(ADC_SAR_Seq_1_SAR_DEFAULT_CONV_MODE != ADC_SAR_Seq_1_SAR__HARDWARE_TRIGGER)
 370:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 371:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 372:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /*******************************************************************************
 373:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     * Function Name: ADC_SAR_Seq_1_SAR_StartConvert
 374:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ********************************************************************************
 375:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *
 376:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     * Summary:
 377:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  version of the SOC and every conversion must be triggered by
 380:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  ADC_SAR_Seq_1_SAR_StartConvert(). This function is not available when the
 381:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  Hardware Trigger sample mode is selected.
 382:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *
 383:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     * Parameters:
 384:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  None.
 385:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *
 386:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     * Return:
 387:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  None.
 388:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *
 389:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     * Theory:
 390:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *
 395:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     * Side Effects:
 396:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  external pin to the internal SOF generation. Application should not call
 398:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  StartConvert if external source used for SOF.
 399:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *
 400:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *******************************************************************************/
 401:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     void ADC_SAR_Seq_1_SAR_StartConvert(void)
 402:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     {
 440              		.loc 1 402 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 1, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 445 0000 80B4     		push	{r7}
 446              		.cfi_def_cfa_offset 4
 447              		.cfi_offset 7, -4
 448 0002 00AF     		add	r7, sp, #0
 449              		.cfi_def_cfa_register 7
 403:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         #if(ADC_SAR_Seq_1_SAR_DEFAULT_CONV_MODE != ADC_SAR_Seq_1_SAR__FREE_RUNNING)  /* If software
 404:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             ADC_SAR_Seq_1_SAR_SAR_CSR0_REG &= (uint8)~ADC_SAR_Seq_1_SAR_SAR_MX_SOF_UDB;   /* source
 405:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         #endif /* End ADC_SAR_Seq_1_SAR_DEFAULT_CONV_MODE */
 406:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 16


 407:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         /* Start the conversion */
 408:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         ADC_SAR_Seq_1_SAR_SAR_CSR0_REG |= ADC_SAR_Seq_1_SAR_SAR_SOF_START_CONV;
 450              		.loc 1 408 0
 451 0004 054B     		ldr	r3, .L27
 452 0006 054A     		ldr	r2, .L27
 453 0008 1278     		ldrb	r2, [r2]
 454 000a D2B2     		uxtb	r2, r2
 455 000c 42F00102 		orr	r2, r2, #1
 456 0010 D2B2     		uxtb	r2, r2
 457 0012 1A70     		strb	r2, [r3]
 409:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     }
 458              		.loc 1 409 0
 459 0014 BD46     		mov	sp, r7
 460              		@ sp needed
 461 0016 5DF8047B 		ldr	r7, [sp], #4
 462 001a 7047     		bx	lr
 463              	.L28:
 464              		.align	2
 465              	.L27:
 466 001c 00590040 		.word	1073764608
 467              		.cfi_endproc
 468              	.LFE6:
 469              		.size	ADC_SAR_Seq_1_SAR_StartConvert, .-ADC_SAR_Seq_1_SAR_StartConvert
 470              		.section	.text.ADC_SAR_Seq_1_SAR_StopConvert,"ax",%progbits
 471              		.align	2
 472              		.global	ADC_SAR_Seq_1_SAR_StopConvert
 473              		.thumb
 474              		.thumb_func
 475              		.type	ADC_SAR_Seq_1_SAR_StopConvert, %function
 476              	ADC_SAR_Seq_1_SAR_StopConvert:
 477              	.LFB7:
 410:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 411:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 412:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /*******************************************************************************
 413:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     * Function Name: ADC_SAR_Seq_1_SAR_StopConvert
 414:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ********************************************************************************
 415:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *
 416:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     * Summary:
 417:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *
 421:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     * Parameters:
 422:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  None.
 423:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *
 424:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     * Return:
 425:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  None.
 426:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *
 427:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     * Theory:
 428:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  Stops ADC conversion in Free Running mode.
 429:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *
 430:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     * Side Effects:
 431:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  In Software Trigger sample mode, this function sets a software version of the
 432:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *
 434:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *******************************************************************************/
 435:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     void ADC_SAR_Seq_1_SAR_StopConvert(void)
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 17


 436:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     {
 478              		.loc 1 436 0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 0
 481              		@ frame_needed = 1, uses_anonymous_args = 0
 482              		@ link register save eliminated.
 483 0000 80B4     		push	{r7}
 484              		.cfi_def_cfa_offset 4
 485              		.cfi_offset 7, -4
 486 0002 00AF     		add	r7, sp, #0
 487              		.cfi_def_cfa_register 7
 437:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         /* Stop all conversions */
 438:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         ADC_SAR_Seq_1_SAR_SAR_CSR0_REG &= (uint8)~ADC_SAR_Seq_1_SAR_SAR_SOF_START_CONV;
 488              		.loc 1 438 0
 489 0004 054B     		ldr	r3, .L30
 490 0006 054A     		ldr	r2, .L30
 491 0008 1278     		ldrb	r2, [r2]
 492 000a D2B2     		uxtb	r2, r2
 493 000c 22F00102 		bic	r2, r2, #1
 494 0010 D2B2     		uxtb	r2, r2
 495 0012 1A70     		strb	r2, [r3]
 439:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 440:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         #if(ADC_SAR_Seq_1_SAR_DEFAULT_CONV_MODE != ADC_SAR_Seq_1_SAR__FREE_RUNNING)  /* If software
 441:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             /* Return source to UDB for hardware SOF signal */
 442:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             ADC_SAR_Seq_1_SAR_SAR_CSR0_REG |= ADC_SAR_Seq_1_SAR_SAR_MX_SOF_UDB;    /* source: UDB *
 443:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         #endif /* End ADC_SAR_Seq_1_SAR_DEFAULT_CONV_MODE */
 444:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 445:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     }
 496              		.loc 1 445 0
 497 0014 BD46     		mov	sp, r7
 498              		@ sp needed
 499 0016 5DF8047B 		ldr	r7, [sp], #4
 500 001a 7047     		bx	lr
 501              	.L31:
 502              		.align	2
 503              	.L30:
 504 001c 00590040 		.word	1073764608
 505              		.cfi_endproc
 506              	.LFE7:
 507              		.size	ADC_SAR_Seq_1_SAR_StopConvert, .-ADC_SAR_Seq_1_SAR_StopConvert
 508              		.section	.text.ADC_SAR_Seq_1_SAR_IsEndConversion,"ax",%progbits
 509              		.align	2
 510              		.global	ADC_SAR_Seq_1_SAR_IsEndConversion
 511              		.thumb
 512              		.thumb_func
 513              		.type	ADC_SAR_Seq_1_SAR_IsEndConversion, %function
 514              	ADC_SAR_Seq_1_SAR_IsEndConversion:
 515              	.LFB8:
 446:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 447:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** #endif /* End ADC_SAR_Seq_1_SAR_DEFAULT_CONV_MODE != ADC_SAR_Seq_1_SAR__HARDWARE_TRIGGER */
 448:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 449:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 450:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Function Name: ADC_SAR_Seq_1_SAR_IsEndConversion
 452:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 454:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Summary:
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 18


 455:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  Immediately returns the status of the conversion or does not return
 456:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  parameter.
 458:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 459:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Parameters:
 460:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  retMode:  Check conversion return mode.
 461:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *   ADC_SAR_Seq_1_SAR_RETURN_STATUS: Immediately returns the status. If the
 462:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *     value returned is zero, the conversion is not complete, and this function
 463:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *     should be retried until a nonzero result is returned.
 464:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *   ADC_SAR_Seq_1_SAR_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *     conversion is complete.
 466:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 467:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Return:
 468:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *           1 =>  The last conversion is complete.
 470:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 471:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Side Effects:
 472:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 474:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *******************************************************************************/
 475:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** uint8 ADC_SAR_Seq_1_SAR_IsEndConversion(uint8 retMode)
 476:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** {
 516              		.loc 1 476 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 16
 519              		@ frame_needed = 1, uses_anonymous_args = 0
 520 0000 80B5     		push	{r7, lr}
 521              		.cfi_def_cfa_offset 8
 522              		.cfi_offset 7, -8
 523              		.cfi_offset 14, -4
 524 0002 84B0     		sub	sp, sp, #16
 525              		.cfi_def_cfa_offset 24
 526 0004 00AF     		add	r7, sp, #0
 527              		.cfi_def_cfa_register 7
 528 0006 0346     		mov	r3, r0
 529 0008 FB71     		strb	r3, [r7, #7]
 530              	.L34:
 477:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     uint8 status;
 478:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 479:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     do
 480:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     {
 481:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         status = ADC_SAR_Seq_1_SAR_SAR_CSR1_REG & ADC_SAR_Seq_1_SAR_SAR_EOF_1;
 531              		.loc 1 481 0 discriminator 1
 532 000a 0C4B     		ldr	r3, .L37
 533 000c 1B78     		ldrb	r3, [r3]
 534 000e DBB2     		uxtb	r3, r3
 535 0010 03F00103 		and	r3, r3, #1
 536 0014 FB73     		strb	r3, [r7, #15]
 482:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     } while ((status != ADC_SAR_Seq_1_SAR_SAR_EOF_1) && (retMode == ADC_SAR_Seq_1_SAR_WAIT_FOR_RESU
 537              		.loc 1 482 0 discriminator 1
 538 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 539 0018 012B     		cmp	r3, #1
 540 001a 02D0     		beq	.L33
 541 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 542 001e 002B     		cmp	r3, #0
 543 0020 F3D0     		beq	.L34
 544              	.L33:
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 19


 483:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* If convertion complete, wait until EOF bit released */
 484:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     if(status == ADC_SAR_Seq_1_SAR_SAR_EOF_1)
 545              		.loc 1 484 0
 546 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 547 0024 012B     		cmp	r3, #1
 548 0026 04D1     		bne	.L35
 485:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     {
 486:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         CyDelayUs(1u);
 549              		.loc 1 487 0
 550 0028 0120     		movs	r0, #1
 551 002a FFF7FEFF 		bl	CyDelayUs
 488:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 489:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         CY_GET_REG8(ADC_SAR_Seq_1_SAR_SAR_CSR1_PTR);
 552              		.loc 1 489 0
 553 002e 034B     		ldr	r3, .L37
 554 0030 1B78     		ldrb	r3, [r3]
 555              	.L35:
 490:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     }
 491:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 492:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     return(status);
 556              		.loc 1 492 0
 557 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 493:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** }
 558              		.loc 1 493 0
 559 0034 1846     		mov	r0, r3
 560 0036 1037     		adds	r7, r7, #16
 561 0038 BD46     		mov	sp, r7
 562              		@ sp needed
 563 003a 80BD     		pop	{r7, pc}
 564              	.L38:
 565              		.align	2
 566              	.L37:
 567 003c 01590040 		.word	1073764609
 568              		.cfi_endproc
 569              	.LFE8:
 570              		.size	ADC_SAR_Seq_1_SAR_IsEndConversion, .-ADC_SAR_Seq_1_SAR_IsEndConversion
 571              		.section	.text.ADC_SAR_Seq_1_SAR_GetResult8,"ax",%progbits
 572              		.align	2
 573              		.global	ADC_SAR_Seq_1_SAR_GetResult8
 574              		.thumb
 575              		.thumb_func
 576              		.type	ADC_SAR_Seq_1_SAR_GetResult8, %function
 577              	ADC_SAR_Seq_1_SAR_GetResult8:
 578              	.LFB9:
 494:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 495:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 496:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** /*******************************************************************************
 497:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Function Name: ADC_SAR_Seq_1_SAR_GetResult8
 498:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** ********************************************************************************
 499:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 500:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Summary:
 501:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  than 8 bits, the function returns the LSB of the result.
 503:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_IsEndConversion() should be called to verify that the data
 504:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *   sample is ready.
 505:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 20


 506:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Parameters:
 507:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  None.
 508:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 509:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Return:
 510:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  The LSB of the last ADC conversion.
 511:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 512:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Global Variables:
 513:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_shift - used to convert the ADC counts to the 2s
 514:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  compliment form.
 515:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 516:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Side Effects:
 517:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  Converts the ADC counts to the 2s complement form.
 518:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 519:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *******************************************************************************/
 520:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** int8 ADC_SAR_Seq_1_SAR_GetResult8( void )
 521:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** {
 579              		.loc 1 521 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 1, uses_anonymous_args = 0
 583              		@ link register save eliminated.
 584 0000 80B4     		push	{r7}
 585              		.cfi_def_cfa_offset 4
 586              		.cfi_offset 7, -4
 587 0002 00AF     		add	r7, sp, #0
 588              		.cfi_def_cfa_register 7
 522:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     return( (int8)ADC_SAR_Seq_1_SAR_SAR_WRK0_REG - (int8)ADC_SAR_Seq_1_SAR_shift);
 589              		.loc 1 522 0
 590 0004 074B     		ldr	r3, .L41
 591 0006 1B78     		ldrb	r3, [r3]
 592 0008 DAB2     		uxtb	r2, r3
 593 000a 074B     		ldr	r3, .L41+4
 594 000c 1B88     		ldrh	r3, [r3]	@ movhi
 595 000e 9BB2     		uxth	r3, r3
 596 0010 DBB2     		uxtb	r3, r3
 597 0012 D31A     		subs	r3, r2, r3
 598 0014 DBB2     		uxtb	r3, r3
 599 0016 DBB2     		uxtb	r3, r3
 600 0018 5BB2     		sxtb	r3, r3
 523:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** }
 601              		.loc 1 523 0
 602 001a 1846     		mov	r0, r3
 603 001c BD46     		mov	sp, r7
 604              		@ sp needed
 605 001e 5DF8047B 		ldr	r7, [sp], #4
 606 0022 7047     		bx	lr
 607              	.L42:
 608              		.align	2
 609              	.L41:
 610 0024 A05B0040 		.word	1073765280
 611 0028 00000000 		.word	ADC_SAR_Seq_1_SAR_shift
 612              		.cfi_endproc
 613              	.LFE9:
 614              		.size	ADC_SAR_Seq_1_SAR_GetResult8, .-ADC_SAR_Seq_1_SAR_GetResult8
 615              		.section	.text.ADC_SAR_Seq_1_SAR_GetResult16,"ax",%progbits
 616              		.align	2
 617              		.global	ADC_SAR_Seq_1_SAR_GetResult16
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 21


 618              		.thumb
 619              		.thumb_func
 620              		.type	ADC_SAR_Seq_1_SAR_GetResult16, %function
 621              	ADC_SAR_Seq_1_SAR_GetResult16:
 622              	.LFB10:
 524:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 525:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 526:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** /*******************************************************************************
 527:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Function Name: ADC_SAR_Seq_1_SAR_GetResult16
 528:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** ********************************************************************************
 529:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 530:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Summary:
 531:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  of 8 to 12 bits.
 533:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_IsEndConversion() should be called to verify that the data
 534:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *   sample is ready
 535:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 536:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Parameters:
 537:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  None.
 538:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 539:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Return:
 540:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  The 16-bit result of the last ADC conversion
 541:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 542:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Global Variables:
 543:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_shift - used to convert the ADC counts to the 2s
 544:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  compliment form.
 545:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 546:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Side Effects:
 547:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  Converts the ADC counts to the 2s complement form.
 548:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 549:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *******************************************************************************/
 550:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** int16 ADC_SAR_Seq_1_SAR_GetResult16( void )
 551:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** {
 623              		.loc 1 551 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 8
 626              		@ frame_needed = 1, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 628 0000 80B4     		push	{r7}
 629              		.cfi_def_cfa_offset 4
 630              		.cfi_offset 7, -4
 631 0002 83B0     		sub	sp, sp, #12
 632              		.cfi_def_cfa_offset 16
 633 0004 00AF     		add	r7, sp, #0
 634              		.cfi_def_cfa_register 7
 552:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     uint16 res;
 553:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 554:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     res = CY_GET_REG16(ADC_SAR_Seq_1_SAR_SAR_WRK_PTR);
 635              		.loc 1 554 0
 636 0006 094B     		ldr	r3, .L45
 637 0008 1B88     		ldrh	r3, [r3]	@ movhi
 638 000a FB80     		strh	r3, [r7, #6]	@ movhi
 555:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 556:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     return( (int16)res - ADC_SAR_Seq_1_SAR_shift );
 639              		.loc 1 556 0
 640 000c 084B     		ldr	r3, .L45+4
 641 000e 1B88     		ldrh	r3, [r3]	@ movhi
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 22


 642 0010 9BB2     		uxth	r3, r3
 643 0012 9BB2     		uxth	r3, r3
 644 0014 FA88     		ldrh	r2, [r7, #6]	@ movhi
 645 0016 D31A     		subs	r3, r2, r3
 646 0018 9BB2     		uxth	r3, r3
 647 001a 9BB2     		uxth	r3, r3
 648 001c 1BB2     		sxth	r3, r3
 557:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** }
 649              		.loc 1 557 0
 650 001e 1846     		mov	r0, r3
 651 0020 0C37     		adds	r7, r7, #12
 652 0022 BD46     		mov	sp, r7
 653              		@ sp needed
 654 0024 5DF8047B 		ldr	r7, [sp], #4
 655 0028 7047     		bx	lr
 656              	.L46:
 657 002a 00BF     		.align	2
 658              	.L45:
 659 002c A05B0040 		.word	1073765280
 660 0030 00000000 		.word	ADC_SAR_Seq_1_SAR_shift
 661              		.cfi_endproc
 662              	.LFE10:
 663              		.size	ADC_SAR_Seq_1_SAR_GetResult16, .-ADC_SAR_Seq_1_SAR_GetResult16
 664              		.section	.text.ADC_SAR_Seq_1_SAR_SetOffset,"ax",%progbits
 665              		.align	2
 666              		.global	ADC_SAR_Seq_1_SAR_SetOffset
 667              		.thumb
 668              		.thumb_func
 669              		.type	ADC_SAR_Seq_1_SAR_SetOffset, %function
 670              	ADC_SAR_Seq_1_SAR_SetOffset:
 671              	.LFB11:
 558:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 559:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 560:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Function Name: ADC_SAR_Seq_1_SAR_SetOffset
 562:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** ********************************************************************************
 563:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 564:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Summary:
 565:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  Sets the ADC offset, which is used by ADC_SAR_Seq_1_SAR_CountsTo_Volts(),
 566:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_CountsTo_mVolts(), and ADC_SAR_Seq_1_SAR_CountsTo_uVolts()
 567:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  conversion.
 569:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 570:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Parameters:
 571:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****    the same input voltage.
 573:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 574:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Return:
 575:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  None.
 576:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 577:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Global Variables:
 578:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  The ADC_SAR_Seq_1_SAR_offset variable modified. This variable is used for
 579:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  offset calibration purpose.
 580:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  Affects the ADC_SAR_Seq_1_SAR_CountsTo_Volts,
 581:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_CountsTo_mVolts, ADC_SAR_Seq_1_SAR_CountsTo_uVolts functions
 582:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  by subtracting the given offset.
 583:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 23


 584:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** void ADC_SAR_Seq_1_SAR_SetOffset(int16 offset)
 586:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** {
 672              		.loc 1 586 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 8
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 677 0000 80B4     		push	{r7}
 678              		.cfi_def_cfa_offset 4
 679              		.cfi_offset 7, -4
 680 0002 83B0     		sub	sp, sp, #12
 681              		.cfi_def_cfa_offset 16
 682 0004 00AF     		add	r7, sp, #0
 683              		.cfi_def_cfa_register 7
 684 0006 0346     		mov	r3, r0
 685 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 587:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_offset = offset;
 686              		.loc 1 587 0
 687 000a 044B     		ldr	r3, .L48
 688 000c FA88     		ldrh	r2, [r7, #6]	@ movhi
 689 000e 1A80     		strh	r2, [r3]	@ movhi
 588:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** }
 690              		.loc 1 588 0
 691 0010 0C37     		adds	r7, r7, #12
 692 0012 BD46     		mov	sp, r7
 693              		@ sp needed
 694 0014 5DF8047B 		ldr	r7, [sp], #4
 695 0018 7047     		bx	lr
 696              	.L49:
 697 001a 00BF     		.align	2
 698              	.L48:
 699 001c 00000000 		.word	ADC_SAR_Seq_1_SAR_offset
 700              		.cfi_endproc
 701              	.LFE11:
 702              		.size	ADC_SAR_Seq_1_SAR_SetOffset, .-ADC_SAR_Seq_1_SAR_SetOffset
 703              		.section	.text.ADC_SAR_Seq_1_SAR_CalcGain,"ax",%progbits
 704              		.align	2
 705              		.thumb
 706              		.thumb_func
 707              		.type	ADC_SAR_Seq_1_SAR_CalcGain, %function
 708              	ADC_SAR_Seq_1_SAR_CalcGain:
 709              	.LFB12:
 589:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 590:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 591:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** /*******************************************************************************
 592:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Function Name: ADC_SAR_Seq_1_SAR_CalcGain
 593:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** ********************************************************************************
 594:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 595:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Summary:
 596:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 598:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Parameters:
 599:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  uint8: resolution
 600:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 601:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Return:
 602:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  None.
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 24


 603:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 604:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Global Variables:
 605:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_shift variable initialized. This variable is used to
 606:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  convert the ADC counts to the 2s compliment form.
 607:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_countsPer10Volt variable initialized. This variable is used
 608:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  for gain calibration purpose.
 609:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 610:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *******************************************************************************/
 611:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** static void ADC_SAR_Seq_1_SAR_CalcGain( uint8 resolution )
 612:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** {
 710              		.loc 1 612 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 16
 713              		@ frame_needed = 1, uses_anonymous_args = 0
 714 0000 80B5     		push	{r7, lr}
 715              		.cfi_def_cfa_offset 8
 716              		.cfi_offset 7, -8
 717              		.cfi_offset 14, -4
 718 0002 84B0     		sub	sp, sp, #16
 719              		.cfi_def_cfa_offset 24
 720 0004 00AF     		add	r7, sp, #0
 721              		.cfi_def_cfa_register 7
 722 0006 0346     		mov	r3, r0
 723 0008 FB71     		strb	r3, [r7, #7]
 613:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     int32 counts;
 614:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #if(!((ADC_SAR_Seq_1_SAR_DEFAULT_RANGE == ADC_SAR_Seq_1_SAR__VSS_TO_VREF) || \
 615:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****          (ADC_SAR_Seq_1_SAR_DEFAULT_RANGE == ADC_SAR_Seq_1_SAR__VSSA_TO_VDDA) || \
 616:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****          (ADC_SAR_Seq_1_SAR_DEFAULT_RANGE == ADC_SAR_Seq_1_SAR__VSSA_TO_VDAC)) )
 617:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         uint16 diff_zero;
 618:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #endif /* End ADC_SAR_Seq_1_SAR_DEFAULT_RANGE */
 619:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 620:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     switch (resolution)
 724              		.loc 1 620 0
 725 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 726 000c 0A2B     		cmp	r3, #10
 727 000e 08D0     		beq	.L52
 728 0010 0C2B     		cmp	r3, #12
 729 0012 02D0     		beq	.L53
 730 0014 082B     		cmp	r3, #8
 731 0016 08D0     		beq	.L54
 732 0018 0BE0     		b	.L56
 733              	.L53:
 621:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     {
 622:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         case (uint8)ADC_SAR_Seq_1_SAR__BITS_12:
 623:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             counts = (int32)ADC_SAR_Seq_1_SAR_SAR_WRK_MAX_12BIT;
 734              		.loc 1 623 0
 735 001a 4FF48053 		mov	r3, #4096
 736 001e FB60     		str	r3, [r7, #12]
 624:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             #if(!((ADC_SAR_Seq_1_SAR_DEFAULT_RANGE == ADC_SAR_Seq_1_SAR__VSS_TO_VREF) || \
 625:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****                  (ADC_SAR_Seq_1_SAR_DEFAULT_RANGE == ADC_SAR_Seq_1_SAR__VSSA_TO_VDDA) || \
 626:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****                  (ADC_SAR_Seq_1_SAR_DEFAULT_RANGE == ADC_SAR_Seq_1_SAR__VSSA_TO_VDAC)) )
 627:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****                 diff_zero = ADC_SAR_Seq_1_SAR_SAR_DIFF_SHIFT;
 628:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             #endif /* End ADC_SAR_Seq_1_SAR_DEFAULT_RANGE */
 629:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             break;
 737              		.loc 1 629 0
 738 0020 0DE0     		b	.L55
 739              	.L52:
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 25


 630:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         case (uint8)ADC_SAR_Seq_1_SAR__BITS_10:
 631:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             counts = (int32)ADC_SAR_Seq_1_SAR_SAR_WRK_MAX_10BIT;
 740              		.loc 1 631 0
 741 0022 4FF48063 		mov	r3, #1024
 742 0026 FB60     		str	r3, [r7, #12]
 632:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             #if(!((ADC_SAR_Seq_1_SAR_DEFAULT_RANGE == ADC_SAR_Seq_1_SAR__VSS_TO_VREF) || \
 633:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****                  (ADC_SAR_Seq_1_SAR_DEFAULT_RANGE == ADC_SAR_Seq_1_SAR__VSSA_TO_VDDA) || \
 634:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****                  (ADC_SAR_Seq_1_SAR_DEFAULT_RANGE == ADC_SAR_Seq_1_SAR__VSSA_TO_VDAC)) )
 635:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****                 diff_zero = ADC_SAR_Seq_1_SAR_SAR_DIFF_SHIFT >> 2u;
 636:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             #endif /* End ADC_SAR_Seq_1_SAR_DEFAULT_RANGE */
 637:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             break;
 743              		.loc 1 637 0
 744 0028 09E0     		b	.L55
 745              	.L54:
 638:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         case (uint8)ADC_SAR_Seq_1_SAR__BITS_8:
 639:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             counts = (int32)ADC_SAR_Seq_1_SAR_SAR_WRK_MAX_8BIT;
 746              		.loc 1 639 0
 747 002a 4FF48073 		mov	r3, #256
 748 002e FB60     		str	r3, [r7, #12]
 640:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             #if(!((ADC_SAR_Seq_1_SAR_DEFAULT_RANGE == ADC_SAR_Seq_1_SAR__VSS_TO_VREF) || \
 641:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****                  (ADC_SAR_Seq_1_SAR_DEFAULT_RANGE == ADC_SAR_Seq_1_SAR__VSSA_TO_VDDA) || \
 642:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****                  (ADC_SAR_Seq_1_SAR_DEFAULT_RANGE == ADC_SAR_Seq_1_SAR__VSSA_TO_VDAC)) )
 643:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****                 diff_zero = ADC_SAR_Seq_1_SAR_SAR_DIFF_SHIFT >> 4u;
 644:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             #endif /* End ADC_SAR_Seq_1_SAR_DEFAULT_RANGE */
 645:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             break;
 749              		.loc 1 645 0
 750 0030 05E0     		b	.L55
 751              	.L56:
 646:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             counts = 0;
 752              		.loc 1 647 0
 753 0032 0023     		movs	r3, #0
 754 0034 FB60     		str	r3, [r7, #12]
 648:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             #if(!((ADC_SAR_Seq_1_SAR_DEFAULT_RANGE == ADC_SAR_Seq_1_SAR__VSS_TO_VREF) || \
 649:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****                  (ADC_SAR_Seq_1_SAR_DEFAULT_RANGE == ADC_SAR_Seq_1_SAR__VSSA_TO_VDDA) || \
 650:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****                  (ADC_SAR_Seq_1_SAR_DEFAULT_RANGE == ADC_SAR_Seq_1_SAR__VSSA_TO_VDAC)) )
 651:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****                 diff_zero = 0u;
 652:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             #endif /* End ADC_SAR_Seq_1_SAR_DEFAULT_RANGE */
 653:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             CYASSERT(0u != 0u);
 755              		.loc 1 653 0
 756 0036 0020     		movs	r0, #0
 757 0038 FFF7FEFF 		bl	CyHalt
 654:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****             break;
 758              		.loc 1 654 0
 759 003c 00BF     		nop
 760              	.L55:
 655:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     }
 656:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_countsPerVolt = 0; /* Clear obsolete variable */
 761              		.loc 1 656 0
 762 003e 0C4B     		ldr	r3, .L57
 763 0040 0022     		movs	r2, #0
 764 0042 1A80     		strh	r2, [r3]	@ movhi
 657:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_countsPer10Volt = (((counts * ADC_SAR_Seq_1_SAR_10MV_COUNTS) +
 765              		.loc 1 658 0
 766 0044 FB68     		ldr	r3, [r7, #12]
 767 0046 42F21072 		movw	r2, #10000
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 26


 768 004a 02FB03F3 		mul	r3, r2, r3
 769 004e 03F62E13 		addw	r3, r3, #2350
 659:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****                         ADC_SAR_Seq_1_SAR_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_Seq_1_SAR_DEFAULT_REF_
 770              		.loc 1 659 0
 771 0052 084A     		ldr	r2, .L57+4
 772 0054 82FB0312 		smull	r1, r2, r2, r3
 773 0058 9212     		asrs	r2, r2, #10
 774 005a DB17     		asrs	r3, r3, #31
 775 005c D21A     		subs	r2, r2, r3
 658:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_countsPer10Volt = (((counts * ADC_SAR_Seq_1_SAR_10MV_COUNTS) +
 776              		.loc 1 658 0
 777 005e 064B     		ldr	r3, .L57+8
 778 0060 1A60     		str	r2, [r3]
 660:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 661:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #if( (ADC_SAR_Seq_1_SAR_DEFAULT_RANGE == ADC_SAR_Seq_1_SAR__VSS_TO_VREF) || \
 662:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****          (ADC_SAR_Seq_1_SAR_DEFAULT_RANGE == ADC_SAR_Seq_1_SAR__VSSA_TO_VDDA) || \
 663:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****          (ADC_SAR_Seq_1_SAR_DEFAULT_RANGE == ADC_SAR_Seq_1_SAR__VSSA_TO_VDAC) )
 664:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         ADC_SAR_Seq_1_SAR_shift = 0;
 779              		.loc 1 664 0
 780 0062 064B     		ldr	r3, .L57+12
 781 0064 0022     		movs	r2, #0
 782 0066 1A80     		strh	r2, [r3]	@ movhi
 665:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #else
 666:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         ADC_SAR_Seq_1_SAR_shift = diff_zero;
 667:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     #endif /* End ADC_SAR_Seq_1_SAR_DEFAULT_RANGE */
 668:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** }
 783              		.loc 1 668 0
 784 0068 1037     		adds	r7, r7, #16
 785 006a BD46     		mov	sp, r7
 786              		@ sp needed
 787 006c 80BD     		pop	{r7, pc}
 788              	.L58:
 789 006e 00BF     		.align	2
 790              	.L57:
 791 0070 00000000 		.word	ADC_SAR_Seq_1_SAR_countsPerVolt
 792 0074 517BC637 		.word	935754577
 793 0078 00000000 		.word	ADC_SAR_Seq_1_SAR_countsPer10Volt
 794 007c 00000000 		.word	ADC_SAR_Seq_1_SAR_shift
 795              		.cfi_endproc
 796              	.LFE12:
 797              		.size	ADC_SAR_Seq_1_SAR_CalcGain, .-ADC_SAR_Seq_1_SAR_CalcGain
 798              		.section	.text.ADC_SAR_Seq_1_SAR_SetGain,"ax",%progbits
 799              		.align	2
 800              		.global	ADC_SAR_Seq_1_SAR_SetGain
 801              		.thumb
 802              		.thumb_func
 803              		.type	ADC_SAR_Seq_1_SAR_SetGain, %function
 804              	ADC_SAR_Seq_1_SAR_SetGain:
 805              	.LFB13:
 669:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 670:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 671:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Function Name: ADC_SAR_Seq_1_SAR_SetGain
 673:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** ********************************************************************************
 674:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 675:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Summary:
 676:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 27


 677:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  that follow. This value is set by default by the reference and input range
 678:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  input or if the ADC is using an external reference.
 680:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 681:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Parameters:
 682:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  int16 adcGain counts per volt
 683:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 684:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Return:
 685:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  None.
 686:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 687:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Global Variables:
 688:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_countsPer10Volt variable modified. This variable is used
 689:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  for gain calibration purpose.
 690:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 691:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *******************************************************************************/
 692:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** void ADC_SAR_Seq_1_SAR_SetGain(int16 adcGain)
 693:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** {
 806              		.loc 1 693 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 8
 809              		@ frame_needed = 1, uses_anonymous_args = 0
 810              		@ link register save eliminated.
 811 0000 80B4     		push	{r7}
 812              		.cfi_def_cfa_offset 4
 813              		.cfi_offset 7, -4
 814 0002 83B0     		sub	sp, sp, #12
 815              		.cfi_def_cfa_offset 16
 816 0004 00AF     		add	r7, sp, #0
 817              		.cfi_def_cfa_register 7
 818 0006 0346     		mov	r3, r0
 819 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 694:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_countsPer10Volt = (int32)adcGain * 10;
 820              		.loc 1 694 0
 821 000a B7F90620 		ldrsh	r2, [r7, #6]
 822 000e 1346     		mov	r3, r2
 823 0010 9B00     		lsls	r3, r3, #2
 824 0012 1344     		add	r3, r3, r2
 825 0014 5B00     		lsls	r3, r3, #1
 826 0016 1A46     		mov	r2, r3
 827 0018 034B     		ldr	r3, .L60
 828 001a 1A60     		str	r2, [r3]
 695:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** }
 829              		.loc 1 695 0
 830 001c 0C37     		adds	r7, r7, #12
 831 001e BD46     		mov	sp, r7
 832              		@ sp needed
 833 0020 5DF8047B 		ldr	r7, [sp], #4
 834 0024 7047     		bx	lr
 835              	.L61:
 836 0026 00BF     		.align	2
 837              	.L60:
 838 0028 00000000 		.word	ADC_SAR_Seq_1_SAR_countsPer10Volt
 839              		.cfi_endproc
 840              	.LFE13:
 841              		.size	ADC_SAR_Seq_1_SAR_SetGain, .-ADC_SAR_Seq_1_SAR_SetGain
 842              		.section	.text.ADC_SAR_Seq_1_SAR_SetScaledGain,"ax",%progbits
 843              		.align	2
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 28


 844              		.global	ADC_SAR_Seq_1_SAR_SetScaledGain
 845              		.thumb
 846              		.thumb_func
 847              		.type	ADC_SAR_Seq_1_SAR_SetScaledGain, %function
 848              	ADC_SAR_Seq_1_SAR_SetScaledGain:
 849              	.LFB14:
 696:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 697:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 698:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Function Name: ADC_SAR_Seq_1_SAR_SetScaledGain
 700:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** ********************************************************************************
 701:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 702:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Summary:
 703:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  that follow. This value is set by default by the reference and input range
 705:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  input or if the ADC is using an external reference.
 707:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 708:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Parameters:
 709:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  int32 adcGain  counts per 10 volt
 710:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 711:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Return:
 712:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  None.
 713:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 714:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Global Variables:
 715:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_countsPer10Volt variable modified. This variable is used
 716:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  for gain calibration purpose.
 717:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 718:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *******************************************************************************/
 719:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** void ADC_SAR_Seq_1_SAR_SetScaledGain(int32 adcGain)
 720:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** {
 850              		.loc 1 720 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 8
 853              		@ frame_needed = 1, uses_anonymous_args = 0
 854              		@ link register save eliminated.
 855 0000 80B4     		push	{r7}
 856              		.cfi_def_cfa_offset 4
 857              		.cfi_offset 7, -4
 858 0002 83B0     		sub	sp, sp, #12
 859              		.cfi_def_cfa_offset 16
 860 0004 00AF     		add	r7, sp, #0
 861              		.cfi_def_cfa_register 7
 862 0006 7860     		str	r0, [r7, #4]
 721:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     ADC_SAR_Seq_1_SAR_countsPer10Volt = adcGain;
 863              		.loc 1 721 0
 864 0008 034B     		ldr	r3, .L63
 865 000a 7A68     		ldr	r2, [r7, #4]
 866 000c 1A60     		str	r2, [r3]
 722:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** }
 867              		.loc 1 722 0
 868 000e 0C37     		adds	r7, r7, #12
 869 0010 BD46     		mov	sp, r7
 870              		@ sp needed
 871 0012 5DF8047B 		ldr	r7, [sp], #4
 872 0016 7047     		bx	lr
 873              	.L64:
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 29


 874              		.align	2
 875              	.L63:
 876 0018 00000000 		.word	ADC_SAR_Seq_1_SAR_countsPer10Volt
 877              		.cfi_endproc
 878              	.LFE14:
 879              		.size	ADC_SAR_Seq_1_SAR_SetScaledGain, .-ADC_SAR_Seq_1_SAR_SetScaledGain
 880              		.section	.text.ADC_SAR_Seq_1_SAR_CountsTo_mVolts,"ax",%progbits
 881              		.align	2
 882              		.global	ADC_SAR_Seq_1_SAR_CountsTo_mVolts
 883              		.thumb
 884              		.thumb_func
 885              		.type	ADC_SAR_Seq_1_SAR_CountsTo_mVolts, %function
 886              	ADC_SAR_Seq_1_SAR_CountsTo_mVolts:
 887              	.LFB15:
 723:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 724:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 725:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** /*******************************************************************************
 726:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Function Name: ADC_SAR_Seq_1_SAR_CountsTo_mVolts
 727:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** ********************************************************************************
 728:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 729:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Summary:
 730:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 732:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Parameters:
 733:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 735:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Return:
 736:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  int16 Result in mVolts
 737:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 738:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Global Variables:
 739:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_offset variable used.
 740:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_countsPer10Volt variable used.
 741:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 742:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *******************************************************************************/
 743:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** int16 ADC_SAR_Seq_1_SAR_CountsTo_mVolts(int16 adcCounts)
 744:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** {
 888              		.loc 1 744 0
 889              		.cfi_startproc
 890              		@ args = 0, pretend = 0, frame = 16
 891              		@ frame_needed = 1, uses_anonymous_args = 0
 892              		@ link register save eliminated.
 893 0000 80B4     		push	{r7}
 894              		.cfi_def_cfa_offset 4
 895              		.cfi_offset 7, -4
 896 0002 85B0     		sub	sp, sp, #20
 897              		.cfi_def_cfa_offset 24
 898 0004 00AF     		add	r7, sp, #0
 899              		.cfi_def_cfa_register 7
 900 0006 0346     		mov	r3, r0
 901 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 745:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     int16 mVolts;
 746:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     int32 countsPer10Volt;
 747:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 748:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     if(ADC_SAR_Seq_1_SAR_countsPerVolt != 0)
 902              		.loc 1 748 0
 903 000a 1D4B     		ldr	r3, .L71
 904 000c 1B88     		ldrh	r3, [r3]	@ movhi
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 30


 905 000e 9BB2     		uxth	r3, r3
 906 0010 002B     		cmp	r3, #0
 907 0012 09D0     		beq	.L66
 749:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     {   /* Support obsolete method */
 750:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         countsPer10Volt = (int32)ADC_SAR_Seq_1_SAR_countsPerVolt * 10;
 908              		.loc 1 750 0
 909 0014 1A4B     		ldr	r3, .L71
 910 0016 1B88     		ldrh	r3, [r3]	@ movhi
 911 0018 9BB2     		uxth	r3, r3
 912 001a 1AB2     		sxth	r2, r3
 913 001c 1346     		mov	r3, r2
 914 001e 9B00     		lsls	r3, r3, #2
 915 0020 1344     		add	r3, r3, r2
 916 0022 5B00     		lsls	r3, r3, #1
 917 0024 FB60     		str	r3, [r7, #12]
 918 0026 02E0     		b	.L67
 919              	.L66:
 751:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     }
 752:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     else
 753:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     {
 754:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         countsPer10Volt = ADC_SAR_Seq_1_SAR_countsPer10Volt;
 920              		.loc 1 754 0
 921 0028 164B     		ldr	r3, .L71+4
 922 002a 1B68     		ldr	r3, [r3]
 923 002c FB60     		str	r3, [r7, #12]
 924              	.L67:
 755:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     }
 756:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 757:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* Subtract ADC offset */
 758:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     adcCounts -= ADC_SAR_Seq_1_SAR_offset;
 925              		.loc 1 758 0
 926 002e FA88     		ldrh	r2, [r7, #6]
 927 0030 154B     		ldr	r3, .L71+8
 928 0032 1B88     		ldrh	r3, [r3]	@ movhi
 929 0034 9BB2     		uxth	r3, r3
 930 0036 9BB2     		uxth	r3, r3
 931 0038 D31A     		subs	r3, r2, r3
 932 003a 9BB2     		uxth	r3, r3
 933 003c FB80     		strh	r3, [r7, #6]	@ movhi
 759:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* Convert to millivolts with rounding */
 760:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_SAR_Seq_1_SAR_10MV_COUNTS ) + ( (adcCounts > 0) ?
 934              		.loc 1 760 0
 935 003e B7F90630 		ldrsh	r3, [r7, #6]
 936 0042 42F21072 		movw	r2, #10000
 937 0046 02FB03F2 		mul	r2, r2, r3
 761:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 938              		.loc 1 761 0
 939 004a B7F90630 		ldrsh	r3, [r7, #6]
 940 004e 002B     		cmp	r3, #0
 941 0050 04DD     		ble	.L68
 942              		.loc 1 761 0 is_stmt 0 discriminator 1
 943 0052 FB68     		ldr	r3, [r7, #12]
 944 0054 D90F     		lsrs	r1, r3, #31
 945 0056 0B44     		add	r3, r3, r1
 946 0058 5B10     		asrs	r3, r3, #1
 947 005a 04E0     		b	.L69
 948              	.L68:
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 31


 949              		.loc 1 761 0 discriminator 2
 950 005c FB68     		ldr	r3, [r7, #12]
 951 005e D90F     		lsrs	r1, r3, #31
 952 0060 0B44     		add	r3, r3, r1
 953 0062 5B10     		asrs	r3, r3, #1
 954 0064 5B42     		negs	r3, r3
 955              	.L69:
 760:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_SAR_Seq_1_SAR_10MV_COUNTS ) + ( (adcCounts > 0) ?
 956              		.loc 1 760 0 is_stmt 1
 957 0066 1A44     		add	r2, r2, r3
 958              		.loc 1 761 0
 959 0068 FB68     		ldr	r3, [r7, #12]
 960 006a 92FBF3F3 		sdiv	r3, r2, r3
 760:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_SAR_Seq_1_SAR_10MV_COUNTS ) + ( (adcCounts > 0) ?
 961              		.loc 1 760 0
 962 006e 7B81     		strh	r3, [r7, #10]	@ movhi
 762:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 763:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     return( mVolts );
 963              		.loc 1 763 0
 964 0070 7B89     		ldrh	r3, [r7, #10]
 965 0072 1BB2     		sxth	r3, r3
 764:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** }
 966              		.loc 1 764 0
 967 0074 1846     		mov	r0, r3
 968 0076 1437     		adds	r7, r7, #20
 969 0078 BD46     		mov	sp, r7
 970              		@ sp needed
 971 007a 5DF8047B 		ldr	r7, [sp], #4
 972 007e 7047     		bx	lr
 973              	.L72:
 974              		.align	2
 975              	.L71:
 976 0080 00000000 		.word	ADC_SAR_Seq_1_SAR_countsPerVolt
 977 0084 00000000 		.word	ADC_SAR_Seq_1_SAR_countsPer10Volt
 978 0088 00000000 		.word	ADC_SAR_Seq_1_SAR_offset
 979              		.cfi_endproc
 980              	.LFE15:
 981              		.size	ADC_SAR_Seq_1_SAR_CountsTo_mVolts, .-ADC_SAR_Seq_1_SAR_CountsTo_mVolts
 982              		.global	__aeabi_ldivmod
 983              		.section	.text.ADC_SAR_Seq_1_SAR_CountsTo_uVolts,"ax",%progbits
 984              		.align	2
 985              		.global	ADC_SAR_Seq_1_SAR_CountsTo_uVolts
 986              		.thumb
 987              		.thumb_func
 988              		.type	ADC_SAR_Seq_1_SAR_CountsTo_uVolts, %function
 989              	ADC_SAR_Seq_1_SAR_CountsTo_uVolts:
 990              	.LFB16:
 765:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 766:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 767:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** /*******************************************************************************
 768:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Function Name: ADC_SAR_Seq_1_SAR_CountsTo_uVolts
 769:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** ********************************************************************************
 770:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 771:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Summary:
 772:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 774:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Parameters:
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 32


 775:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  int16 adcCounts: Result from the ADC conversion
 776:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 777:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Return:
 778:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  int32 Result in micro Volts
 779:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 780:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Global Variables:
 781:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_offset variable used.
 782:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_countsPer10Volt used to convert ADC counts to uVolts.
 783:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 784:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *******************************************************************************/
 785:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** int32 ADC_SAR_Seq_1_SAR_CountsTo_uVolts(int16 adcCounts)
 786:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** {
 991              		.loc 1 786 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 24
 994              		@ frame_needed = 1, uses_anonymous_args = 0
 995 0000 B0B5     		push	{r4, r5, r7, lr}
 996              		.cfi_def_cfa_offset 16
 997              		.cfi_offset 4, -16
 998              		.cfi_offset 5, -12
 999              		.cfi_offset 7, -8
 1000              		.cfi_offset 14, -4
 1001 0002 86B0     		sub	sp, sp, #24
 1002              		.cfi_def_cfa_offset 40
 1003 0004 00AF     		add	r7, sp, #0
 1004              		.cfi_def_cfa_register 7
 1005 0006 0346     		mov	r3, r0
 1006 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 787:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 788:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     int64 uVolts;
 789:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     int32 countsPer10Volt;
 790:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 791:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     if(ADC_SAR_Seq_1_SAR_countsPerVolt != 0)
 1007              		.loc 1 791 0
 1008 000a 1E4B     		ldr	r3, .L77
 1009 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1010 000e 9BB2     		uxth	r3, r3
 1011 0010 002B     		cmp	r3, #0
 1012 0012 09D0     		beq	.L74
 792:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     {   /* Support obsolete method */
 793:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         countsPer10Volt = (int32)ADC_SAR_Seq_1_SAR_countsPerVolt * 10;
 1013              		.loc 1 793 0
 1014 0014 1B4B     		ldr	r3, .L77
 1015 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1016 0018 9BB2     		uxth	r3, r3
 1017 001a 1AB2     		sxth	r2, r3
 1018 001c 1346     		mov	r3, r2
 1019 001e 9B00     		lsls	r3, r3, #2
 1020 0020 1344     		add	r3, r3, r2
 1021 0022 5B00     		lsls	r3, r3, #1
 1022 0024 7B61     		str	r3, [r7, #20]
 1023 0026 02E0     		b	.L75
 1024              	.L74:
 794:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     }
 795:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     else
 796:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     {
 797:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         countsPer10Volt = ADC_SAR_Seq_1_SAR_countsPer10Volt;
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 33


 1025              		.loc 1 797 0
 1026 0028 174B     		ldr	r3, .L77+4
 1027 002a 1B68     		ldr	r3, [r3]
 1028 002c 7B61     		str	r3, [r7, #20]
 1029              	.L75:
 798:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     }
 799:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 800:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* Subtract ADC offset */
 801:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     adcCounts -= ADC_SAR_Seq_1_SAR_offset;
 1030              		.loc 1 801 0
 1031 002e FA88     		ldrh	r2, [r7, #6]
 1032 0030 164B     		ldr	r3, .L77+8
 1033 0032 1B88     		ldrh	r3, [r3]	@ movhi
 1034 0034 9BB2     		uxth	r3, r3
 1035 0036 9BB2     		uxth	r3, r3
 1036 0038 D31A     		subs	r3, r2, r3
 1037 003a 9BB2     		uxth	r3, r3
 1038 003c FB80     		strh	r3, [r7, #6]	@ movhi
 802:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     */
 805:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     uVolts = (( (int64)adcCounts * ADC_SAR_Seq_1_SAR_10UV_COUNTS ) / countsPer10Volt);
 1039              		.loc 1 805 0
 1040 003e B7F90620 		ldrsh	r2, [r7, #6]
 1041 0042 4FEAE273 		asr	r3, r2, #31
 1042 0046 1249     		ldr	r1, .L77+12
 1043 0048 01FB03F0 		mul	r0, r1, r3
 1044 004c 0021     		movs	r1, #0
 1045 004e 01FB02F1 		mul	r1, r1, r2
 1046 0052 0144     		add	r1, r1, r0
 1047 0054 0E48     		ldr	r0, .L77+12
 1048 0056 A2FB0023 		umull	r2, r3, r2, r0
 1049 005a 1944     		add	r1, r1, r3
 1050 005c 0B46     		mov	r3, r1
 1051 005e 7969     		ldr	r1, [r7, #20]
 1052 0060 0C46     		mov	r4, r1
 1053 0062 4FEAE475 		asr	r5, r4, #31
 1054 0066 1046     		mov	r0, r2
 1055 0068 1946     		mov	r1, r3
 1056 006a 2246     		mov	r2, r4
 1057 006c 2B46     		mov	r3, r5
 1058 006e FFF7FEFF 		bl	__aeabi_ldivmod
 1059 0072 0246     		mov	r2, r0
 1060 0074 0B46     		mov	r3, r1
 1061 0076 C7E90223 		strd	r2, [r7, #8]
 806:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 807:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     return( uVolts );
 1062              		.loc 1 807 0
 1063 007a BB68     		ldr	r3, [r7, #8]
 808:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** }
 1064              		.loc 1 808 0
 1065 007c 1846     		mov	r0, r3
 1066 007e 1837     		adds	r7, r7, #24
 1067 0080 BD46     		mov	sp, r7
 1068              		@ sp needed
 1069 0082 B0BD     		pop	{r4, r5, r7, pc}
 1070              	.L78:
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 34


 1071              		.align	2
 1072              	.L77:
 1073 0084 00000000 		.word	ADC_SAR_Seq_1_SAR_countsPerVolt
 1074 0088 00000000 		.word	ADC_SAR_Seq_1_SAR_countsPer10Volt
 1075 008c 00000000 		.word	ADC_SAR_Seq_1_SAR_offset
 1076 0090 80969800 		.word	10000000
 1077              		.cfi_endproc
 1078              	.LFE16:
 1079              		.size	ADC_SAR_Seq_1_SAR_CountsTo_uVolts, .-ADC_SAR_Seq_1_SAR_CountsTo_uVolts
 1080              		.global	__aeabi_i2f
 1081              		.global	__aeabi_fmul
 1082              		.global	__aeabi_fdiv
 1083              		.section	.text.ADC_SAR_Seq_1_SAR_CountsTo_Volts,"ax",%progbits
 1084              		.align	2
 1085              		.global	ADC_SAR_Seq_1_SAR_CountsTo_Volts
 1086              		.thumb
 1087              		.thumb_func
 1088              		.type	ADC_SAR_Seq_1_SAR_CountsTo_Volts, %function
 1089              	ADC_SAR_Seq_1_SAR_CountsTo_Volts:
 1090              	.LFB17:
 809:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 810:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 811:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** /*******************************************************************************
 812:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Function Name: ADC_SAR_Seq_1_SAR_CountsTo_Volts
 813:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** ********************************************************************************
 814:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 815:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Summary:
 816:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  Converts the ADC output to volts as a floating-point number.
 817:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 818:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Parameters:
 819:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  int16 adcCounts: Result from the ADC conversion
 820:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 821:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Return:
 822:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  float Result in Volts
 823:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 824:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** * Global Variables:
 825:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_offset variable used.
 826:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *  ADC_SAR_Seq_1_SAR_countsPer10Volt used to convert ADC counts to Volts.
 827:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *
 828:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** float32 ADC_SAR_Seq_1_SAR_CountsTo_Volts(int16 adcCounts)
 830:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** {
 1091              		.loc 1 830 0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 16
 1094              		@ frame_needed = 1, uses_anonymous_args = 0
 1095 0000 90B5     		push	{r4, r7, lr}
 1096              		.cfi_def_cfa_offset 12
 1097              		.cfi_offset 4, -12
 1098              		.cfi_offset 7, -8
 1099              		.cfi_offset 14, -4
 1100 0002 85B0     		sub	sp, sp, #20
 1101              		.cfi_def_cfa_offset 32
 1102 0004 00AF     		add	r7, sp, #0
 1103              		.cfi_def_cfa_register 7
 1104 0006 0346     		mov	r3, r0
 1105 0008 FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 35


 831:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     float32 volts;
 832:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     int32 countsPer10Volt;
 833:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 834:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     if(ADC_SAR_Seq_1_SAR_countsPerVolt != 0)
 1106              		.loc 1 834 0
 1107 000a 1A4B     		ldr	r3, .L83
 1108 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1109 000e 9BB2     		uxth	r3, r3
 1110 0010 002B     		cmp	r3, #0
 1111 0012 09D0     		beq	.L80
 835:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     {   /* Support obsolete method */
 836:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         countsPer10Volt = (int32)ADC_SAR_Seq_1_SAR_countsPerVolt * 10;
 1112              		.loc 1 836 0
 1113 0014 174B     		ldr	r3, .L83
 1114 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1115 0018 9BB2     		uxth	r3, r3
 1116 001a 1AB2     		sxth	r2, r3
 1117 001c 1346     		mov	r3, r2
 1118 001e 9B00     		lsls	r3, r3, #2
 1119 0020 1344     		add	r3, r3, r2
 1120 0022 5B00     		lsls	r3, r3, #1
 1121 0024 FB60     		str	r3, [r7, #12]
 1122 0026 02E0     		b	.L81
 1123              	.L80:
 837:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     }
 838:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     else
 839:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     {
 840:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****         countsPer10Volt = ADC_SAR_Seq_1_SAR_countsPer10Volt;
 1124              		.loc 1 840 0
 1125 0028 134B     		ldr	r3, .L83+4
 1126 002a 1B68     		ldr	r3, [r3]
 1127 002c FB60     		str	r3, [r7, #12]
 1128              	.L81:
 841:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     }
 842:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 843:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     /* Subtract ADC offset */
 844:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     adcCounts -= ADC_SAR_Seq_1_SAR_offset;
 1129              		.loc 1 844 0
 1130 002e FA88     		ldrh	r2, [r7, #6]
 1131 0030 124B     		ldr	r3, .L83+8
 1132 0032 1B88     		ldrh	r3, [r3]	@ movhi
 1133 0034 9BB2     		uxth	r3, r3
 1134 0036 9BB2     		uxth	r3, r3
 1135 0038 D31A     		subs	r3, r2, r3
 1136 003a 9BB2     		uxth	r3, r3
 1137 003c FB80     		strh	r3, [r7, #6]	@ movhi
 845:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 846:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     volts = ((float32)adcCounts * ADC_SAR_Seq_1_SAR_10V_COUNTS) / (float32)countsPer10Volt;
 1138              		.loc 1 846 0
 1139 003e B7F90630 		ldrsh	r3, [r7, #6]
 1140 0042 1846     		mov	r0, r3
 1141 0044 FFF7FEFF 		bl	__aeabi_i2f
 1142 0048 0346     		mov	r3, r0
 1143 004a 1846     		mov	r0, r3
 1144 004c 0C49     		ldr	r1, .L83+12
 1145 004e FFF7FEFF 		bl	__aeabi_fmul
 1146 0052 0346     		mov	r3, r0
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 36


 1147 0054 1C46     		mov	r4, r3
 1148 0056 F868     		ldr	r0, [r7, #12]
 1149 0058 FFF7FEFF 		bl	__aeabi_i2f
 1150 005c 0346     		mov	r3, r0
 1151 005e 2046     		mov	r0, r4
 1152 0060 1946     		mov	r1, r3
 1153 0062 FFF7FEFF 		bl	__aeabi_fdiv
 1154 0066 0346     		mov	r3, r0
 1155 0068 BB60     		str	r3, [r7, #8]	@ float
 847:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** 
 848:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c ****     return( volts );
 1156              		.loc 1 848 0
 1157 006a BB68     		ldr	r3, [r7, #8]	@ float
 849:.\Generated_Source\PSoC5/ADC_SAR_Seq_1_SAR.c **** }
 1158              		.loc 1 849 0
 1159 006c 1846     		mov	r0, r3
 1160 006e 1437     		adds	r7, r7, #20
 1161 0070 BD46     		mov	sp, r7
 1162              		@ sp needed
 1163 0072 90BD     		pop	{r4, r7, pc}
 1164              	.L84:
 1165              		.align	2
 1166              	.L83:
 1167 0074 00000000 		.word	ADC_SAR_Seq_1_SAR_countsPerVolt
 1168 0078 00000000 		.word	ADC_SAR_Seq_1_SAR_countsPer10Volt
 1169 007c 00000000 		.word	ADC_SAR_Seq_1_SAR_offset
 1170 0080 00002041 		.word	1092616192
 1171              		.cfi_endproc
 1172              	.LFE17:
 1173              		.size	ADC_SAR_Seq_1_SAR_CountsTo_Volts, .-ADC_SAR_Seq_1_SAR_CountsTo_Volts
 1174              		.text
 1175              	.Letext0:
 1176              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1177              		.section	.debug_info,"",%progbits
 1178              	.Ldebug_info0:
 1179 0000 50040000 		.4byte	0x450
 1180 0004 0400     		.2byte	0x4
 1181 0006 00000000 		.4byte	.Ldebug_abbrev0
 1182 000a 04       		.byte	0x4
 1183 000b 01       		.uleb128 0x1
 1184 000c 57020000 		.4byte	.LASF57
 1185 0010 01       		.byte	0x1
 1186 0011 CD000000 		.4byte	.LASF58
 1187 0015 D1030000 		.4byte	.LASF59
 1188 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1189 001d 00000000 		.4byte	0
 1190 0021 00000000 		.4byte	.Ldebug_line0
 1191 0025 02       		.uleb128 0x2
 1192 0026 04       		.byte	0x4
 1193 0027 05       		.byte	0x5
 1194 0028 696E7400 		.ascii	"int\000"
 1195 002c 03       		.uleb128 0x3
 1196 002d 04       		.byte	0x4
 1197 002e 07       		.byte	0x7
 1198 002f 8F010000 		.4byte	.LASF0
 1199 0033 03       		.uleb128 0x3
 1200 0034 01       		.byte	0x1
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 37


 1201 0035 06       		.byte	0x6
 1202 0036 92000000 		.4byte	.LASF1
 1203 003a 03       		.uleb128 0x3
 1204 003b 01       		.byte	0x1
 1205 003c 08       		.byte	0x8
 1206 003d 39030000 		.4byte	.LASF2
 1207 0041 03       		.uleb128 0x3
 1208 0042 02       		.byte	0x2
 1209 0043 05       		.byte	0x5
 1210 0044 67030000 		.4byte	.LASF3
 1211 0048 03       		.uleb128 0x3
 1212 0049 02       		.byte	0x2
 1213 004a 07       		.byte	0x7
 1214 004b D5010000 		.4byte	.LASF4
 1215 004f 03       		.uleb128 0x3
 1216 0050 04       		.byte	0x4
 1217 0051 05       		.byte	0x5
 1218 0052 C4000000 		.4byte	.LASF5
 1219 0056 03       		.uleb128 0x3
 1220 0057 04       		.byte	0x4
 1221 0058 07       		.byte	0x7
 1222 0059 BD010000 		.4byte	.LASF6
 1223 005d 03       		.uleb128 0x3
 1224 005e 08       		.byte	0x8
 1225 005f 05       		.byte	0x5
 1226 0060 84000000 		.4byte	.LASF7
 1227 0064 03       		.uleb128 0x3
 1228 0065 08       		.byte	0x8
 1229 0066 07       		.byte	0x7
 1230 0067 6D000000 		.4byte	.LASF8
 1231 006b 03       		.uleb128 0x3
 1232 006c 04       		.byte	0x4
 1233 006d 07       		.byte	0x7
 1234 006e 35020000 		.4byte	.LASF9
 1235 0072 03       		.uleb128 0x3
 1236 0073 01       		.byte	0x1
 1237 0074 08       		.byte	0x8
 1238 0075 35040000 		.4byte	.LASF10
 1239 0079 04       		.uleb128 0x4
 1240 007a 1F010000 		.4byte	.LASF11
 1241 007e 02       		.byte	0x2
 1242 007f A1       		.byte	0xa1
 1243 0080 3A000000 		.4byte	0x3a
 1244 0084 04       		.uleb128 0x4
 1245 0085 00000000 		.4byte	.LASF12
 1246 0089 02       		.byte	0x2
 1247 008a A2       		.byte	0xa2
 1248 008b 48000000 		.4byte	0x48
 1249 008f 04       		.uleb128 0x4
 1250 0090 E8010000 		.4byte	.LASF13
 1251 0094 02       		.byte	0x2
 1252 0095 A4       		.byte	0xa4
 1253 0096 33000000 		.4byte	0x33
 1254 009a 04       		.uleb128 0x4
 1255 009b 8F040000 		.4byte	.LASF14
 1256 009f 02       		.byte	0x2
 1257 00a0 A5       		.byte	0xa5
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 38


 1258 00a1 41000000 		.4byte	0x41
 1259 00a5 04       		.uleb128 0x4
 1260 00a6 9E000000 		.4byte	.LASF15
 1261 00aa 02       		.byte	0x2
 1262 00ab A6       		.byte	0xa6
 1263 00ac 4F000000 		.4byte	0x4f
 1264 00b0 04       		.uleb128 0x4
 1265 00b1 2D020000 		.4byte	.LASF16
 1266 00b5 02       		.byte	0x2
 1267 00b6 A7       		.byte	0xa7
 1268 00b7 BB000000 		.4byte	0xbb
 1269 00bb 03       		.uleb128 0x3
 1270 00bc 04       		.byte	0x4
 1271 00bd 04       		.byte	0x4
 1272 00be D9020000 		.4byte	.LASF17
 1273 00c2 03       		.uleb128 0x3
 1274 00c3 08       		.byte	0x8
 1275 00c4 04       		.byte	0x4
 1276 00c5 25010000 		.4byte	.LASF18
 1277 00c9 04       		.uleb128 0x4
 1278 00ca D3020000 		.4byte	.LASF19
 1279 00ce 02       		.byte	0x2
 1280 00cf AC       		.byte	0xac
 1281 00d0 5D000000 		.4byte	0x5d
 1282 00d4 05       		.uleb128 0x5
 1283 00d5 1A030000 		.4byte	.LASF20
 1284 00d9 02       		.byte	0x2
 1285 00da 4B01     		.2byte	0x14b
 1286 00dc E0000000 		.4byte	0xe0
 1287 00e0 06       		.uleb128 0x6
 1288 00e1 79000000 		.4byte	0x79
 1289 00e5 05       		.uleb128 0x5
 1290 00e6 19010000 		.4byte	.LASF21
 1291 00ea 02       		.byte	0x2
 1292 00eb 4C01     		.2byte	0x14c
 1293 00ed F1000000 		.4byte	0xf1
 1294 00f1 06       		.uleb128 0x6
 1295 00f2 84000000 		.4byte	0x84
 1296 00f6 07       		.uleb128 0x7
 1297 00f7 F4010000 		.4byte	.LASF22
 1298 00fb 01       		.byte	0x1
 1299 00fc 4A       		.byte	0x4a
 1300 00fd 00000000 		.4byte	.LFB0
 1301 0101 20000000 		.4byte	.LFE0-.LFB0
 1302 0105 01       		.uleb128 0x1
 1303 0106 9C       		.byte	0x9c
 1304 0107 07       		.uleb128 0x7
 1305 0108 16000000 		.4byte	.LASF23
 1306 010c 01       		.byte	0x1
 1307 010d 6A       		.byte	0x6a
 1308 010e 00000000 		.4byte	.LFB1
 1309 0112 2C000000 		.4byte	.LFE1-.LFB1
 1310 0116 01       		.uleb128 0x1
 1311 0117 9C       		.byte	0x9c
 1312 0118 08       		.uleb128 0x8
 1313 0119 91030000 		.4byte	.LASF26
 1314 011d 01       		.byte	0x1
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 39


 1315 011e 8F       		.byte	0x8f
 1316 011f 00000000 		.4byte	.LFB2
 1317 0123 C0000000 		.4byte	.LFE2-.LFB2
 1318 0127 01       		.uleb128 0x1
 1319 0128 9C       		.byte	0x9c
 1320 0129 4A010000 		.4byte	0x14a
 1321 012d 09       		.uleb128 0x9
 1322 012e EF040000 		.4byte	.LASF24
 1323 0132 01       		.byte	0x1
 1324 0133 91       		.byte	0x91
 1325 0134 79000000 		.4byte	0x79
 1326 0138 02       		.uleb128 0x2
 1327 0139 91       		.byte	0x91
 1328 013a 76       		.sleb128 -10
 1329 013b 09       		.uleb128 0x9
 1330 013c 5F040000 		.4byte	.LASF25
 1331 0140 01       		.byte	0x1
 1332 0141 92       		.byte	0x92
 1333 0142 79000000 		.4byte	0x79
 1334 0146 02       		.uleb128 0x2
 1335 0147 91       		.byte	0x91
 1336 0148 77       		.sleb128 -9
 1337 0149 00       		.byte	0
 1338 014a 08       		.uleb128 0x8
 1339 014b DF020000 		.4byte	.LASF27
 1340 014f 01       		.byte	0x1
 1341 0150 F8       		.byte	0xf8
 1342 0151 00000000 		.4byte	.LFB3
 1343 0155 58000000 		.4byte	.LFE3-.LFB3
 1344 0159 01       		.uleb128 0x1
 1345 015a 9C       		.byte	0x9c
 1346 015b 6E010000 		.4byte	0x16e
 1347 015f 09       		.uleb128 0x9
 1348 0160 5F040000 		.4byte	.LASF25
 1349 0164 01       		.byte	0x1
 1350 0165 FA       		.byte	0xfa
 1351 0166 79000000 		.4byte	0x79
 1352 016a 02       		.uleb128 0x2
 1353 016b 91       		.byte	0x91
 1354 016c 77       		.sleb128 -9
 1355 016d 00       		.byte	0
 1356 016e 0A       		.uleb128 0xa
 1357 016f 3A040000 		.4byte	.LASF28
 1358 0173 01       		.byte	0x1
 1359 0174 2201     		.2byte	0x122
 1360 0176 00000000 		.4byte	.LFB4
 1361 017a 40000000 		.4byte	.LFE4-.LFB4
 1362 017e 01       		.uleb128 0x1
 1363 017f 9C       		.byte	0x9c
 1364 0180 A3010000 		.4byte	0x1a3
 1365 0184 0B       		.uleb128 0xb
 1366 0185 F6020000 		.4byte	.LASF30
 1367 0189 01       		.byte	0x1
 1368 018a 2201     		.2byte	0x122
 1369 018c 79000000 		.4byte	0x79
 1370 0190 02       		.uleb128 0x2
 1371 0191 91       		.byte	0x91
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 40


 1372 0192 6F       		.sleb128 -17
 1373 0193 0C       		.uleb128 0xc
 1374 0194 EF040000 		.4byte	.LASF24
 1375 0198 01       		.byte	0x1
 1376 0199 2401     		.2byte	0x124
 1377 019b 79000000 		.4byte	0x79
 1378 019f 02       		.uleb128 0x2
 1379 01a0 91       		.byte	0x91
 1380 01a1 77       		.sleb128 -9
 1381 01a2 00       		.byte	0
 1382 01a3 0D       		.uleb128 0xd
 1383 01a4 71030000 		.4byte	.LASF29
 1384 01a8 01       		.byte	0x1
 1385 01a9 5401     		.2byte	0x154
 1386 01ab 00000000 		.4byte	.LFB5
 1387 01af 50000000 		.4byte	.LFE5-.LFB5
 1388 01b3 01       		.uleb128 0x1
 1389 01b4 9C       		.byte	0x9c
 1390 01b5 D8010000 		.4byte	0x1d8
 1391 01b9 0B       		.uleb128 0xb
 1392 01ba AA030000 		.4byte	.LASF31
 1393 01be 01       		.byte	0x1
 1394 01bf 5401     		.2byte	0x154
 1395 01c1 79000000 		.4byte	0x79
 1396 01c5 02       		.uleb128 0x2
 1397 01c6 91       		.byte	0x91
 1398 01c7 6F       		.sleb128 -17
 1399 01c8 0C       		.uleb128 0xc
 1400 01c9 EF040000 		.4byte	.LASF24
 1401 01cd 01       		.byte	0x1
 1402 01ce 5601     		.2byte	0x156
 1403 01d0 79000000 		.4byte	0x79
 1404 01d4 02       		.uleb128 0x2
 1405 01d5 91       		.byte	0x91
 1406 01d6 77       		.sleb128 -9
 1407 01d7 00       		.byte	0
 1408 01d8 0E       		.uleb128 0xe
 1409 01d9 FA000000 		.4byte	.LASF32
 1410 01dd 01       		.byte	0x1
 1411 01de 9101     		.2byte	0x191
 1412 01e0 00000000 		.4byte	.LFB6
 1413 01e4 20000000 		.4byte	.LFE6-.LFB6
 1414 01e8 01       		.uleb128 0x1
 1415 01e9 9C       		.byte	0x9c
 1416 01ea 0E       		.uleb128 0xe
 1417 01eb 4F000000 		.4byte	.LASF33
 1418 01ef 01       		.byte	0x1
 1419 01f0 B301     		.2byte	0x1b3
 1420 01f2 00000000 		.4byte	.LFB7
 1421 01f6 20000000 		.4byte	.LFE7-.LFB7
 1422 01fa 01       		.uleb128 0x1
 1423 01fb 9C       		.byte	0x9c
 1424 01fc 0F       		.uleb128 0xf
 1425 01fd 2C010000 		.4byte	.LASF36
 1426 0201 01       		.byte	0x1
 1427 0202 DB01     		.2byte	0x1db
 1428 0204 79000000 		.4byte	0x79
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 41


 1429 0208 00000000 		.4byte	.LFB8
 1430 020c 40000000 		.4byte	.LFE8-.LFB8
 1431 0210 01       		.uleb128 0x1
 1432 0211 9C       		.byte	0x9c
 1433 0212 35020000 		.4byte	0x235
 1434 0216 0B       		.uleb128 0xb
 1435 0217 87010000 		.4byte	.LASF34
 1436 021b 01       		.byte	0x1
 1437 021c DB01     		.2byte	0x1db
 1438 021e 79000000 		.4byte	0x79
 1439 0222 02       		.uleb128 0x2
 1440 0223 91       		.byte	0x91
 1441 0224 6F       		.sleb128 -17
 1442 0225 0C       		.uleb128 0xc
 1443 0226 70040000 		.4byte	.LASF35
 1444 022a 01       		.byte	0x1
 1445 022b DD01     		.2byte	0x1dd
 1446 022d 79000000 		.4byte	0x79
 1447 0231 02       		.uleb128 0x2
 1448 0232 91       		.byte	0x91
 1449 0233 77       		.sleb128 -9
 1450 0234 00       		.byte	0
 1451 0235 10       		.uleb128 0x10
 1452 0236 B7040000 		.4byte	.LASF60
 1453 023a 01       		.byte	0x1
 1454 023b 0802     		.2byte	0x208
 1455 023d 8F000000 		.4byte	0x8f
 1456 0241 00000000 		.4byte	.LFB9
 1457 0245 2C000000 		.4byte	.LFE9-.LFB9
 1458 0249 01       		.uleb128 0x1
 1459 024a 9C       		.byte	0x9c
 1460 024b 11       		.uleb128 0x11
 1461 024c FC020000 		.4byte	.LASF37
 1462 0250 01       		.byte	0x1
 1463 0251 2602     		.2byte	0x226
 1464 0253 9A000000 		.4byte	0x9a
 1465 0257 00000000 		.4byte	.LFB10
 1466 025b 34000000 		.4byte	.LFE10-.LFB10
 1467 025f 01       		.uleb128 0x1
 1468 0260 9C       		.byte	0x9c
 1469 0261 75020000 		.4byte	0x275
 1470 0265 12       		.uleb128 0x12
 1471 0266 72657300 		.ascii	"res\000"
 1472 026a 01       		.byte	0x1
 1473 026b 2802     		.2byte	0x228
 1474 026d 84000000 		.4byte	0x84
 1475 0271 02       		.uleb128 0x2
 1476 0272 91       		.byte	0x91
 1477 0273 76       		.sleb128 -10
 1478 0274 00       		.byte	0
 1479 0275 0A       		.uleb128 0xa
 1480 0276 B5030000 		.4byte	.LASF38
 1481 027a 01       		.byte	0x1
 1482 027b 4902     		.2byte	0x249
 1483 027d 00000000 		.4byte	.LFB11
 1484 0281 20000000 		.4byte	.LFE11-.LFB11
 1485 0285 01       		.uleb128 0x1
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 42


 1486 0286 9C       		.byte	0x9c
 1487 0287 9B020000 		.4byte	0x29b
 1488 028b 0B       		.uleb128 0xb
 1489 028c 5E010000 		.4byte	.LASF39
 1490 0290 01       		.byte	0x1
 1491 0291 4902     		.2byte	0x249
 1492 0293 9A000000 		.4byte	0x9a
 1493 0297 02       		.uleb128 0x2
 1494 0298 91       		.byte	0x91
 1495 0299 76       		.sleb128 -10
 1496 029a 00       		.byte	0
 1497 029b 13       		.uleb128 0x13
 1498 029c D4040000 		.4byte	.LASF61
 1499 02a0 01       		.byte	0x1
 1500 02a1 6302     		.2byte	0x263
 1501 02a3 00000000 		.4byte	.LFB12
 1502 02a7 80000000 		.4byte	.LFE12-.LFB12
 1503 02ab 01       		.uleb128 0x1
 1504 02ac 9C       		.byte	0x9c
 1505 02ad D0020000 		.4byte	0x2d0
 1506 02b1 0B       		.uleb128 0xb
 1507 02b2 AA030000 		.4byte	.LASF31
 1508 02b6 01       		.byte	0x1
 1509 02b7 6302     		.2byte	0x263
 1510 02b9 79000000 		.4byte	0x79
 1511 02bd 02       		.uleb128 0x2
 1512 02be 91       		.byte	0x91
 1513 02bf 6F       		.sleb128 -17
 1514 02c0 0C       		.uleb128 0xc
 1515 02c1 0F000000 		.4byte	.LASF40
 1516 02c5 01       		.byte	0x1
 1517 02c6 6502     		.2byte	0x265
 1518 02c8 A5000000 		.4byte	0xa5
 1519 02cc 02       		.uleb128 0x2
 1520 02cd 91       		.byte	0x91
 1521 02ce 74       		.sleb128 -12
 1522 02cf 00       		.byte	0
 1523 02d0 0A       		.uleb128 0xa
 1524 02d1 1F030000 		.4byte	.LASF41
 1525 02d5 01       		.byte	0x1
 1526 02d6 B402     		.2byte	0x2b4
 1527 02d8 00000000 		.4byte	.LFB13
 1528 02dc 2C000000 		.4byte	.LFE13-.LFB13
 1529 02e0 01       		.uleb128 0x1
 1530 02e1 9C       		.byte	0x9c
 1531 02e2 F6020000 		.4byte	0x2f6
 1532 02e6 0B       		.uleb128 0xb
 1533 02e7 07000000 		.4byte	.LASF42
 1534 02eb 01       		.byte	0x1
 1535 02ec B402     		.2byte	0x2b4
 1536 02ee 9A000000 		.4byte	0x9a
 1537 02f2 02       		.uleb128 0x2
 1538 02f3 91       		.byte	0x91
 1539 02f4 76       		.sleb128 -10
 1540 02f5 00       		.byte	0
 1541 02f6 0A       		.uleb128 0xa
 1542 02f7 A4000000 		.4byte	.LASF43
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 43


 1543 02fb 01       		.byte	0x1
 1544 02fc CF02     		.2byte	0x2cf
 1545 02fe 00000000 		.4byte	.LFB14
 1546 0302 1C000000 		.4byte	.LFE14-.LFB14
 1547 0306 01       		.uleb128 0x1
 1548 0307 9C       		.byte	0x9c
 1549 0308 1C030000 		.4byte	0x31c
 1550 030c 0B       		.uleb128 0xb
 1551 030d 07000000 		.4byte	.LASF42
 1552 0311 01       		.byte	0x1
 1553 0312 CF02     		.2byte	0x2cf
 1554 0314 A5000000 		.4byte	0xa5
 1555 0318 02       		.uleb128 0x2
 1556 0319 91       		.byte	0x91
 1557 031a 74       		.sleb128 -12
 1558 031b 00       		.byte	0
 1559 031c 11       		.uleb128 0x11
 1560 031d 2D000000 		.4byte	.LASF44
 1561 0321 01       		.byte	0x1
 1562 0322 E702     		.2byte	0x2e7
 1563 0324 9A000000 		.4byte	0x9a
 1564 0328 00000000 		.4byte	.LFB15
 1565 032c 8C000000 		.4byte	.LFE15-.LFB15
 1566 0330 01       		.uleb128 0x1
 1567 0331 9C       		.byte	0x9c
 1568 0332 64030000 		.4byte	0x364
 1569 0336 0B       		.uleb128 0xb
 1570 0337 55040000 		.4byte	.LASF45
 1571 033b 01       		.byte	0x1
 1572 033c E702     		.2byte	0x2e7
 1573 033e 9A000000 		.4byte	0x9a
 1574 0342 02       		.uleb128 0x2
 1575 0343 91       		.byte	0x91
 1576 0344 6E       		.sleb128 -18
 1577 0345 0C       		.uleb128 0xc
 1578 0346 ED010000 		.4byte	.LASF46
 1579 034a 01       		.byte	0x1
 1580 034b E902     		.2byte	0x2e9
 1581 034d 9A000000 		.4byte	0x9a
 1582 0351 02       		.uleb128 0x2
 1583 0352 91       		.byte	0x91
 1584 0353 72       		.sleb128 -14
 1585 0354 0C       		.uleb128 0xc
 1586 0355 4E010000 		.4byte	.LASF47
 1587 0359 01       		.byte	0x1
 1588 035a EA02     		.2byte	0x2ea
 1589 035c A5000000 		.4byte	0xa5
 1590 0360 02       		.uleb128 0x2
 1591 0361 91       		.byte	0x91
 1592 0362 74       		.sleb128 -12
 1593 0363 00       		.byte	0
 1594 0364 0F       		.uleb128 0xf
 1595 0365 95040000 		.4byte	.LASF48
 1596 0369 01       		.byte	0x1
 1597 036a 1103     		.2byte	0x311
 1598 036c A5000000 		.4byte	0xa5
 1599 0370 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 44


 1600 0374 94000000 		.4byte	.LFE16-.LFB16
 1601 0378 01       		.uleb128 0x1
 1602 0379 9C       		.byte	0x9c
 1603 037a AC030000 		.4byte	0x3ac
 1604 037e 0B       		.uleb128 0xb
 1605 037f 55040000 		.4byte	.LASF45
 1606 0383 01       		.byte	0x1
 1607 0384 1103     		.2byte	0x311
 1608 0386 9A000000 		.4byte	0x9a
 1609 038a 02       		.uleb128 0x2
 1610 038b 91       		.byte	0x91
 1611 038c 5E       		.sleb128 -34
 1612 038d 0C       		.uleb128 0xc
 1613 038e 9C010000 		.4byte	.LASF49
 1614 0392 01       		.byte	0x1
 1615 0393 1403     		.2byte	0x314
 1616 0395 C9000000 		.4byte	0xc9
 1617 0399 02       		.uleb128 0x2
 1618 039a 91       		.byte	0x91
 1619 039b 60       		.sleb128 -32
 1620 039c 0C       		.uleb128 0xc
 1621 039d 4E010000 		.4byte	.LASF47
 1622 03a1 01       		.byte	0x1
 1623 03a2 1503     		.2byte	0x315
 1624 03a4 A5000000 		.4byte	0xa5
 1625 03a8 02       		.uleb128 0x2
 1626 03a9 91       		.byte	0x91
 1627 03aa 6C       		.sleb128 -20
 1628 03ab 00       		.byte	0
 1629 03ac 0F       		.uleb128 0xf
 1630 03ad 0C020000 		.4byte	.LASF50
 1631 03b1 01       		.byte	0x1
 1632 03b2 3D03     		.2byte	0x33d
 1633 03b4 B0000000 		.4byte	0xb0
 1634 03b8 00000000 		.4byte	.LFB17
 1635 03bc 84000000 		.4byte	.LFE17-.LFB17
 1636 03c0 01       		.uleb128 0x1
 1637 03c1 9C       		.byte	0x9c
 1638 03c2 F4030000 		.4byte	0x3f4
 1639 03c6 0B       		.uleb128 0xb
 1640 03c7 55040000 		.4byte	.LASF45
 1641 03cb 01       		.byte	0x1
 1642 03cc 3D03     		.2byte	0x33d
 1643 03ce 9A000000 		.4byte	0x9a
 1644 03d2 02       		.uleb128 0x2
 1645 03d3 91       		.byte	0x91
 1646 03d4 66       		.sleb128 -26
 1647 03d5 0C       		.uleb128 0xc
 1648 03d6 CF010000 		.4byte	.LASF51
 1649 03da 01       		.byte	0x1
 1650 03db 3F03     		.2byte	0x33f
 1651 03dd B0000000 		.4byte	0xb0
 1652 03e1 02       		.uleb128 0x2
 1653 03e2 91       		.byte	0x91
 1654 03e3 68       		.sleb128 -24
 1655 03e4 0C       		.uleb128 0xc
 1656 03e5 4E010000 		.4byte	.LASF47
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 45


 1657 03e9 01       		.byte	0x1
 1658 03ea 4003     		.2byte	0x340
 1659 03ec A5000000 		.4byte	0xa5
 1660 03f0 02       		.uleb128 0x2
 1661 03f1 91       		.byte	0x91
 1662 03f2 6C       		.sleb128 -20
 1663 03f3 00       		.byte	0
 1664 03f4 14       		.uleb128 0x14
 1665 03f5 A3010000 		.4byte	.LASF52
 1666 03f9 01       		.byte	0x1
 1667 03fa 23       		.byte	0x23
 1668 03fb 79000000 		.4byte	0x79
 1669 03ff 05       		.uleb128 0x5
 1670 0400 03       		.byte	0x3
 1671 0401 00000000 		.4byte	ADC_SAR_Seq_1_SAR_initVar
 1672 0405 14       		.uleb128 0x14
 1673 0406 3E020000 		.4byte	.LASF53
 1674 040a 01       		.byte	0x1
 1675 040b 24       		.byte	0x24
 1676 040c 16040000 		.4byte	0x416
 1677 0410 05       		.uleb128 0x5
 1678 0411 03       		.byte	0x3
 1679 0412 00000000 		.4byte	ADC_SAR_Seq_1_SAR_offset
 1680 0416 06       		.uleb128 0x6
 1681 0417 9A000000 		.4byte	0x9a
 1682 041b 14       		.uleb128 0x14
 1683 041c 47030000 		.4byte	.LASF54
 1684 0420 01       		.byte	0x1
 1685 0421 25       		.byte	0x25
 1686 0422 16040000 		.4byte	0x416
 1687 0426 05       		.uleb128 0x5
 1688 0427 03       		.byte	0x3
 1689 0428 00000000 		.4byte	ADC_SAR_Seq_1_SAR_countsPerVolt
 1690 042c 14       		.uleb128 0x14
 1691 042d 65010000 		.4byte	.LASF55
 1692 0431 01       		.byte	0x1
 1693 0432 26       		.byte	0x26
 1694 0433 3D040000 		.4byte	0x43d
 1695 0437 05       		.uleb128 0x5
 1696 0438 03       		.byte	0x3
 1697 0439 00000000 		.4byte	ADC_SAR_Seq_1_SAR_countsPer10Volt
 1698 043d 06       		.uleb128 0x6
 1699 043e A5000000 		.4byte	0xa5
 1700 0442 14       		.uleb128 0x14
 1701 0443 77040000 		.4byte	.LASF56
 1702 0447 01       		.byte	0x1
 1703 0448 27       		.byte	0x27
 1704 0449 16040000 		.4byte	0x416
 1705 044d 05       		.uleb128 0x5
 1706 044e 03       		.byte	0x3
 1707 044f 00000000 		.4byte	ADC_SAR_Seq_1_SAR_shift
 1708 0453 00       		.byte	0
 1709              		.section	.debug_abbrev,"",%progbits
 1710              	.Ldebug_abbrev0:
 1711 0000 01       		.uleb128 0x1
 1712 0001 11       		.uleb128 0x11
 1713 0002 01       		.byte	0x1
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 46


 1714 0003 25       		.uleb128 0x25
 1715 0004 0E       		.uleb128 0xe
 1716 0005 13       		.uleb128 0x13
 1717 0006 0B       		.uleb128 0xb
 1718 0007 03       		.uleb128 0x3
 1719 0008 0E       		.uleb128 0xe
 1720 0009 1B       		.uleb128 0x1b
 1721 000a 0E       		.uleb128 0xe
 1722 000b 55       		.uleb128 0x55
 1723 000c 17       		.uleb128 0x17
 1724 000d 11       		.uleb128 0x11
 1725 000e 01       		.uleb128 0x1
 1726 000f 10       		.uleb128 0x10
 1727 0010 17       		.uleb128 0x17
 1728 0011 00       		.byte	0
 1729 0012 00       		.byte	0
 1730 0013 02       		.uleb128 0x2
 1731 0014 24       		.uleb128 0x24
 1732 0015 00       		.byte	0
 1733 0016 0B       		.uleb128 0xb
 1734 0017 0B       		.uleb128 0xb
 1735 0018 3E       		.uleb128 0x3e
 1736 0019 0B       		.uleb128 0xb
 1737 001a 03       		.uleb128 0x3
 1738 001b 08       		.uleb128 0x8
 1739 001c 00       		.byte	0
 1740 001d 00       		.byte	0
 1741 001e 03       		.uleb128 0x3
 1742 001f 24       		.uleb128 0x24
 1743 0020 00       		.byte	0
 1744 0021 0B       		.uleb128 0xb
 1745 0022 0B       		.uleb128 0xb
 1746 0023 3E       		.uleb128 0x3e
 1747 0024 0B       		.uleb128 0xb
 1748 0025 03       		.uleb128 0x3
 1749 0026 0E       		.uleb128 0xe
 1750 0027 00       		.byte	0
 1751 0028 00       		.byte	0
 1752 0029 04       		.uleb128 0x4
 1753 002a 16       		.uleb128 0x16
 1754 002b 00       		.byte	0
 1755 002c 03       		.uleb128 0x3
 1756 002d 0E       		.uleb128 0xe
 1757 002e 3A       		.uleb128 0x3a
 1758 002f 0B       		.uleb128 0xb
 1759 0030 3B       		.uleb128 0x3b
 1760 0031 0B       		.uleb128 0xb
 1761 0032 49       		.uleb128 0x49
 1762 0033 13       		.uleb128 0x13
 1763 0034 00       		.byte	0
 1764 0035 00       		.byte	0
 1765 0036 05       		.uleb128 0x5
 1766 0037 16       		.uleb128 0x16
 1767 0038 00       		.byte	0
 1768 0039 03       		.uleb128 0x3
 1769 003a 0E       		.uleb128 0xe
 1770 003b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 47


 1771 003c 0B       		.uleb128 0xb
 1772 003d 3B       		.uleb128 0x3b
 1773 003e 05       		.uleb128 0x5
 1774 003f 49       		.uleb128 0x49
 1775 0040 13       		.uleb128 0x13
 1776 0041 00       		.byte	0
 1777 0042 00       		.byte	0
 1778 0043 06       		.uleb128 0x6
 1779 0044 35       		.uleb128 0x35
 1780 0045 00       		.byte	0
 1781 0046 49       		.uleb128 0x49
 1782 0047 13       		.uleb128 0x13
 1783 0048 00       		.byte	0
 1784 0049 00       		.byte	0
 1785 004a 07       		.uleb128 0x7
 1786 004b 2E       		.uleb128 0x2e
 1787 004c 00       		.byte	0
 1788 004d 3F       		.uleb128 0x3f
 1789 004e 19       		.uleb128 0x19
 1790 004f 03       		.uleb128 0x3
 1791 0050 0E       		.uleb128 0xe
 1792 0051 3A       		.uleb128 0x3a
 1793 0052 0B       		.uleb128 0xb
 1794 0053 3B       		.uleb128 0x3b
 1795 0054 0B       		.uleb128 0xb
 1796 0055 27       		.uleb128 0x27
 1797 0056 19       		.uleb128 0x19
 1798 0057 11       		.uleb128 0x11
 1799 0058 01       		.uleb128 0x1
 1800 0059 12       		.uleb128 0x12
 1801 005a 06       		.uleb128 0x6
 1802 005b 40       		.uleb128 0x40
 1803 005c 18       		.uleb128 0x18
 1804 005d 9642     		.uleb128 0x2116
 1805 005f 19       		.uleb128 0x19
 1806 0060 00       		.byte	0
 1807 0061 00       		.byte	0
 1808 0062 08       		.uleb128 0x8
 1809 0063 2E       		.uleb128 0x2e
 1810 0064 01       		.byte	0x1
 1811 0065 3F       		.uleb128 0x3f
 1812 0066 19       		.uleb128 0x19
 1813 0067 03       		.uleb128 0x3
 1814 0068 0E       		.uleb128 0xe
 1815 0069 3A       		.uleb128 0x3a
 1816 006a 0B       		.uleb128 0xb
 1817 006b 3B       		.uleb128 0x3b
 1818 006c 0B       		.uleb128 0xb
 1819 006d 27       		.uleb128 0x27
 1820 006e 19       		.uleb128 0x19
 1821 006f 11       		.uleb128 0x11
 1822 0070 01       		.uleb128 0x1
 1823 0071 12       		.uleb128 0x12
 1824 0072 06       		.uleb128 0x6
 1825 0073 40       		.uleb128 0x40
 1826 0074 18       		.uleb128 0x18
 1827 0075 9642     		.uleb128 0x2116
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 48


 1828 0077 19       		.uleb128 0x19
 1829 0078 01       		.uleb128 0x1
 1830 0079 13       		.uleb128 0x13
 1831 007a 00       		.byte	0
 1832 007b 00       		.byte	0
 1833 007c 09       		.uleb128 0x9
 1834 007d 34       		.uleb128 0x34
 1835 007e 00       		.byte	0
 1836 007f 03       		.uleb128 0x3
 1837 0080 0E       		.uleb128 0xe
 1838 0081 3A       		.uleb128 0x3a
 1839 0082 0B       		.uleb128 0xb
 1840 0083 3B       		.uleb128 0x3b
 1841 0084 0B       		.uleb128 0xb
 1842 0085 49       		.uleb128 0x49
 1843 0086 13       		.uleb128 0x13
 1844 0087 02       		.uleb128 0x2
 1845 0088 18       		.uleb128 0x18
 1846 0089 00       		.byte	0
 1847 008a 00       		.byte	0
 1848 008b 0A       		.uleb128 0xa
 1849 008c 2E       		.uleb128 0x2e
 1850 008d 01       		.byte	0x1
 1851 008e 3F       		.uleb128 0x3f
 1852 008f 19       		.uleb128 0x19
 1853 0090 03       		.uleb128 0x3
 1854 0091 0E       		.uleb128 0xe
 1855 0092 3A       		.uleb128 0x3a
 1856 0093 0B       		.uleb128 0xb
 1857 0094 3B       		.uleb128 0x3b
 1858 0095 05       		.uleb128 0x5
 1859 0096 27       		.uleb128 0x27
 1860 0097 19       		.uleb128 0x19
 1861 0098 11       		.uleb128 0x11
 1862 0099 01       		.uleb128 0x1
 1863 009a 12       		.uleb128 0x12
 1864 009b 06       		.uleb128 0x6
 1865 009c 40       		.uleb128 0x40
 1866 009d 18       		.uleb128 0x18
 1867 009e 9742     		.uleb128 0x2117
 1868 00a0 19       		.uleb128 0x19
 1869 00a1 01       		.uleb128 0x1
 1870 00a2 13       		.uleb128 0x13
 1871 00a3 00       		.byte	0
 1872 00a4 00       		.byte	0
 1873 00a5 0B       		.uleb128 0xb
 1874 00a6 05       		.uleb128 0x5
 1875 00a7 00       		.byte	0
 1876 00a8 03       		.uleb128 0x3
 1877 00a9 0E       		.uleb128 0xe
 1878 00aa 3A       		.uleb128 0x3a
 1879 00ab 0B       		.uleb128 0xb
 1880 00ac 3B       		.uleb128 0x3b
 1881 00ad 05       		.uleb128 0x5
 1882 00ae 49       		.uleb128 0x49
 1883 00af 13       		.uleb128 0x13
 1884 00b0 02       		.uleb128 0x2
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 49


 1885 00b1 18       		.uleb128 0x18
 1886 00b2 00       		.byte	0
 1887 00b3 00       		.byte	0
 1888 00b4 0C       		.uleb128 0xc
 1889 00b5 34       		.uleb128 0x34
 1890 00b6 00       		.byte	0
 1891 00b7 03       		.uleb128 0x3
 1892 00b8 0E       		.uleb128 0xe
 1893 00b9 3A       		.uleb128 0x3a
 1894 00ba 0B       		.uleb128 0xb
 1895 00bb 3B       		.uleb128 0x3b
 1896 00bc 05       		.uleb128 0x5
 1897 00bd 49       		.uleb128 0x49
 1898 00be 13       		.uleb128 0x13
 1899 00bf 02       		.uleb128 0x2
 1900 00c0 18       		.uleb128 0x18
 1901 00c1 00       		.byte	0
 1902 00c2 00       		.byte	0
 1903 00c3 0D       		.uleb128 0xd
 1904 00c4 2E       		.uleb128 0x2e
 1905 00c5 01       		.byte	0x1
 1906 00c6 3F       		.uleb128 0x3f
 1907 00c7 19       		.uleb128 0x19
 1908 00c8 03       		.uleb128 0x3
 1909 00c9 0E       		.uleb128 0xe
 1910 00ca 3A       		.uleb128 0x3a
 1911 00cb 0B       		.uleb128 0xb
 1912 00cc 3B       		.uleb128 0x3b
 1913 00cd 05       		.uleb128 0x5
 1914 00ce 27       		.uleb128 0x27
 1915 00cf 19       		.uleb128 0x19
 1916 00d0 11       		.uleb128 0x11
 1917 00d1 01       		.uleb128 0x1
 1918 00d2 12       		.uleb128 0x12
 1919 00d3 06       		.uleb128 0x6
 1920 00d4 40       		.uleb128 0x40
 1921 00d5 18       		.uleb128 0x18
 1922 00d6 9642     		.uleb128 0x2116
 1923 00d8 19       		.uleb128 0x19
 1924 00d9 01       		.uleb128 0x1
 1925 00da 13       		.uleb128 0x13
 1926 00db 00       		.byte	0
 1927 00dc 00       		.byte	0
 1928 00dd 0E       		.uleb128 0xe
 1929 00de 2E       		.uleb128 0x2e
 1930 00df 00       		.byte	0
 1931 00e0 3F       		.uleb128 0x3f
 1932 00e1 19       		.uleb128 0x19
 1933 00e2 03       		.uleb128 0x3
 1934 00e3 0E       		.uleb128 0xe
 1935 00e4 3A       		.uleb128 0x3a
 1936 00e5 0B       		.uleb128 0xb
 1937 00e6 3B       		.uleb128 0x3b
 1938 00e7 05       		.uleb128 0x5
 1939 00e8 27       		.uleb128 0x27
 1940 00e9 19       		.uleb128 0x19
 1941 00ea 11       		.uleb128 0x11
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 50


 1942 00eb 01       		.uleb128 0x1
 1943 00ec 12       		.uleb128 0x12
 1944 00ed 06       		.uleb128 0x6
 1945 00ee 40       		.uleb128 0x40
 1946 00ef 18       		.uleb128 0x18
 1947 00f0 9742     		.uleb128 0x2117
 1948 00f2 19       		.uleb128 0x19
 1949 00f3 00       		.byte	0
 1950 00f4 00       		.byte	0
 1951 00f5 0F       		.uleb128 0xf
 1952 00f6 2E       		.uleb128 0x2e
 1953 00f7 01       		.byte	0x1
 1954 00f8 3F       		.uleb128 0x3f
 1955 00f9 19       		.uleb128 0x19
 1956 00fa 03       		.uleb128 0x3
 1957 00fb 0E       		.uleb128 0xe
 1958 00fc 3A       		.uleb128 0x3a
 1959 00fd 0B       		.uleb128 0xb
 1960 00fe 3B       		.uleb128 0x3b
 1961 00ff 05       		.uleb128 0x5
 1962 0100 27       		.uleb128 0x27
 1963 0101 19       		.uleb128 0x19
 1964 0102 49       		.uleb128 0x49
 1965 0103 13       		.uleb128 0x13
 1966 0104 11       		.uleb128 0x11
 1967 0105 01       		.uleb128 0x1
 1968 0106 12       		.uleb128 0x12
 1969 0107 06       		.uleb128 0x6
 1970 0108 40       		.uleb128 0x40
 1971 0109 18       		.uleb128 0x18
 1972 010a 9642     		.uleb128 0x2116
 1973 010c 19       		.uleb128 0x19
 1974 010d 01       		.uleb128 0x1
 1975 010e 13       		.uleb128 0x13
 1976 010f 00       		.byte	0
 1977 0110 00       		.byte	0
 1978 0111 10       		.uleb128 0x10
 1979 0112 2E       		.uleb128 0x2e
 1980 0113 00       		.byte	0
 1981 0114 3F       		.uleb128 0x3f
 1982 0115 19       		.uleb128 0x19
 1983 0116 03       		.uleb128 0x3
 1984 0117 0E       		.uleb128 0xe
 1985 0118 3A       		.uleb128 0x3a
 1986 0119 0B       		.uleb128 0xb
 1987 011a 3B       		.uleb128 0x3b
 1988 011b 05       		.uleb128 0x5
 1989 011c 27       		.uleb128 0x27
 1990 011d 19       		.uleb128 0x19
 1991 011e 49       		.uleb128 0x49
 1992 011f 13       		.uleb128 0x13
 1993 0120 11       		.uleb128 0x11
 1994 0121 01       		.uleb128 0x1
 1995 0122 12       		.uleb128 0x12
 1996 0123 06       		.uleb128 0x6
 1997 0124 40       		.uleb128 0x40
 1998 0125 18       		.uleb128 0x18
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 51


 1999 0126 9742     		.uleb128 0x2117
 2000 0128 19       		.uleb128 0x19
 2001 0129 00       		.byte	0
 2002 012a 00       		.byte	0
 2003 012b 11       		.uleb128 0x11
 2004 012c 2E       		.uleb128 0x2e
 2005 012d 01       		.byte	0x1
 2006 012e 3F       		.uleb128 0x3f
 2007 012f 19       		.uleb128 0x19
 2008 0130 03       		.uleb128 0x3
 2009 0131 0E       		.uleb128 0xe
 2010 0132 3A       		.uleb128 0x3a
 2011 0133 0B       		.uleb128 0xb
 2012 0134 3B       		.uleb128 0x3b
 2013 0135 05       		.uleb128 0x5
 2014 0136 27       		.uleb128 0x27
 2015 0137 19       		.uleb128 0x19
 2016 0138 49       		.uleb128 0x49
 2017 0139 13       		.uleb128 0x13
 2018 013a 11       		.uleb128 0x11
 2019 013b 01       		.uleb128 0x1
 2020 013c 12       		.uleb128 0x12
 2021 013d 06       		.uleb128 0x6
 2022 013e 40       		.uleb128 0x40
 2023 013f 18       		.uleb128 0x18
 2024 0140 9742     		.uleb128 0x2117
 2025 0142 19       		.uleb128 0x19
 2026 0143 01       		.uleb128 0x1
 2027 0144 13       		.uleb128 0x13
 2028 0145 00       		.byte	0
 2029 0146 00       		.byte	0
 2030 0147 12       		.uleb128 0x12
 2031 0148 34       		.uleb128 0x34
 2032 0149 00       		.byte	0
 2033 014a 03       		.uleb128 0x3
 2034 014b 08       		.uleb128 0x8
 2035 014c 3A       		.uleb128 0x3a
 2036 014d 0B       		.uleb128 0xb
 2037 014e 3B       		.uleb128 0x3b
 2038 014f 05       		.uleb128 0x5
 2039 0150 49       		.uleb128 0x49
 2040 0151 13       		.uleb128 0x13
 2041 0152 02       		.uleb128 0x2
 2042 0153 18       		.uleb128 0x18
 2043 0154 00       		.byte	0
 2044 0155 00       		.byte	0
 2045 0156 13       		.uleb128 0x13
 2046 0157 2E       		.uleb128 0x2e
 2047 0158 01       		.byte	0x1
 2048 0159 03       		.uleb128 0x3
 2049 015a 0E       		.uleb128 0xe
 2050 015b 3A       		.uleb128 0x3a
 2051 015c 0B       		.uleb128 0xb
 2052 015d 3B       		.uleb128 0x3b
 2053 015e 05       		.uleb128 0x5
 2054 015f 27       		.uleb128 0x27
 2055 0160 19       		.uleb128 0x19
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 52


 2056 0161 11       		.uleb128 0x11
 2057 0162 01       		.uleb128 0x1
 2058 0163 12       		.uleb128 0x12
 2059 0164 06       		.uleb128 0x6
 2060 0165 40       		.uleb128 0x40
 2061 0166 18       		.uleb128 0x18
 2062 0167 9642     		.uleb128 0x2116
 2063 0169 19       		.uleb128 0x19
 2064 016a 01       		.uleb128 0x1
 2065 016b 13       		.uleb128 0x13
 2066 016c 00       		.byte	0
 2067 016d 00       		.byte	0
 2068 016e 14       		.uleb128 0x14
 2069 016f 34       		.uleb128 0x34
 2070 0170 00       		.byte	0
 2071 0171 03       		.uleb128 0x3
 2072 0172 0E       		.uleb128 0xe
 2073 0173 3A       		.uleb128 0x3a
 2074 0174 0B       		.uleb128 0xb
 2075 0175 3B       		.uleb128 0x3b
 2076 0176 0B       		.uleb128 0xb
 2077 0177 49       		.uleb128 0x49
 2078 0178 13       		.uleb128 0x13
 2079 0179 3F       		.uleb128 0x3f
 2080 017a 19       		.uleb128 0x19
 2081 017b 02       		.uleb128 0x2
 2082 017c 18       		.uleb128 0x18
 2083 017d 00       		.byte	0
 2084 017e 00       		.byte	0
 2085 017f 00       		.byte	0
 2086              		.section	.debug_aranges,"",%progbits
 2087 0000 A4000000 		.4byte	0xa4
 2088 0004 0200     		.2byte	0x2
 2089 0006 00000000 		.4byte	.Ldebug_info0
 2090 000a 04       		.byte	0x4
 2091 000b 00       		.byte	0
 2092 000c 0000     		.2byte	0
 2093 000e 0000     		.2byte	0
 2094 0010 00000000 		.4byte	.LFB0
 2095 0014 20000000 		.4byte	.LFE0-.LFB0
 2096 0018 00000000 		.4byte	.LFB1
 2097 001c 2C000000 		.4byte	.LFE1-.LFB1
 2098 0020 00000000 		.4byte	.LFB2
 2099 0024 C0000000 		.4byte	.LFE2-.LFB2
 2100 0028 00000000 		.4byte	.LFB3
 2101 002c 58000000 		.4byte	.LFE3-.LFB3
 2102 0030 00000000 		.4byte	.LFB4
 2103 0034 40000000 		.4byte	.LFE4-.LFB4
 2104 0038 00000000 		.4byte	.LFB5
 2105 003c 50000000 		.4byte	.LFE5-.LFB5
 2106 0040 00000000 		.4byte	.LFB6
 2107 0044 20000000 		.4byte	.LFE6-.LFB6
 2108 0048 00000000 		.4byte	.LFB7
 2109 004c 20000000 		.4byte	.LFE7-.LFB7
 2110 0050 00000000 		.4byte	.LFB8
 2111 0054 40000000 		.4byte	.LFE8-.LFB8
 2112 0058 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 53


 2113 005c 2C000000 		.4byte	.LFE9-.LFB9
 2114 0060 00000000 		.4byte	.LFB10
 2115 0064 34000000 		.4byte	.LFE10-.LFB10
 2116 0068 00000000 		.4byte	.LFB11
 2117 006c 20000000 		.4byte	.LFE11-.LFB11
 2118 0070 00000000 		.4byte	.LFB12
 2119 0074 80000000 		.4byte	.LFE12-.LFB12
 2120 0078 00000000 		.4byte	.LFB13
 2121 007c 2C000000 		.4byte	.LFE13-.LFB13
 2122 0080 00000000 		.4byte	.LFB14
 2123 0084 1C000000 		.4byte	.LFE14-.LFB14
 2124 0088 00000000 		.4byte	.LFB15
 2125 008c 8C000000 		.4byte	.LFE15-.LFB15
 2126 0090 00000000 		.4byte	.LFB16
 2127 0094 94000000 		.4byte	.LFE16-.LFB16
 2128 0098 00000000 		.4byte	.LFB17
 2129 009c 84000000 		.4byte	.LFE17-.LFB17
 2130 00a0 00000000 		.4byte	0
 2131 00a4 00000000 		.4byte	0
 2132              		.section	.debug_ranges,"",%progbits
 2133              	.Ldebug_ranges0:
 2134 0000 00000000 		.4byte	.LFB0
 2135 0004 20000000 		.4byte	.LFE0
 2136 0008 00000000 		.4byte	.LFB1
 2137 000c 2C000000 		.4byte	.LFE1
 2138 0010 00000000 		.4byte	.LFB2
 2139 0014 C0000000 		.4byte	.LFE2
 2140 0018 00000000 		.4byte	.LFB3
 2141 001c 58000000 		.4byte	.LFE3
 2142 0020 00000000 		.4byte	.LFB4
 2143 0024 40000000 		.4byte	.LFE4
 2144 0028 00000000 		.4byte	.LFB5
 2145 002c 50000000 		.4byte	.LFE5
 2146 0030 00000000 		.4byte	.LFB6
 2147 0034 20000000 		.4byte	.LFE6
 2148 0038 00000000 		.4byte	.LFB7
 2149 003c 20000000 		.4byte	.LFE7
 2150 0040 00000000 		.4byte	.LFB8
 2151 0044 40000000 		.4byte	.LFE8
 2152 0048 00000000 		.4byte	.LFB9
 2153 004c 2C000000 		.4byte	.LFE9
 2154 0050 00000000 		.4byte	.LFB10
 2155 0054 34000000 		.4byte	.LFE10
 2156 0058 00000000 		.4byte	.LFB11
 2157 005c 20000000 		.4byte	.LFE11
 2158 0060 00000000 		.4byte	.LFB12
 2159 0064 80000000 		.4byte	.LFE12
 2160 0068 00000000 		.4byte	.LFB13
 2161 006c 2C000000 		.4byte	.LFE13
 2162 0070 00000000 		.4byte	.LFB14
 2163 0074 1C000000 		.4byte	.LFE14
 2164 0078 00000000 		.4byte	.LFB15
 2165 007c 8C000000 		.4byte	.LFE15
 2166 0080 00000000 		.4byte	.LFB16
 2167 0084 94000000 		.4byte	.LFE16
 2168 0088 00000000 		.4byte	.LFB17
 2169 008c 84000000 		.4byte	.LFE17
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 54


 2170 0090 00000000 		.4byte	0
 2171 0094 00000000 		.4byte	0
 2172              		.section	.debug_line,"",%progbits
 2173              	.Ldebug_line0:
 2174 0000 08020000 		.section	.debug_str,"MS",%progbits,1
 2174      02005000 
 2174      00000201 
 2174      FB0E0D00 
 2174      01010101 
 2175              	.LASF12:
 2176 0000 75696E74 		.ascii	"uint16\000"
 2176      313600
 2177              	.LASF42:
 2178 0007 61646347 		.ascii	"adcGain\000"
 2178      61696E00 
 2179              	.LASF40:
 2180 000f 636F756E 		.ascii	"counts\000"
 2180      747300
 2181              	.LASF23:
 2182 0016 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_Init\000"
 2182      5341525F 
 2182      5365715F 
 2182      315F5341 
 2182      525F496E 
 2183              	.LASF44:
 2184 002d 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_CountsTo_mVolts\000"
 2184      5341525F 
 2184      5365715F 
 2184      315F5341 
 2184      525F436F 
 2185              	.LASF33:
 2186 004f 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_StopConvert\000"
 2186      5341525F 
 2186      5365715F 
 2186      315F5341 
 2186      525F5374 
 2187              	.LASF8:
 2188 006d 6C6F6E67 		.ascii	"long long unsigned int\000"
 2188      206C6F6E 
 2188      6720756E 
 2188      7369676E 
 2188      65642069 
 2189              	.LASF7:
 2190 0084 6C6F6E67 		.ascii	"long long int\000"
 2190      206C6F6E 
 2190      6720696E 
 2190      7400
 2191              	.LASF1:
 2192 0092 7369676E 		.ascii	"signed char\000"
 2192      65642063 
 2192      68617200 
 2193              	.LASF15:
 2194 009e 696E7433 		.ascii	"int32\000"
 2194      3200
 2195              	.LASF43:
 2196 00a4 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_SetScaledGain\000"
 2196      5341525F 
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 55


 2196      5365715F 
 2196      315F5341 
 2196      525F5365 
 2197              	.LASF5:
 2198 00c4 6C6F6E67 		.ascii	"long int\000"
 2198      20696E74 
 2198      00
 2199              	.LASF58:
 2200 00cd 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\ADC_SAR_Seq_1_SAR.c\000"
 2200      6E657261 
 2200      7465645F 
 2200      536F7572 
 2200      63655C50 
 2201              	.LASF32:
 2202 00fa 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_StartConvert\000"
 2202      5341525F 
 2202      5365715F 
 2202      315F5341 
 2202      525F5374 
 2203              	.LASF21:
 2204 0119 72656731 		.ascii	"reg16\000"
 2204      3600
 2205              	.LASF11:
 2206 011f 75696E74 		.ascii	"uint8\000"
 2206      3800
 2207              	.LASF18:
 2208 0125 646F7562 		.ascii	"double\000"
 2208      6C6500
 2209              	.LASF36:
 2210 012c 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_IsEndConversion\000"
 2210      5341525F 
 2210      5365715F 
 2210      315F5341 
 2210      525F4973 
 2211              	.LASF47:
 2212 014e 636F756E 		.ascii	"countsPer10Volt\000"
 2212      74735065 
 2212      72313056 
 2212      6F6C7400 
 2213              	.LASF39:
 2214 015e 6F666673 		.ascii	"offset\000"
 2214      657400
 2215              	.LASF55:
 2216 0165 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_countsPer10Volt\000"
 2216      5341525F 
 2216      5365715F 
 2216      315F5341 
 2216      525F636F 
 2217              	.LASF34:
 2218 0187 7265744D 		.ascii	"retMode\000"
 2218      6F646500 
 2219              	.LASF0:
 2220 018f 756E7369 		.ascii	"unsigned int\000"
 2220      676E6564 
 2220      20696E74 
 2220      00
 2221              	.LASF49:
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 56


 2222 019c 75566F6C 		.ascii	"uVolts\000"
 2222      747300
 2223              	.LASF52:
 2224 01a3 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_initVar\000"
 2224      5341525F 
 2224      5365715F 
 2224      315F5341 
 2224      525F696E 
 2225              	.LASF6:
 2226 01bd 6C6F6E67 		.ascii	"long unsigned int\000"
 2226      20756E73 
 2226      69676E65 
 2226      6420696E 
 2226      7400
 2227              	.LASF51:
 2228 01cf 766F6C74 		.ascii	"volts\000"
 2228      7300
 2229              	.LASF4:
 2230 01d5 73686F72 		.ascii	"short unsigned int\000"
 2230      7420756E 
 2230      7369676E 
 2230      65642069 
 2230      6E7400
 2231              	.LASF13:
 2232 01e8 696E7438 		.ascii	"int8\000"
 2232      00
 2233              	.LASF46:
 2234 01ed 6D566F6C 		.ascii	"mVolts\000"
 2234      747300
 2235              	.LASF22:
 2236 01f4 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_Start\000"
 2236      5341525F 
 2236      5365715F 
 2236      315F5341 
 2236      525F5374 
 2237              	.LASF50:
 2238 020c 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_CountsTo_Volts\000"
 2238      5341525F 
 2238      5365715F 
 2238      315F5341 
 2238      525F436F 
 2239              	.LASF16:
 2240 022d 666C6F61 		.ascii	"float32\000"
 2240      74333200 
 2241              	.LASF9:
 2242 0235 73697A65 		.ascii	"sizetype\000"
 2242      74797065 
 2242      00
 2243              	.LASF53:
 2244 023e 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_offset\000"
 2244      5341525F 
 2244      5365715F 
 2244      315F5341 
 2244      525F6F66 
 2245              	.LASF57:
 2246 0257 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2246      4320342E 
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 57


 2246      382E3420 
 2246      32303134 
 2246      30353236 
 2247 028a 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 2247      20726576 
 2247      6973696F 
 2247      6E203231 
 2247      31333538 
 2248 02bd 30202D66 		.ascii	"0 -ffunction-sections\000"
 2248      66756E63 
 2248      74696F6E 
 2248      2D736563 
 2248      74696F6E 
 2249              	.LASF19:
 2250 02d3 696E7436 		.ascii	"int64\000"
 2250      3400
 2251              	.LASF17:
 2252 02d9 666C6F61 		.ascii	"float\000"
 2252      7400
 2253              	.LASF27:
 2254 02df 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_Stop\000"
 2254      5341525F 
 2254      5365715F 
 2254      315F5341 
 2254      525F5374 
 2255              	.LASF30:
 2256 02f6 706F7765 		.ascii	"power\000"
 2256      7200
 2257              	.LASF37:
 2258 02fc 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_GetResult16\000"
 2258      5341525F 
 2258      5365715F 
 2258      315F5341 
 2258      525F4765 
 2259              	.LASF20:
 2260 031a 72656738 		.ascii	"reg8\000"
 2260      00
 2261              	.LASF41:
 2262 031f 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_SetGain\000"
 2262      5341525F 
 2262      5365715F 
 2262      315F5341 
 2262      525F5365 
 2263              	.LASF2:
 2264 0339 756E7369 		.ascii	"unsigned char\000"
 2264      676E6564 
 2264      20636861 
 2264      7200
 2265              	.LASF54:
 2266 0347 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_countsPerVolt\000"
 2266      5341525F 
 2266      5365715F 
 2266      315F5341 
 2266      525F636F 
 2267              	.LASF3:
 2268 0367 73686F72 		.ascii	"short int\000"
 2268      7420696E 
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 58


 2268      7400
 2269              	.LASF29:
 2270 0371 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_SetResolution\000"
 2270      5341525F 
 2270      5365715F 
 2270      315F5341 
 2270      525F5365 
 2271              	.LASF26:
 2272 0391 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_Enable\000"
 2272      5341525F 
 2272      5365715F 
 2272      315F5341 
 2272      525F456E 
 2273              	.LASF31:
 2274 03aa 7265736F 		.ascii	"resolution\000"
 2274      6C757469 
 2274      6F6E00
 2275              	.LASF38:
 2276 03b5 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_SetOffset\000"
 2276      5341525F 
 2276      5365715F 
 2276      315F5341 
 2276      525F5365 
 2277              	.LASF59:
 2278 03d1 443A5C44 		.ascii	"D:\\Documents\\Virginia_Tech\\FSAE\\PSOC\\Current S"
 2278      6F63756D 
 2278      656E7473 
 2278      5C566972 
 2278      67696E69 
 2279 03ff 656E736F 		.ascii	"ensor\\CE95277 ADC and UART\\CE95277 ADC and UART.c"
 2279      725C4345 
 2279      39353237 
 2279      37204144 
 2279      4320616E 
 2280 0430 7964736E 		.ascii	"ydsn\000"
 2280      00
 2281              	.LASF10:
 2282 0435 63686172 		.ascii	"char\000"
 2282      00
 2283              	.LASF28:
 2284 043a 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_SetPower\000"
 2284      5341525F 
 2284      5365715F 
 2284      315F5341 
 2284      525F5365 
 2285              	.LASF45:
 2286 0455 61646343 		.ascii	"adcCounts\000"
 2286      6F756E74 
 2286      7300
 2287              	.LASF25:
 2288 045f 656E6162 		.ascii	"enableInterrupts\000"
 2288      6C65496E 
 2288      74657272 
 2288      75707473 
 2288      00
 2289              	.LASF35:
 2290 0470 73746174 		.ascii	"status\000"
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\ccZkNWBQ.s 			page 59


 2290      757300
 2291              	.LASF56:
 2292 0477 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_shift\000"
 2292      5341525F 
 2292      5365715F 
 2292      315F5341 
 2292      525F7368 
 2293              	.LASF14:
 2294 048f 696E7431 		.ascii	"int16\000"
 2294      3600
 2295              	.LASF48:
 2296 0495 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_CountsTo_uVolts\000"
 2296      5341525F 
 2296      5365715F 
 2296      315F5341 
 2296      525F436F 
 2297              	.LASF60:
 2298 04b7 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_GetResult8\000"
 2298      5341525F 
 2298      5365715F 
 2298      315F5341 
 2298      525F4765 
 2299              	.LASF61:
 2300 04d4 4144435F 		.ascii	"ADC_SAR_Seq_1_SAR_CalcGain\000"
 2300      5341525F 
 2300      5365715F 
 2300      315F5341 
 2300      525F4361 
 2301              	.LASF24:
 2302 04ef 746D7052 		.ascii	"tmpReg\000"
 2302      656700
 2303              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
