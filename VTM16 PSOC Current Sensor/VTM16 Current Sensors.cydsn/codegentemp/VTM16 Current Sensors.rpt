Loading plugins phase: Elapsed time ==> 0s.300ms
Initializing data phase: Elapsed time ==> 0s.000ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -p C:\Users\charl\Documents\Virginia_Tech\FSAE\VTMDAQ_EXPERIMENTAL\VTM16 PSOC Current Sensor\VTM16 Current Sensors.cydsn\VTM16 Current Sensors.cyprj -d CY8C5888LTI-LP097 -s C:\Users\charl\Documents\Virginia_Tech\FSAE\VTMDAQ_EXPERIMENTAL\VTM16 PSOC Current Sensor\VTM16 Current Sensors.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_0 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 2s.624ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.131ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  VTM16 Current Sensors.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\bin/warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\charl\Documents\Virginia_Tech\FSAE\VTMDAQ_EXPERIMENTAL\VTM16 PSOC Current Sensor\VTM16 Current Sensors.cydsn\VTM16 Current Sensors.cyprj -dcpsoc3 VTM16 Current Sensors.v -verilog
======================================================================

======================================================================
Compiling:  VTM16 Current Sensors.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\bin/warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\charl\Documents\Virginia_Tech\FSAE\VTMDAQ_EXPERIMENTAL\VTM16 PSOC Current Sensor\VTM16 Current Sensors.cydsn\VTM16 Current Sensors.cyprj -dcpsoc3 VTM16 Current Sensors.v -verilog
======================================================================

======================================================================
Compiling:  VTM16 Current Sensors.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\charl\Documents\Virginia_Tech\FSAE\VTMDAQ_EXPERIMENTAL\VTM16 PSOC Current Sensor\VTM16 Current Sensors.cydsn\VTM16 Current Sensors.cyprj -dcpsoc3 -verilog VTM16 Current Sensors.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Wed Mar 23 13:38:20 2016


======================================================================
Compiling:  VTM16 Current Sensors.v
Program  :   vpp
Options  :    -yv2 -q10 VTM16 Current Sensors.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Wed Mar 23 13:38:20 2016

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'VTM16 Current Sensors.ctl'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1113, col 55):  Note: Substituting module 'add_vv_vv' for '+'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 48):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 77):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1389, col 59):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1424, col 61):  Note: Substituting module 'cmp_vv_vv' for '/='.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1547, col 106):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1603, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1604, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
VTM16 Current Sensors.v (line 786, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
VTM16 Current Sensors.v (line 1529, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.

vlogfe:  No errors.


======================================================================
Compiling:  VTM16 Current Sensors.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\charl\Documents\Virginia_Tech\FSAE\VTMDAQ_EXPERIMENTAL\VTM16 PSOC Current Sensor\VTM16 Current Sensors.cydsn\VTM16 Current Sensors.cyprj -dcpsoc3 -verilog VTM16 Current Sensors.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Wed Mar 23 13:38:20 2016

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\charl\Documents\Virginia_Tech\FSAE\VTMDAQ_EXPERIMENTAL\VTM16 PSOC Current Sensor\VTM16 Current Sensors.cydsn\codegentemp\VTM16 Current Sensors.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Users\charl\Documents\Virginia_Tech\FSAE\VTMDAQ_EXPERIMENTAL\VTM16 PSOC Current Sensor\VTM16 Current Sensors.cydsn\codegentemp\VTM16 Current Sensors.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.

tovif:  No errors.


======================================================================
Compiling:  VTM16 Current Sensors.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\charl\Documents\Virginia_Tech\FSAE\VTMDAQ_EXPERIMENTAL\VTM16 PSOC Current Sensor\VTM16 Current Sensors.cydsn\VTM16 Current Sensors.cyprj -dcpsoc3 -verilog VTM16 Current Sensors.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Wed Mar 23 13:38:21 2016

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\charl\Documents\Virginia_Tech\FSAE\VTMDAQ_EXPERIMENTAL\VTM16 PSOC Current Sensor\VTM16 Current Sensors.cydsn\codegentemp\VTM16 Current Sensors.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Users\charl\Documents\Virginia_Tech\FSAE\VTMDAQ_EXPERIMENTAL\VTM16 PSOC Current Sensor\VTM16 Current Sensors.cydsn\codegentemp\VTM16 Current Sensors.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\UART_1:BUART:reset_sr\
	Net_37
	Net_38
	\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:b_1\
	\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:b_0\
	\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_0\
	\UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:gta_0\
	Net_33
	\UART_1:BUART:sRX:MODULE_6:g2:a0:gta_0\
	\UART_1:BUART:sRX:MODULE_7:g1:a0:gx:u0:albi_1\
	\UART_1:BUART:sRX:MODULE_7:g1:a0:gx:u0:agbi_1\
	\UART_1:BUART:sRX:MODULE_7:g1:a0:gx:u0:lt_0\
	\UART_1:BUART:sRX:MODULE_7:g1:a0:gx:u0:gt_0\
	\UART_1:BUART:sRX:MODULE_7:g1:a0:gx:u0:lti_0\
	\UART_1:BUART:sRX:MODULE_7:g1:a0:gx:u0:gti_0\
	\UART_1:BUART:sRX:MODULE_7:g1:a0:gx:u0:albi_0\
	\UART_1:BUART:sRX:MODULE_7:g1:a0:gx:u0:agbi_0\
	\UART_1:BUART:sRX:MODULE_7:g1:a0:xeq\
	\UART_1:BUART:sRX:MODULE_7:g1:a0:xlt\
	\UART_1:BUART:sRX:MODULE_7:g1:a0:xlte\
	\UART_1:BUART:sRX:MODULE_7:g1:a0:xgt\
	\UART_1:BUART:sRX:MODULE_7:g1:a0:xgte\
	\UART_1:BUART:sRX:MODULE_7:lt\
	\UART_1:BUART:sRX:MODULE_7:eq\
	\UART_1:BUART:sRX:MODULE_7:gt\
	\UART_1:BUART:sRX:MODULE_7:gte\
	\UART_1:BUART:sRX:MODULE_7:lte\
	\ADC_SAR_Seq_1:SAR:Net_221\
	\ADC_SAR_Seq_1:SAR:Net_381\
	\ADC_SAR_Seq_1:bSAR_SEQ:sw_soc\
	\ADC_SAR_Seq_1:soc_out\
	\ADC_SAR_Seq_1:Net_3905\
	\ADC_SAR_Seq_1:Net_3867\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:albi_2\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:agbi_2\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:albi_1\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:agbi_1\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:albi_0\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:agbi_0\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:xneq\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:xlt\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:xlte\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:xgt\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:xgte\
	\ADC_SAR_Seq_1:MODULE_1:lt\
	\ADC_SAR_Seq_1:MODULE_1:gt\
	\ADC_SAR_Seq_1:MODULE_1:gte\
	\ADC_SAR_Seq_1:MODULE_1:lte\
	\ADC_SAR_Seq_1:MODULE_1:neq\
	\ADC_SAR_Seq_2:SAR:Net_221\
	\ADC_SAR_Seq_2:SAR:Net_381\
	\ADC_SAR_Seq_2:bSAR_SEQ:sw_soc\
	\ADC_SAR_Seq_2:soc_out\
	\ADC_SAR_Seq_2:Net_3905\
	\ADC_SAR_Seq_2:Net_3867\
	\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:albi_2\
	\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:agbi_2\
	\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:albi_1\
	\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:agbi_1\
	\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:albi_0\
	\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:agbi_0\
	\ADC_SAR_Seq_2:MODULE_2:g1:a0:xneq\
	\ADC_SAR_Seq_2:MODULE_2:g1:a0:xlt\
	\ADC_SAR_Seq_2:MODULE_2:g1:a0:xlte\
	\ADC_SAR_Seq_2:MODULE_2:g1:a0:xgt\
	\ADC_SAR_Seq_2:MODULE_2:g1:a0:xgte\
	\ADC_SAR_Seq_2:MODULE_2:lt\
	\ADC_SAR_Seq_2:MODULE_2:gt\
	\ADC_SAR_Seq_2:MODULE_2:gte\
	\ADC_SAR_Seq_2:MODULE_2:lte\
	\ADC_SAR_Seq_2:MODULE_2:neq\


Deleted 71 User equations/components.
Deleted 0 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing one to tmpOE__Overall_Production_net_0
Aliasing tmpOE__Overall_Consumption_net_0 to tmpOE__Overall_Production_net_0
Aliasing \UART_1:BUART:tx_hd_send_break\ to zero
Aliasing \UART_1:BUART:HalfDuplexSend\ to zero
Aliasing \UART_1:BUART:FinalParityType_1\ to zero
Aliasing \UART_1:BUART:FinalParityType_0\ to zero
Aliasing \UART_1:BUART:FinalAddrMode_2\ to zero
Aliasing \UART_1:BUART:FinalAddrMode_1\ to zero
Aliasing \UART_1:BUART:FinalAddrMode_0\ to zero
Aliasing \UART_1:BUART:tx_ctrl_mark\ to zero
Aliasing \UART_1:BUART:tx_status_6\ to zero
Aliasing \UART_1:BUART:tx_status_5\ to zero
Aliasing \UART_1:BUART:tx_status_4\ to zero
Aliasing \UART_1:BUART:rx_count7_bit8_wire\ to zero
Aliasing \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_0\ to tmpOE__Overall_Production_net_0
Aliasing \UART_1:BUART:sRX:s23Poll:MODIN6_1\ to \UART_1:BUART:sRX:s23Poll:MODIN5_1\
Aliasing \UART_1:BUART:sRX:s23Poll:MODIN6_0\ to \UART_1:BUART:sRX:s23Poll:MODIN5_0\
Aliasing \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\ to zero
Aliasing \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\ to tmpOE__Overall_Production_net_0
Aliasing \UART_1:BUART:sRX:s23Poll:MODIN7_1\ to \UART_1:BUART:sRX:s23Poll:MODIN5_1\
Aliasing \UART_1:BUART:sRX:s23Poll:MODIN7_0\ to \UART_1:BUART:sRX:s23Poll:MODIN5_0\
Aliasing \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_1\ to tmpOE__Overall_Production_net_0
Aliasing \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_0\ to zero
Aliasing \UART_1:BUART:rx_status_1\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_6:g2:a0:newa_6\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_6:g2:a0:newa_5\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_6:g2:a0:newa_4\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_6:g2:a0:newb_6\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_6:g2:a0:newb_5\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_6:g2:a0:newb_4\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_6:g2:a0:newb_3\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_6:g2:a0:newb_2\ to tmpOE__Overall_Production_net_0
Aliasing \UART_1:BUART:sRX:MODULE_6:g2:a0:newb_1\ to tmpOE__Overall_Production_net_0
Aliasing \UART_1:BUART:sRX:MODULE_6:g2:a0:newb_0\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_7:g1:a0:gx:u0:aeqb_0\ to tmpOE__Overall_Production_net_0
Aliasing tmpOE__Rx_1_net_0 to tmpOE__Overall_Production_net_0
Aliasing tmpOE__Tx_1_net_0 to tmpOE__Overall_Production_net_0
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_enable\ to tmpOE__Overall_Production_net_0
Aliasing \ADC_SAR_Seq_1:SAR:vp_ctl_0\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vp_ctl_2\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vn_ctl_1\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vn_ctl_3\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vp_ctl_1\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vp_ctl_3\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vn_ctl_0\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vn_ctl_2\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:soc\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_7\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_6\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_5\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_4\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_3\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_2\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_1\ to zero
Aliasing Net_549 to \ADC_SAR_Seq_1:bSAR_SEQ:status_0\
Aliasing \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:aeqb_0\ to tmpOE__Overall_Production_net_0
Aliasing tmpOE__Fuel_Pump_net_0 to tmpOE__Overall_Production_net_0
Aliasing tmpOE__Fuel_Injector_net_0 to tmpOE__Overall_Production_net_0
Aliasing tmpOE__Ignition_net_0 to tmpOE__Overall_Production_net_0
Aliasing tmpOE__Vref_net_0 to tmpOE__Overall_Production_net_0
Aliasing tmpOE__I2C_pins_net_1 to tmpOE__Overall_Production_net_0
Aliasing tmpOE__I2C_pins_net_0 to tmpOE__Overall_Production_net_0
Aliasing \EZI2C_1:Net_128\ to zero
Aliasing \EZI2C_1:Net_190\ to tmpOE__Overall_Production_net_0
Aliasing \EZI2C_1:Net_145\ to tmpOE__Overall_Production_net_0
Aliasing tmpOE__LED_net_0 to tmpOE__Overall_Production_net_0
Aliasing Net_725 to tmpOE__Overall_Production_net_0
Aliasing \ADC_SAR_Seq_2:AMuxHw_2_Decoder_enable\ to tmpOE__Overall_Production_net_0
Aliasing \ADC_SAR_Seq_2:SAR:vp_ctl_0\ to zero
Aliasing \ADC_SAR_Seq_2:SAR:vp_ctl_2\ to zero
Aliasing \ADC_SAR_Seq_2:SAR:vn_ctl_1\ to zero
Aliasing \ADC_SAR_Seq_2:SAR:vn_ctl_3\ to zero
Aliasing \ADC_SAR_Seq_2:SAR:vp_ctl_1\ to zero
Aliasing \ADC_SAR_Seq_2:SAR:vp_ctl_3\ to zero
Aliasing \ADC_SAR_Seq_2:SAR:vn_ctl_0\ to zero
Aliasing \ADC_SAR_Seq_2:SAR:vn_ctl_2\ to zero
Aliasing \ADC_SAR_Seq_2:SAR:soc\ to zero
Aliasing \ADC_SAR_Seq_2:bSAR_SEQ:status_7\ to zero
Aliasing \ADC_SAR_Seq_2:bSAR_SEQ:status_6\ to zero
Aliasing \ADC_SAR_Seq_2:bSAR_SEQ:status_5\ to zero
Aliasing \ADC_SAR_Seq_2:bSAR_SEQ:status_4\ to zero
Aliasing \ADC_SAR_Seq_2:bSAR_SEQ:status_3\ to zero
Aliasing \ADC_SAR_Seq_2:bSAR_SEQ:status_2\ to zero
Aliasing \ADC_SAR_Seq_2:bSAR_SEQ:status_1\ to zero
Aliasing Net_1031 to \ADC_SAR_Seq_2:bSAR_SEQ:status_0\
Aliasing \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:aeqb_0\ to tmpOE__Overall_Production_net_0
Aliasing tmpOE__Back_Left_net_0 to tmpOE__Overall_Production_net_0
Aliasing tmpOE__Back_Right_net_0 to tmpOE__Overall_Production_net_0
Aliasing tmpOE__Front_Left_net_0 to tmpOE__Overall_Production_net_0
Aliasing tmpOE__Front_Right_net_0 to tmpOE__Overall_Production_net_0
Aliasing \UART_1:BUART:reset_reg\\D\ to zero
Aliasing \UART_1:BUART:rx_break_status\\D\ to zero
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\\D\ to \ADC_SAR_Seq_1:MODIN1_5\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\\D\ to \ADC_SAR_Seq_1:MODIN1_4\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\\D\ to \ADC_SAR_Seq_1:MODIN1_3\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\\D\ to \ADC_SAR_Seq_1:MODIN1_2\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\\D\ to \ADC_SAR_Seq_1:MODIN1_1\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\\D\ to \ADC_SAR_Seq_1:MODIN1_0\
Aliasing \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\\D\ to \ADC_SAR_Seq_2:MODIN3_5\
Aliasing \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\\D\ to \ADC_SAR_Seq_2:MODIN3_4\
Aliasing \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\\D\ to \ADC_SAR_Seq_2:MODIN3_3\
Aliasing \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\\D\ to \ADC_SAR_Seq_2:MODIN3_2\
Aliasing \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\\D\ to \ADC_SAR_Seq_2:MODIN3_1\
Aliasing \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\\D\ to \ADC_SAR_Seq_2:MODIN3_0\
Removing Lhs of wire one[7] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire tmpOE__Overall_Consumption_net_0[10] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \UART_1:Net_61\[18] = \UART_1:Net_9\[17]
Removing Lhs of wire \UART_1:BUART:tx_hd_send_break\[22] = zero[2]
Removing Lhs of wire \UART_1:BUART:HalfDuplexSend\[23] = zero[2]
Removing Lhs of wire \UART_1:BUART:FinalParityType_1\[24] = zero[2]
Removing Lhs of wire \UART_1:BUART:FinalParityType_0\[25] = zero[2]
Removing Lhs of wire \UART_1:BUART:FinalAddrMode_2\[26] = zero[2]
Removing Lhs of wire \UART_1:BUART:FinalAddrMode_1\[27] = zero[2]
Removing Lhs of wire \UART_1:BUART:FinalAddrMode_0\[28] = zero[2]
Removing Lhs of wire \UART_1:BUART:tx_ctrl_mark\[29] = zero[2]
Removing Rhs of wire \UART_1:BUART:tx_bitclk_enable_pre\[41] = \UART_1:BUART:tx_bitclk_dp\[77]
Removing Lhs of wire \UART_1:BUART:tx_counter_tc\[87] = \UART_1:BUART:tx_counter_dp\[78]
Removing Lhs of wire \UART_1:BUART:tx_status_6\[88] = zero[2]
Removing Lhs of wire \UART_1:BUART:tx_status_5\[89] = zero[2]
Removing Lhs of wire \UART_1:BUART:tx_status_4\[90] = zero[2]
Removing Lhs of wire \UART_1:BUART:tx_status_1\[92] = \UART_1:BUART:tx_fifo_empty\[55]
Removing Lhs of wire \UART_1:BUART:tx_status_3\[94] = \UART_1:BUART:tx_fifo_notfull\[54]
Removing Lhs of wire \UART_1:BUART:rx_count7_bit8_wire\[154] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:add_vv_vv_MODGEN_3_1\[162] = \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_1\[173]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:add_vv_vv_MODGEN_3_0\[164] = \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_0\[174]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_4\[165] = \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\[190]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_5\[166] = \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_0\[204]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:a_1\[167] = \UART_1:BUART:sRX:s23Poll:MODIN5_1\[168]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN5_1\[168] = \UART_1:BUART:pollcount_1\[160]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:a_0\[169] = \UART_1:BUART:sRX:s23Poll:MODIN5_0\[170]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN5_0\[170] = \UART_1:BUART:pollcount_0\[163]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_0\[176] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_0\[177] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_1\[178] = \UART_1:BUART:pollcount_1\[160]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN6_1\[179] = \UART_1:BUART:pollcount_1\[160]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_0\[180] = \UART_1:BUART:pollcount_0\[163]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN6_0\[181] = \UART_1:BUART:pollcount_0\[163]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\[182] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\[183] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_1\[184] = \UART_1:BUART:pollcount_1\[160]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_0\[185] = \UART_1:BUART:pollcount_0\[163]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_1\[186] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_0\[187] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:newa_1\[192] = \UART_1:BUART:pollcount_1\[160]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN7_1\[193] = \UART_1:BUART:pollcount_1\[160]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:newa_0\[194] = \UART_1:BUART:pollcount_0\[163]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN7_0\[195] = \UART_1:BUART:pollcount_0\[163]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_1\[196] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_0\[197] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:dataa_1\[198] = \UART_1:BUART:pollcount_1\[160]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:dataa_0\[199] = \UART_1:BUART:pollcount_0\[163]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:datab_1\[200] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:datab_0\[201] = zero[2]
Removing Lhs of wire \UART_1:BUART:rx_status_1\[208] = zero[2]
Removing Rhs of wire \UART_1:BUART:rx_status_2\[209] = \UART_1:BUART:rx_parity_error_status\[210]
Removing Rhs of wire \UART_1:BUART:rx_status_3\[211] = \UART_1:BUART:rx_stop_bit_error\[212]
Removing Lhs of wire \UART_1:BUART:sRX:cmp_vv_vv_MODGEN_6\[222] = \UART_1:BUART:sRX:MODULE_6:g2:a0:lta_0\[271]
Removing Lhs of wire \UART_1:BUART:sRX:cmp_vv_vv_MODGEN_7\[226] = \UART_1:BUART:sRX:MODULE_7:g1:a0:xneq\[293]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:newa_6\[227] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:newa_5\[228] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:newa_4\[229] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:newa_3\[230] = \UART_1:BUART:sRX:MODIN8_6\[231]
Removing Lhs of wire \UART_1:BUART:sRX:MODIN8_6\[231] = \UART_1:BUART:rx_count_6\[149]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:newa_2\[232] = \UART_1:BUART:sRX:MODIN8_5\[233]
Removing Lhs of wire \UART_1:BUART:sRX:MODIN8_5\[233] = \UART_1:BUART:rx_count_5\[150]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:newa_1\[234] = \UART_1:BUART:sRX:MODIN8_4\[235]
Removing Lhs of wire \UART_1:BUART:sRX:MODIN8_4\[235] = \UART_1:BUART:rx_count_4\[151]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:newa_0\[236] = \UART_1:BUART:sRX:MODIN8_3\[237]
Removing Lhs of wire \UART_1:BUART:sRX:MODIN8_3\[237] = \UART_1:BUART:rx_count_3\[152]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:newb_6\[238] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:newb_5\[239] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:newb_4\[240] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:newb_3\[241] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:newb_2\[242] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:newb_1\[243] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:newb_0\[244] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:dataa_6\[245] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:dataa_5\[246] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:dataa_4\[247] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:dataa_3\[248] = \UART_1:BUART:rx_count_6\[149]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:dataa_2\[249] = \UART_1:BUART:rx_count_5\[150]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:dataa_1\[250] = \UART_1:BUART:rx_count_4\[151]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:dataa_0\[251] = \UART_1:BUART:rx_count_3\[152]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:datab_6\[252] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:datab_5\[253] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:datab_4\[254] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:datab_3\[255] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:datab_2\[256] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:datab_1\[257] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g2:a0:datab_0\[258] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g1:a0:newa_0\[273] = \UART_1:BUART:rx_postpoll\[108]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g1:a0:newb_0\[274] = \UART_1:BUART:rx_parity_bit\[225]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g1:a0:dataa_0\[275] = \UART_1:BUART:rx_postpoll\[108]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g1:a0:datab_0\[276] = \UART_1:BUART:rx_parity_bit\[225]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g1:a0:gx:u0:a_0\[277] = \UART_1:BUART:rx_postpoll\[108]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g1:a0:gx:u0:b_0\[278] = \UART_1:BUART:rx_parity_bit\[225]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g1:a0:gx:u0:aeqb_0\[280] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g1:a0:gx:u0:eq_0\[281] = \UART_1:BUART:sRX:MODULE_7:g1:a0:gx:u0:xnor_array_0\[279]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g1:a0:gx:u0:eqi_0\[282] = \UART_1:BUART:sRX:MODULE_7:g1:a0:gx:u0:xnor_array_0\[279]
Removing Lhs of wire tmpOE__Rx_1_net_0[304] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire tmpOE__Tx_1_net_0[309] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_enable\[314] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \ADC_SAR_Seq_1:cmp_vv_vv_MODGEN_1\[316] = \ADC_SAR_Seq_1:MODULE_1:g1:a0:xeq\[649]
Removing Rhs of wire \ADC_SAR_Seq_1:clock\[317] = \ADC_SAR_Seq_1:Net_3874\[549]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_5\[319] = \ADC_SAR_Seq_1:bSAR_SEQ:count_5\[516]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_4\[321] = \ADC_SAR_Seq_1:bSAR_SEQ:count_4\[517]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_3\[323] = \ADC_SAR_Seq_1:bSAR_SEQ:count_3\[518]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_2\[325] = \ADC_SAR_Seq_1:bSAR_SEQ:count_2\[519]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_1\[327] = \ADC_SAR_Seq_1:bSAR_SEQ:count_1\[520]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_0\[329] = \ADC_SAR_Seq_1:bSAR_SEQ:count_0\[521]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vp_ctl_0\[461] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vp_ctl_2\[462] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vn_ctl_1\[463] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vn_ctl_3\[464] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vp_ctl_1\[465] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vp_ctl_3\[466] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vn_ctl_0\[467] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vn_ctl_2\[468] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:Net_188\[469] = \ADC_SAR_Seq_1:clock\[317]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:soc\[475] = zero[2]
Removing Rhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:enable\[506] = \ADC_SAR_Seq_1:bSAR_SEQ:control_0\[507]
Removing Rhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:load_period\[508] = \ADC_SAR_Seq_1:bSAR_SEQ:control_1\[509]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_7\[522] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_6\[523] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_5\[524] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_4\[525] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_3\[526] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_2\[527] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_1\[528] = zero[2]
Removing Rhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_0\[529] = \ADC_SAR_Seq_1:bSAR_SEQ:nrq_edge_detect_reg\[530]
Removing Rhs of wire Net_549[537] = \ADC_SAR_Seq_1:bSAR_SEQ:status_0\[529]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_5\[560] = \ADC_SAR_Seq_1:MODIN1_5\[561]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_5\[561] = \ADC_SAR_Seq_1:ch_addr_5\[319]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_4\[562] = \ADC_SAR_Seq_1:MODIN1_4\[563]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_4\[563] = \ADC_SAR_Seq_1:ch_addr_4\[321]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_3\[564] = \ADC_SAR_Seq_1:MODIN1_3\[565]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_3\[565] = \ADC_SAR_Seq_1:ch_addr_3\[323]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_2\[566] = \ADC_SAR_Seq_1:MODIN1_2\[567]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_2\[567] = \ADC_SAR_Seq_1:ch_addr_2\[325]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_1\[568] = \ADC_SAR_Seq_1:MODIN1_1\[569]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_1\[569] = \ADC_SAR_Seq_1:ch_addr_1\[327]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_0\[570] = \ADC_SAR_Seq_1:MODIN1_0\[571]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_0\[571] = \ADC_SAR_Seq_1:ch_addr_0\[329]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_5\[572] = \ADC_SAR_Seq_1:MODIN2_5\[573]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_5\[573] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\[318]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_4\[574] = \ADC_SAR_Seq_1:MODIN2_4\[575]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_4\[575] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\[320]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_3\[576] = \ADC_SAR_Seq_1:MODIN2_3\[577]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_3\[577] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\[322]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_2\[578] = \ADC_SAR_Seq_1:MODIN2_2\[579]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_2\[579] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\[324]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_1\[580] = \ADC_SAR_Seq_1:MODIN2_1\[581]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_1\[581] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\[326]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_0\[582] = \ADC_SAR_Seq_1:MODIN2_0\[583]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_0\[583] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\[328]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_5\[584] = \ADC_SAR_Seq_1:ch_addr_5\[319]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_4\[585] = \ADC_SAR_Seq_1:ch_addr_4\[321]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_3\[586] = \ADC_SAR_Seq_1:ch_addr_3\[323]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_2\[587] = \ADC_SAR_Seq_1:ch_addr_2\[325]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_1\[588] = \ADC_SAR_Seq_1:ch_addr_1\[327]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_0\[589] = \ADC_SAR_Seq_1:ch_addr_0\[329]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_5\[590] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\[318]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_4\[591] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\[320]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_3\[592] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\[322]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_2\[593] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\[324]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_1\[594] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\[326]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_0\[595] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\[328]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_5\[596] = \ADC_SAR_Seq_1:ch_addr_5\[319]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_4\[597] = \ADC_SAR_Seq_1:ch_addr_4\[321]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_3\[598] = \ADC_SAR_Seq_1:ch_addr_3\[323]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_2\[599] = \ADC_SAR_Seq_1:ch_addr_2\[325]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_1\[600] = \ADC_SAR_Seq_1:ch_addr_1\[327]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_0\[601] = \ADC_SAR_Seq_1:ch_addr_0\[329]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_5\[602] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\[318]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_4\[603] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\[320]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_3\[604] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\[322]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_2\[605] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\[324]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_1\[606] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\[326]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_0\[607] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\[328]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:aeqb_0\[614] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_0\[615] = \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_0\[613]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eqi_0\[621] = \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_5\[620]
Removing Rhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:xeq\[649] = \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:aeqb_1\[622]
Removing Lhs of wire tmpOE__Fuel_Pump_net_0[661] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire tmpOE__Fuel_Injector_net_0[667] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire tmpOE__Ignition_net_0[673] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire tmpOE__Vref_net_0[679] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire tmpOE__I2C_pins_net_1[685] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire tmpOE__I2C_pins_net_0[686] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \EZI2C_1:Net_128\[694] = zero[2]
Removing Lhs of wire \EZI2C_1:tmpOE__cy_bufoe_1_net_0\[701] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \EZI2C_1:Net_190\[702] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \EZI2C_1:tmpOE__cy_bufoe_2_net_0\[704] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \EZI2C_1:Net_145\[705] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire tmpOE__LED_net_0[708] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire Net_725[709] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \ADC_SAR_Seq_2:AMuxHw_2_Decoder_enable\[714] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \ADC_SAR_Seq_2:cmp_vv_vv_MODGEN_2\[716] = \ADC_SAR_Seq_2:MODULE_2:g1:a0:xeq\[1051]
Removing Rhs of wire \ADC_SAR_Seq_2:clock\[717] = \ADC_SAR_Seq_2:Net_3874\[951]
Removing Rhs of wire \ADC_SAR_Seq_2:ch_addr_5\[719] = \ADC_SAR_Seq_2:bSAR_SEQ:count_5\[918]
Removing Rhs of wire \ADC_SAR_Seq_2:ch_addr_4\[721] = \ADC_SAR_Seq_2:bSAR_SEQ:count_4\[919]
Removing Rhs of wire \ADC_SAR_Seq_2:ch_addr_3\[723] = \ADC_SAR_Seq_2:bSAR_SEQ:count_3\[920]
Removing Rhs of wire \ADC_SAR_Seq_2:ch_addr_2\[725] = \ADC_SAR_Seq_2:bSAR_SEQ:count_2\[921]
Removing Rhs of wire \ADC_SAR_Seq_2:ch_addr_1\[727] = \ADC_SAR_Seq_2:bSAR_SEQ:count_1\[922]
Removing Rhs of wire \ADC_SAR_Seq_2:ch_addr_0\[729] = \ADC_SAR_Seq_2:bSAR_SEQ:count_0\[923]
Removing Lhs of wire \ADC_SAR_Seq_2:SAR:vp_ctl_0\[863] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:SAR:vp_ctl_2\[864] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:SAR:vn_ctl_1\[865] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:SAR:vn_ctl_3\[866] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:SAR:vp_ctl_1\[867] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:SAR:vp_ctl_3\[868] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:SAR:vn_ctl_0\[869] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:SAR:vn_ctl_2\[870] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:SAR:Net_188\[871] = \ADC_SAR_Seq_2:clock\[717]
Removing Lhs of wire \ADC_SAR_Seq_2:SAR:soc\[877] = zero[2]
Removing Rhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:enable\[908] = \ADC_SAR_Seq_2:bSAR_SEQ:control_0\[909]
Removing Rhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:load_period\[910] = \ADC_SAR_Seq_2:bSAR_SEQ:control_1\[911]
Removing Lhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:status_7\[924] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:status_6\[925] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:status_5\[926] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:status_4\[927] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:status_3\[928] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:status_2\[929] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:status_1\[930] = zero[2]
Removing Rhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:status_0\[931] = \ADC_SAR_Seq_2:bSAR_SEQ:nrq_edge_detect_reg\[932]
Removing Rhs of wire Net_1031[939] = \ADC_SAR_Seq_2:bSAR_SEQ:status_0\[931]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:newa_5\[962] = \ADC_SAR_Seq_2:MODIN3_5\[963]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN3_5\[963] = \ADC_SAR_Seq_2:ch_addr_5\[719]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:newa_4\[964] = \ADC_SAR_Seq_2:MODIN3_4\[965]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN3_4\[965] = \ADC_SAR_Seq_2:ch_addr_4\[721]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:newa_3\[966] = \ADC_SAR_Seq_2:MODIN3_3\[967]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN3_3\[967] = \ADC_SAR_Seq_2:ch_addr_3\[723]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:newa_2\[968] = \ADC_SAR_Seq_2:MODIN3_2\[969]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN3_2\[969] = \ADC_SAR_Seq_2:ch_addr_2\[725]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:newa_1\[970] = \ADC_SAR_Seq_2:MODIN3_1\[971]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN3_1\[971] = \ADC_SAR_Seq_2:ch_addr_1\[727]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:newa_0\[972] = \ADC_SAR_Seq_2:MODIN3_0\[973]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN3_0\[973] = \ADC_SAR_Seq_2:ch_addr_0\[729]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:newb_5\[974] = \ADC_SAR_Seq_2:MODIN4_5\[975]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN4_5\[975] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\[718]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:newb_4\[976] = \ADC_SAR_Seq_2:MODIN4_4\[977]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN4_4\[977] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\[720]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:newb_3\[978] = \ADC_SAR_Seq_2:MODIN4_3\[979]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN4_3\[979] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\[722]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:newb_2\[980] = \ADC_SAR_Seq_2:MODIN4_2\[981]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN4_2\[981] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\[724]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:newb_1\[982] = \ADC_SAR_Seq_2:MODIN4_1\[983]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN4_1\[983] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\[726]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:newb_0\[984] = \ADC_SAR_Seq_2:MODIN4_0\[985]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN4_0\[985] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\[728]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:dataa_5\[986] = \ADC_SAR_Seq_2:ch_addr_5\[719]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:dataa_4\[987] = \ADC_SAR_Seq_2:ch_addr_4\[721]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:dataa_3\[988] = \ADC_SAR_Seq_2:ch_addr_3\[723]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:dataa_2\[989] = \ADC_SAR_Seq_2:ch_addr_2\[725]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:dataa_1\[990] = \ADC_SAR_Seq_2:ch_addr_1\[727]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:dataa_0\[991] = \ADC_SAR_Seq_2:ch_addr_0\[729]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:datab_5\[992] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\[718]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:datab_4\[993] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\[720]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:datab_3\[994] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\[722]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:datab_2\[995] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\[724]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:datab_1\[996] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\[726]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:datab_0\[997] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\[728]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:a_5\[998] = \ADC_SAR_Seq_2:ch_addr_5\[719]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:a_4\[999] = \ADC_SAR_Seq_2:ch_addr_4\[721]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:a_3\[1000] = \ADC_SAR_Seq_2:ch_addr_3\[723]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:a_2\[1001] = \ADC_SAR_Seq_2:ch_addr_2\[725]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:a_1\[1002] = \ADC_SAR_Seq_2:ch_addr_1\[727]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:a_0\[1003] = \ADC_SAR_Seq_2:ch_addr_0\[729]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:b_5\[1004] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\[718]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:b_4\[1005] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\[720]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:b_3\[1006] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\[722]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:b_2\[1007] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\[724]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:b_1\[1008] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\[726]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:b_0\[1009] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\[728]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:aeqb_0\[1016] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:eq_0\[1017] = \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:xnor_array_0\[1015]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:eqi_0\[1023] = \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:eq_5\[1022]
Removing Rhs of wire \ADC_SAR_Seq_2:MODULE_2:g1:a0:xeq\[1051] = \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:aeqb_1\[1024]
Removing Lhs of wire tmpOE__Back_Left_net_0[1063] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire tmpOE__Back_Right_net_0[1069] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire tmpOE__Front_Left_net_0[1075] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire tmpOE__Front_Right_net_0[1081] = tmpOE__Overall_Production_net_0[1]
Removing Lhs of wire \UART_1:BUART:reset_reg\\D\[1086] = zero[2]
Removing Lhs of wire \UART_1:BUART:rx_bitclk\\D\[1101] = \UART_1:BUART:rx_bitclk_pre\[143]
Removing Lhs of wire \UART_1:BUART:rx_parity_error_pre\\D\[1110] = \UART_1:BUART:rx_parity_error_pre\[220]
Removing Lhs of wire \UART_1:BUART:rx_break_status\\D\[1111] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\\D\[1115] = \ADC_SAR_Seq_1:ch_addr_5\[319]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\\D\[1116] = \ADC_SAR_Seq_1:ch_addr_4\[321]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\\D\[1117] = \ADC_SAR_Seq_1:ch_addr_3\[323]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\\D\[1118] = \ADC_SAR_Seq_1:ch_addr_2\[325]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\\D\[1119] = \ADC_SAR_Seq_1:ch_addr_1\[327]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\\D\[1120] = \ADC_SAR_Seq_1:ch_addr_0\[329]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:nrq_edge_detect_reg\\D\[1185] = \ADC_SAR_Seq_1:bSAR_SEQ:nrq_edge_detect\[536]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\\D\[1187] = \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\[533]
Removing Lhs of wire \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\\D\[1188] = \ADC_SAR_Seq_2:ch_addr_5\[719]
Removing Lhs of wire \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\\D\[1189] = \ADC_SAR_Seq_2:ch_addr_4\[721]
Removing Lhs of wire \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\\D\[1190] = \ADC_SAR_Seq_2:ch_addr_3\[723]
Removing Lhs of wire \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\\D\[1191] = \ADC_SAR_Seq_2:ch_addr_2\[725]
Removing Lhs of wire \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\\D\[1192] = \ADC_SAR_Seq_2:ch_addr_1\[727]
Removing Lhs of wire \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\\D\[1193] = \ADC_SAR_Seq_2:ch_addr_0\[729]
Removing Lhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:nrq_edge_detect_reg\\D\[1258] = \ADC_SAR_Seq_2:bSAR_SEQ:nrq_edge_detect\[938]
Removing Lhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:nrq_reg\\D\[1260] = \ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\[935]

------------------------------------------------------
Aliased 0 equations, 298 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'tmpOE__Overall_Production_net_0' (cost = 0):
tmpOE__Overall_Production_net_0 <=  ('1') ;

Note:  Expanding virtual equation for 'zero' (cost = 0):
zero <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:rx_addressmatch\' (cost = 0):
\UART_1:BUART:rx_addressmatch\ <= (\UART_1:BUART:rx_addressmatch2\
	OR \UART_1:BUART:rx_addressmatch1\);

Note:  Expanding virtual equation for '\UART_1:BUART:rx_bitclk_pre\' (cost = 1):
\UART_1:BUART:rx_bitclk_pre\ <= ((not \UART_1:BUART:rx_count_2\ and not \UART_1:BUART:rx_count_1\ and not \UART_1:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:rx_bitclk_pre16x\' (cost = 0):
\UART_1:BUART:rx_bitclk_pre16x\ <= ((not \UART_1:BUART:rx_count_2\ and \UART_1:BUART:rx_count_1\ and \UART_1:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:rx_poll_bit1\' (cost = 1):
\UART_1:BUART:rx_poll_bit1\ <= ((not \UART_1:BUART:rx_count_2\ and not \UART_1:BUART:rx_count_1\ and \UART_1:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:rx_poll_bit2\' (cost = 1):
\UART_1:BUART:rx_poll_bit2\ <= ((not \UART_1:BUART:rx_count_2\ and not \UART_1:BUART:rx_count_1\ and not \UART_1:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:pollingrange\' (cost = 4):
\UART_1:BUART:pollingrange\ <= ((not \UART_1:BUART:rx_count_2\ and not \UART_1:BUART:rx_count_1\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\UART_1:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_0\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_0\ <= (not \UART_1:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\ <= (\UART_1:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_1\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_1\ <= (not \UART_1:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:gta_1\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:gta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_6:g2:a0:lta_6\' (cost = 0):
\UART_1:BUART:sRX:MODULE_6:g2:a0:lta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_6:g2:a0:gta_6\' (cost = 0):
\UART_1:BUART:sRX:MODULE_6:g2:a0:gta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_6:g2:a0:lta_5\' (cost = 0):
\UART_1:BUART:sRX:MODULE_6:g2:a0:lta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_6:g2:a0:gta_5\' (cost = 0):
\UART_1:BUART:sRX:MODULE_6:g2:a0:gta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_6:g2:a0:lta_4\' (cost = 0):
\UART_1:BUART:sRX:MODULE_6:g2:a0:lta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_6:g2:a0:gta_4\' (cost = 0):
\UART_1:BUART:sRX:MODULE_6:g2:a0:gta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_6:g2:a0:lta_3\' (cost = 0):
\UART_1:BUART:sRX:MODULE_6:g2:a0:lta_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_6:g2:a0:gta_3\' (cost = 0):
\UART_1:BUART:sRX:MODULE_6:g2:a0:gta_3\ <= (\UART_1:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_6:g2:a0:lta_2\' (cost = 1):
\UART_1:BUART:sRX:MODULE_6:g2:a0:lta_2\ <= ((not \UART_1:BUART:rx_count_6\ and not \UART_1:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_6:g2:a0:gta_2\' (cost = 0):
\UART_1:BUART:sRX:MODULE_6:g2:a0:gta_2\ <= (\UART_1:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_6:g2:a0:lta_1\' (cost = 2):
\UART_1:BUART:sRX:MODULE_6:g2:a0:lta_1\ <= ((not \UART_1:BUART:rx_count_6\ and not \UART_1:BUART:rx_count_4\)
	OR (not \UART_1:BUART:rx_count_6\ and not \UART_1:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_6:g2:a0:gta_1\' (cost = 0):
\UART_1:BUART:sRX:MODULE_6:g2:a0:gta_1\ <= (\UART_1:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_6:g2:a0:lta_0\' (cost = 8):
\UART_1:BUART:sRX:MODULE_6:g2:a0:lta_0\ <= ((not \UART_1:BUART:rx_count_6\ and not \UART_1:BUART:rx_count_4\)
	OR (not \UART_1:BUART:rx_count_6\ and not \UART_1:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:xnor_array_5\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:xnor_array_4\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:xnor_array_3\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:xnor_array_2\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:xnor_array_1\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:xnor_array_0\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:eq_1\' (cost = 8):
\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:eq_1\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:eq_2\' (cost = 16):
\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:eq_2\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:eq_3\' (cost = 32):
\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:eq_3\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:eq_4\' (cost = 64):
\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:eq_4\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:eq_5\' (cost = 64):
\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:eq_5\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:lt_3\' (cost = 2):
\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:lt_3\ <= ((not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:gt_3\' (cost = 2):
\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:gt_3\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:lt_4\' (cost = 6):
\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:lt_4\ <= ((not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:gt_4\' (cost = 6):
\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:gt_4\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:lt_0\' (cost = 2):
\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:lt_0\ <= ((not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:gt_0\' (cost = 2):
\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:gt_0\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:lt_1\' (cost = 6):
\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:lt_1\ <= ((not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:gt_1\' (cost = 6):
\ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:gt_1\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\' (cost = 4):
\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\ <= ((not \UART_1:BUART:pollcount_1\ and not \UART_1:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_0\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_0\ <= (not \UART_1:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_1\' (cost = 2):
\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_1\ <= ((not \UART_1:BUART:pollcount_0\ and \UART_1:BUART:pollcount_1\)
	OR (not \UART_1:BUART:pollcount_1\ and \UART_1:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:xeq\' (cost = 64):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:xeq\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_2:g1:a0:xeq\' (cost = 64):
\ADC_SAR_Seq_2:MODULE_2:g1:a0:xeq\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\));


Substituting virtuals - pass 3:

Note:  Expanding virtual equation for '\UART_1:BUART:rx_postpoll\' (cost = 72):
\UART_1:BUART:rx_postpoll\ <= (\UART_1:BUART:pollcount_1\
	OR (Net_25 and \UART_1:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_7:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\UART_1:BUART:sRX:MODULE_7:g1:a0:gx:u0:xnor_array_0\ <= ((not \UART_1:BUART:pollcount_1\ and not Net_25 and not \UART_1:BUART:rx_parity_bit\)
	OR (not \UART_1:BUART:pollcount_1\ and not \UART_1:BUART:pollcount_0\ and not \UART_1:BUART:rx_parity_bit\)
	OR (\UART_1:BUART:pollcount_1\ and \UART_1:BUART:rx_parity_bit\)
	OR (Net_25 and \UART_1:BUART:pollcount_0\ and \UART_1:BUART:rx_parity_bit\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_7:g1:a0:gx:u0:aeqb_1\' (cost = 4):
\UART_1:BUART:sRX:MODULE_7:g1:a0:gx:u0:aeqb_1\ <= ((not \UART_1:BUART:pollcount_1\ and not Net_25 and not \UART_1:BUART:rx_parity_bit\)
	OR (not \UART_1:BUART:pollcount_1\ and not \UART_1:BUART:pollcount_0\ and not \UART_1:BUART:rx_parity_bit\)
	OR (\UART_1:BUART:pollcount_1\ and \UART_1:BUART:rx_parity_bit\)
	OR (Net_25 and \UART_1:BUART:pollcount_0\ and \UART_1:BUART:rx_parity_bit\));

Note:  Virtual signal \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Virtual signal \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\));


Substituting virtuals - pass 4:


----------------------------------------------------------
Circuit simplification results:

	Expanded 73 signals.
	Turned 2 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \UART_1:BUART:rx_status_0\ to zero
Aliasing \UART_1:BUART:rx_status_6\ to zero
Aliasing \UART_1:BUART:rx_markspace_status\\D\ to zero
Aliasing \UART_1:BUART:rx_parity_error_status\\D\ to zero
Aliasing \UART_1:BUART:rx_addr_match_status\\D\ to zero
Removing Rhs of wire \UART_1:BUART:rx_bitclk_enable\[107] = \UART_1:BUART:rx_bitclk\[155]
Removing Lhs of wire \UART_1:BUART:rx_status_0\[206] = zero[2]
Removing Lhs of wire \UART_1:BUART:rx_status_6\[215] = zero[2]
Removing Lhs of wire \UART_1:BUART:tx_ctrl_mark_last\\D\[1093] = \UART_1:BUART:tx_ctrl_mark_last\[98]
Removing Lhs of wire \UART_1:BUART:rx_markspace_status\\D\[1105] = zero[2]
Removing Lhs of wire \UART_1:BUART:rx_parity_error_status\\D\[1106] = zero[2]
Removing Lhs of wire \UART_1:BUART:rx_addr_match_status\\D\[1108] = zero[2]
Removing Lhs of wire \UART_1:BUART:rx_markspace_pre\\D\[1109] = \UART_1:BUART:rx_markspace_pre\[219]
Removing Lhs of wire \UART_1:BUART:rx_parity_bit\\D\[1114] = \UART_1:BUART:rx_parity_bit\[225]

------------------------------------------------------
Aliased 0 equations, 9 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:

Note:  Deleted unused equation:
\UART_1:BUART:sRX:MODULE_7:g1:a0:xneq\ <= ((not \UART_1:BUART:rx_parity_bit\ and Net_25 and \UART_1:BUART:pollcount_0\)
	OR (not \UART_1:BUART:pollcount_1\ and not \UART_1:BUART:pollcount_0\ and \UART_1:BUART:rx_parity_bit\)
	OR (not \UART_1:BUART:pollcount_1\ and not Net_25 and \UART_1:BUART:rx_parity_bit\)
	OR (not \UART_1:BUART:rx_parity_bit\ and \UART_1:BUART:pollcount_1\));


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\bin/warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya "-.fftprj=C:\Users\charl\Documents\Virginia_Tech\FSAE\VTMDAQ_EXPERIMENTAL\VTM16 PSOC Current Sensor\VTM16 Current Sensors.cydsn\VTM16 Current Sensors.cyprj" -dcpsoc3 "VTM16 Current Sensors.v" -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 0s.970ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V3.3.0.410, Family: PSoC3, Started at: Wednesday, 23 March 2016 13:38:21
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\charl\Documents\Virginia_Tech\FSAE\VTMDAQ_EXPERIMENTAL\VTM16 PSOC Current Sensor\VTM16 Current Sensors.cydsn\VTM16 Current Sensors.cyprj -d CY8C5888LTI-LP097 VTM16 Current Sensors.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.104ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lti_1\ kept \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gti_1\ kept \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lti_0\ kept \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gti_0\ kept \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_2\
    Removed wire end \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:lti_1\ kept \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:lt_5\
    Removed wire end \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:gti_1\ kept \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:gt_5\
    Removed wire end \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:lti_0\ kept \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:lt_2\
    Removed wire end \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:gti_0\ kept \ADC_SAR_Seq_2:MODULE_2:g1:a0:gx:u0:gt_2\
    Converted constant MacroCell: \UART_1:BUART:reset_reg\ from registered to combinatorial
    Converted constant MacroCell: \UART_1:BUART:rx_markspace_status\ from registered to combinatorial
    Converted constant MacroCell: \UART_1:BUART:rx_status_2\ from registered to combinatorial
    Converted constant MacroCell: \UART_1:BUART:rx_addr_match_status\ from registered to combinatorial
    Converted constant MacroCell: \UART_1:BUART:rx_break_status\ from registered to combinatorial
Assigning clock ADC_SAR_Seq_1_BusClock to clock BUS_CLK because it is a pass-through
Assigning clock ADC_SAR_Seq_2_BusClock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'ADC_SAR_Seq_1_IntClock'. Fanout=73, Signal=\ADC_SAR_Seq_1:clock\
    Digital Clock 1: Automatic-assigning  clock 'ADC_SAR_Seq_2_IntClock'. Fanout=73, Signal=\ADC_SAR_Seq_2:clock\
    Digital Clock 2: Automatic-assigning  clock 'UART_1_IntClock'. Fanout=1, Signal=\UART_1:Net_9\
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \UART_1:BUART:ClkSync\: with output requested to be synchronous
        ClockIn: UART_1_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: UART_1_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \ADC_SAR_Seq_1:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: ADC_SAR_Seq_1_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \ADC_SAR_Seq_1:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: ADC_SAR_Seq_1_IntClock, EnableOut: \ADC_SAR_Seq_1:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \ADC_SAR_Seq_1:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: ADC_SAR_Seq_1_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_SAR_Seq_1_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \ADC_SAR_Seq_2:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: ADC_SAR_Seq_2_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \ADC_SAR_Seq_2:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: ADC_SAR_Seq_2_IntClock, EnableOut: \ADC_SAR_Seq_2:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \ADC_SAR_Seq_2:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: ADC_SAR_Seq_2_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_SAR_Seq_2_IntClock, EnableOut: Constant 1
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing duplicate macrocells
    Removing \UART_1:BUART:rx_parity_bit\, Duplicate of \UART_1:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_1:BUART:rx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:rx_parity_bit\ (fanout=0)

    Removing \UART_1:BUART:rx_address_detected\, Duplicate of \UART_1:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_1:BUART:rx_address_detected\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:rx_address_detected\ (fanout=0)

    Removing \UART_1:BUART:rx_parity_error_pre\, Duplicate of \UART_1:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_1:BUART:rx_parity_error_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:rx_parity_error_pre\ (fanout=0)

    Removing \UART_1:BUART:rx_markspace_pre\, Duplicate of \UART_1:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_1:BUART:rx_markspace_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:rx_markspace_pre\ (fanout=0)

    Removing \UART_1:BUART:rx_state_1\, Duplicate of \UART_1:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_1:BUART:rx_state_1\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:rx_state_1\ (fanout=8)

    Removing \UART_1:BUART:tx_parity_bit\, Duplicate of \UART_1:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_1:BUART:tx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:tx_parity_bit\ (fanout=0)

    Removing \UART_1:BUART:tx_mark\, Duplicate of \UART_1:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_1:BUART:tx_mark\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:tx_mark\ (fanout=0)

End removing duplicate macrocells: used 1 pass
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = Overall_Production(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Overall_Production(0)__PA ,
            analog_term => Net_355 ,
            pad => Overall_Production(0)_PAD ,
            input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = Overall_Consumption(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Overall_Consumption(0)__PA ,
            analog_term => Net_7 ,
            pad => Overall_Consumption(0)_PAD ,
            input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = Rx_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Rx_1(0)__PA ,
            fb => Net_25 ,
            pad => Rx_1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Tx_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => Tx_1(0)__PA ,
            input => Net_20 ,
            pad => Tx_1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Fuel_Pump(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Fuel_Pump(0)__PA ,
            analog_term => Net_357 ,
            pad => Fuel_Pump(0)_PAD ,
            input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\ );
        Properties:
        {
        }

    Pin : Name = Fuel_Injector(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Fuel_Injector(0)__PA ,
            analog_term => Net_358 ,
            pad => Fuel_Injector(0)_PAD ,
            input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\ );
        Properties:
        {
        }

    Pin : Name = Ignition(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Ignition(0)__PA ,
            analog_term => Net_456 ,
            pad => Ignition(0)_PAD ,
            input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\ );
        Properties:
        {
        }

    Pin : Name = Vref(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Vref(0)__PA ,
            analog_term => Net_458 ,
            pad => Vref(0)_PAD ,
            input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\ );
        Properties:
        {
        }

    Pin : Name = I2C_pins(0)
        Attributes:
            Alias: scl
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: OPEN_DRAIN_LO
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: True
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: ENABLED
            SIO Vtrip: MULTIPLIER_0_4_OR_1
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, SIO, I2CWKUP_SCL, HOTSWAP
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => I2C_pins(0)__PA ,
            fb => \EZI2C_1:Net_175\ ,
            input => \EZI2C_1:Net_174\ ,
            pad => I2C_pins(0)_PAD );
        Properties:
        {
        }

    Pin : Name = I2C_pins(1)
        Attributes:
            Alias: sda
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: OPEN_DRAIN_LO
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: True
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: ENABLED
            SIO Vtrip: MULTIPLIER_0_4_OR_1
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, SIO, I2CWKUP_SDA, HOTSWAP
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => I2C_pins(1)__PA ,
            fb => \EZI2C_1:Net_181\ ,
            input => \EZI2C_1:Net_173\ ,
            pad => I2C_pins(1)_PAD );
        Properties:
        {
        }

    Pin : Name = LED(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LED(0)__PA ,
            input => __ONE__ ,
            pad => LED(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Back_Left(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Back_Left(0)__PA ,
            analog_term => Net_1032 ,
            pad => Back_Left(0)_PAD ,
            input => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = Back_Right(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Back_Right(0)__PA ,
            analog_term => Net_1033 ,
            pad => Back_Right(0)_PAD ,
            input => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = Front_Left(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Front_Left(0)__PA ,
            analog_term => Net_1035 ,
            pad => Front_Left(0)_PAD ,
            input => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_2\ );
        Properties:
        {
        }

    Pin : Name = Front_Right(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Front_Right(0)__PA ,
            analog_term => Net_1036 ,
            pad => Front_Right(0)_PAD ,
            input => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_3\ );
        Properties:
        {
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:ch_addr_5\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:ch_addr_4\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:ch_addr_3\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:ch_addr_2\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:ch_addr_1\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:ch_addr_1\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ * 
              \ADC_SAR_Seq_1:ch_addr_0\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ * 
              !\ADC_SAR_Seq_1:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=__ONE__, Mode=(Combinatorial)
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=1)

    MacroCell: Name=Net_20, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:txn\
        );
        Output = Net_20 (fanout=1)

    MacroCell: Name=\UART_1:BUART:counter_load_not\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\
            + !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_state_2\
        );
        Output = \UART_1:BUART:counter_load_not\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:tx_status_0\, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * 
              \UART_1:BUART:tx_fifo_empty\ * \UART_1:BUART:tx_state_2\
        );
        Output = \UART_1:BUART:tx_status_0\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:tx_status_2\, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:tx_fifo_notfull\
        );
        Output = \UART_1:BUART:tx_status_2\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_counter_load\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\
        );
        Output = \UART_1:BUART:rx_counter_load\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_postpoll\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \UART_1:BUART:pollcount_1\
            + Net_25 * \UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:rx_postpoll\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_status_4\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_1:BUART:rx_load_fifo\ * \UART_1:BUART:rx_fifofull\
        );
        Output = \UART_1:BUART:rx_status_4\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_status_5\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_1:BUART:rx_fifonotempty\ * 
              \UART_1:BUART:rx_state_stop1_reg\
        );
        Output = \UART_1:BUART:rx_status_5\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:ch_addr_5\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:ch_addr_4\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:ch_addr_3\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:ch_addr_2\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_548 * !\ADC_SAR_Seq_1:bSAR_SEQ:load_period\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:ch_addr_5\
            + !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:ch_addr_4\
            + !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:ch_addr_3\
            + !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:ch_addr_2\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\ADC_SAR_Seq_2:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_1030 * !\ADC_SAR_Seq_2:bSAR_SEQ:load_period\
        );
        Output = \ADC_SAR_Seq_2:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:txn\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART_1:BUART:txn\ * \UART_1:BUART:tx_state_1\ * 
              !\UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:txn\ * \UART_1:BUART:tx_state_2\
            + !\UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_shift_out\ * !\UART_1:BUART:tx_state_2\
            + !\UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_state_2\ * !\UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_shift_out\ * !\UART_1:BUART:tx_state_2\ * 
              !\UART_1:BUART:tx_counter_dp\ * \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:txn\ (fanout=2)

    MacroCell: Name=\UART_1:BUART:tx_state_1\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_counter_dp\ * \UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:tx_state_0\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:tx_state_1\ (fanout=8)

    MacroCell: Name=\UART_1:BUART:tx_state_0\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * 
              !\UART_1:BUART:tx_fifo_empty\
            + !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_fifo_empty\ * !\UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * 
              \UART_1:BUART:tx_fifo_empty\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_0\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:tx_state_0\ (fanout=8)

    MacroCell: Name=\UART_1:BUART:tx_state_2\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_state_2\ * \UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_counter_dp\ * \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:tx_state_2\ (fanout=7)

    MacroCell: Name=\UART_1:BUART:tx_bitclk\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_state_2\
            + !\UART_1:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART_1:BUART:tx_bitclk\ (fanout=4)

    MacroCell: Name=\UART_1:BUART:tx_ctrl_mark_last\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:tx_ctrl_mark_last\ (fanout=8)

    MacroCell: Name=\UART_1:BUART:rx_state_0\, Mode=(T-Register)
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * !\UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !Net_25
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * !\UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !\UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_0\ (fanout=8)

    MacroCell: Name=\UART_1:BUART:rx_load_fifo\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              !\UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_load_fifo\ (fanout=2)

    MacroCell: Name=\UART_1:BUART:rx_state_3\, Mode=(T-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_3\ (fanout=7)

    MacroCell: Name=\UART_1:BUART:rx_state_2\, Mode=(T-Register)
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !Net_25 * \UART_1:BUART:rx_last\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_2\ (fanout=7)

    MacroCell: Name=\UART_1:BUART:rx_bitclk_enable\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !\UART_1:BUART:rx_count_0\
        );
        Output = \UART_1:BUART:rx_bitclk_enable\ (fanout=6)

    MacroCell: Name=\UART_1:BUART:rx_state_stop1_reg\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_state_3\ * \UART_1:BUART:rx_state_2\
        );
        Output = \UART_1:BUART:rx_state_stop1_reg\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:pollcount_1\, Mode=(D-Register)
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !\UART_1:BUART:pollcount_1\ * Net_25 * 
              \UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              \UART_1:BUART:pollcount_1\ * !Net_25
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              \UART_1:BUART:pollcount_1\ * !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:pollcount_1\ (fanout=4)

    MacroCell: Name=\UART_1:BUART:pollcount_0\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !Net_25 * \UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              Net_25 * !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:pollcount_0\ (fanout=5)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:ch_addr_5\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:ch_addr_4\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:ch_addr_3\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:ch_addr_2\
            + !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:ch_addr_1\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:ch_addr_1\
            + !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ * 
              \ADC_SAR_Seq_2:ch_addr_0\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ * 
              !\ADC_SAR_Seq_2:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_status_3\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !Net_25
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:rx_status_3\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_last\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_25
        );
        Output = \UART_1:BUART:rx_last\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_5\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_4\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_3\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_2\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_1\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_549, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\
        );
        Output = Net_549 (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_549
            + \ADC_SAR_Seq_1:Net_3935\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_5\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_4\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_3\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_2\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_1\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_1031, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_2:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_SAR_Seq_2:bSAR_SEQ:nrq_reg\
        );
        Output = Net_1031 (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_1031
            + \ADC_SAR_Seq_2:Net_3935\
        );
        Output = \ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq_2:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_2:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_SAR_Seq_2:bSAR_SEQ:nrq_reg\ (fanout=1)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">

    ------------------------------------------------------------
    Datapath listing
    ------------------------------------------------------------

    datapathcell: Name =\UART_1:BUART:sTX:TxShifter:u0\
        PORT MAP (
            clock => \UART_1:Net_9\ ,
            cs_addr_2 => \UART_1:BUART:tx_state_1\ ,
            cs_addr_1 => \UART_1:BUART:tx_state_0\ ,
            cs_addr_0 => \UART_1:BUART:tx_bitclk_enable_pre\ ,
            so_comb => \UART_1:BUART:tx_shift_out\ ,
            f0_bus_stat_comb => \UART_1:BUART:tx_fifo_notfull\ ,
            f0_blk_stat_comb => \UART_1:BUART:tx_fifo_empty\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART_1:BUART:sTX:sCLOCK:TxBitClkGen\
        PORT MAP (
            clock => \UART_1:Net_9\ ,
            cs_addr_0 => \UART_1:BUART:counter_load_not\ ,
            ce0_reg => \UART_1:BUART:tx_bitclk_enable_pre\ ,
            ce1_reg => \UART_1:BUART:tx_counter_dp\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART_1:BUART:sRX:RxShifter:u0\
        PORT MAP (
            clock => \UART_1:Net_9\ ,
            cs_addr_2 => \UART_1:BUART:tx_ctrl_mark_last\ ,
            cs_addr_1 => \UART_1:BUART:rx_state_0\ ,
            cs_addr_0 => \UART_1:BUART:rx_bitclk_enable\ ,
            route_si => \UART_1:BUART:rx_postpoll\ ,
            f0_load => \UART_1:BUART:rx_load_fifo\ ,
            f0_bus_stat_comb => \UART_1:BUART:rx_fifonotempty\ ,
            f0_blk_stat_comb => \UART_1:BUART:rx_fifofull\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \ADC_SAR_Seq_1:clock\ ,
            status_0 => Net_549 ,
            clk_en => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)

    statuscell: Name =\ADC_SAR_Seq_2:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \ADC_SAR_Seq_2:clock\ ,
            status_0 => Net_1031 ,
            clk_en => \ADC_SAR_Seq_2:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR_Seq_2:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">

    ------------------------------------------------------------
    StatusI register listing
    ------------------------------------------------------------

    statusicell: Name =\UART_1:BUART:sTX:TxSts\
        PORT MAP (
            clock => \UART_1:Net_9\ ,
            status_3 => \UART_1:BUART:tx_fifo_notfull\ ,
            status_2 => \UART_1:BUART:tx_status_2\ ,
            status_1 => \UART_1:BUART:tx_fifo_empty\ ,
            status_0 => \UART_1:BUART:tx_status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0000001"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\UART_1:BUART:sRX:RxSts\
        PORT MAP (
            clock => \UART_1:Net_9\ ,
            status_5 => \UART_1:BUART:rx_status_5\ ,
            status_4 => \UART_1:BUART:rx_status_4\ ,
            status_3 => \UART_1:BUART:rx_status_3\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "1011111"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\ADC_SAR_Seq_1:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \ADC_SAR_Seq_1:nrq\ ,
            out => \ADC_SAR_Seq_1:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True

    synccell: Name =\ADC_SAR_Seq_2:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \ADC_SAR_Seq_2:nrq\ ,
            out => \ADC_SAR_Seq_2:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \ADC_SAR_Seq_1:clock\ ,
            control_7 => \ADC_SAR_Seq_1:bSAR_SEQ:control_7\ ,
            control_6 => \ADC_SAR_Seq_1:bSAR_SEQ:control_6\ ,
            control_5 => \ADC_SAR_Seq_1:bSAR_SEQ:control_5\ ,
            control_4 => \ADC_SAR_Seq_1:bSAR_SEQ:control_4\ ,
            control_3 => \ADC_SAR_Seq_1:bSAR_SEQ:control_3\ ,
            control_2 => \ADC_SAR_Seq_1:bSAR_SEQ:control_2\ ,
            control_1 => \ADC_SAR_Seq_1:bSAR_SEQ:load_period\ ,
            control_0 => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\ADC_SAR_Seq_2:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \ADC_SAR_Seq_2:clock\ ,
            control_7 => \ADC_SAR_Seq_2:bSAR_SEQ:control_7\ ,
            control_6 => \ADC_SAR_Seq_2:bSAR_SEQ:control_6\ ,
            control_5 => \ADC_SAR_Seq_2:bSAR_SEQ:control_5\ ,
            control_4 => \ADC_SAR_Seq_2:bSAR_SEQ:control_4\ ,
            control_3 => \ADC_SAR_Seq_2:bSAR_SEQ:control_3\ ,
            control_2 => \ADC_SAR_Seq_2:bSAR_SEQ:control_2\ ,
            control_1 => \ADC_SAR_Seq_2:bSAR_SEQ:load_period\ ,
            control_0 => \ADC_SAR_Seq_2:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\UART_1:BUART:sRX:RxBitCounter\
        PORT MAP (
            clock => \UART_1:Net_9\ ,
            load => \UART_1:BUART:rx_counter_load\ ,
            count_6 => \UART_1:BUART:rx_count_6\ ,
            count_5 => \UART_1:BUART:rx_count_5\ ,
            count_4 => \UART_1:BUART:rx_count_4\ ,
            count_3 => \UART_1:BUART:rx_count_3\ ,
            count_2 => \UART_1:BUART:rx_count_2\ ,
            count_1 => \UART_1:BUART:rx_count_1\ ,
            count_0 => \UART_1:BUART:rx_count_0\ ,
            tc => \UART_1:BUART:rx_count7_tc\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "1110010"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    count7cell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \ADC_SAR_Seq_1:clock\ ,
            load => \ADC_SAR_Seq_1:bSAR_SEQ:load_period\ ,
            enable => \ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\ ,
            count_6 => \ADC_SAR_Seq_1:bSAR_SEQ:count_6\ ,
            count_5 => \ADC_SAR_Seq_1:ch_addr_5\ ,
            count_4 => \ADC_SAR_Seq_1:ch_addr_4\ ,
            count_3 => \ADC_SAR_Seq_1:ch_addr_3\ ,
            count_2 => \ADC_SAR_Seq_1:ch_addr_2\ ,
            count_1 => \ADC_SAR_Seq_1:ch_addr_1\ ,
            count_0 => \ADC_SAR_Seq_1:ch_addr_0\ ,
            tc => \ADC_SAR_Seq_1:bSAR_SEQ:cnt_tc\ ,
            clk_en => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000101"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)

    count7cell: Name =\ADC_SAR_Seq_2:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \ADC_SAR_Seq_2:clock\ ,
            load => \ADC_SAR_Seq_2:bSAR_SEQ:load_period\ ,
            enable => \ADC_SAR_Seq_2:bSAR_SEQ:cnt_enable\ ,
            count_6 => \ADC_SAR_Seq_2:bSAR_SEQ:count_6\ ,
            count_5 => \ADC_SAR_Seq_2:ch_addr_5\ ,
            count_4 => \ADC_SAR_Seq_2:ch_addr_4\ ,
            count_3 => \ADC_SAR_Seq_2:ch_addr_3\ ,
            count_2 => \ADC_SAR_Seq_2:ch_addr_2\ ,
            count_1 => \ADC_SAR_Seq_2:ch_addr_1\ ,
            count_0 => \ADC_SAR_Seq_2:ch_addr_0\ ,
            tc => \ADC_SAR_Seq_2:bSAR_SEQ:cnt_tc\ ,
            clk_en => \ADC_SAR_Seq_2:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000011"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR_Seq_2:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\ADC_SAR_Seq_1:TempBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_1:Net_3830\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_1:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\ADC_SAR_Seq_1:FinalBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_1:Net_3698\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_1:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\ADC_SAR_Seq_2:TempBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_2:Net_3830\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_2:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\ADC_SAR_Seq_2:FinalBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_2:Net_3698\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_2:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =\ADC_SAR_Seq_1:IRQ\
        PORT MAP (
            interrupt => Net_549 );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =\EZI2C_1:isr\
        PORT MAP (
            interrupt => \EZI2C_1:Net_172\ );
        Properties:
        {
            int_type = "00"
        }

    interrupt: Name =\ADC_SAR_Seq_2:IRQ\
        PORT MAP (
            interrupt => Net_1031 );
        Properties:
        {
            int_type = "10"
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    3 :    5 :    8 : 37.50 %
Analog Clocks                 :    0 :    4 :    4 :  0.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    0 :    1 :    1 :  0.00 %
Interrupts                    :    3 :   29 :   32 :  9.38 %
IO                            :   18 :   30 :   48 : 37.50 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
CAN 2.0b                      :    0 :    1 :    1 :  0.00 %
I2C                           :    1 :    0 :    1 : 100.00 %
USB                           :    0 :    1 :    1 :  0.00 %
DMA Channels                  :    4 :   20 :   24 : 16.67 %
Timer                         :    0 :    4 :    4 :  0.00 %
UDB                           :      :      :      :        
  Macrocells                  :  177 :   15 :  192 : 92.19 %
  Unique P-terms              :  220 :  164 :  384 : 57.29 %
  Total P-terms               :  229 :      :      :        
  Datapath Cells              :    3 :   21 :   24 : 12.50 %
  Status Cells                :    8 :   16 :   24 : 33.33 %
    Status Registers          :    2 :      :      :        
    StatusI Registers         :    2 :      :      :        
    Sync Cells (x2)           :    1 :      :      :        
    Routed Count7 Load/Enable :    3 :      :      :        
  Control Cells               :    5 :   19 :   24 : 20.83 %
    Control Registers         :    2 :      :      :        
    Count7 Cells              :    3 :      :      :        
Opamp                         :    0 :    4 :    4 :  0.00 %
Comparator                    :    0 :    4 :    4 :  0.00 %
Delta-Sigma ADC               :    0 :    1 :    1 :  0.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    2 :    0 :    2 : 100.00 %
Analog (SC/CT) Blocks         :    0 :    4 :    4 :  0.00 %
DAC                           :      :      :      :        
  VIDAC                       :    0 :    4 :    4 :  0.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.485ms
Tech mapping phase: Elapsed time ==> 0s.663ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_553" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_555" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_557" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_558" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_560" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_562" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_563" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_565" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_567" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_568" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_570" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_572" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_573" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_575" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_577" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_578" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_580" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_582" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_583" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_585" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_587" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_588" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_590" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_592" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_593" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_595" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_597" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_598" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_600" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_602" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_603" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_605" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_607" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_608" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_610" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_612" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_613" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_615" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_617" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_618" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_620" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_622" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_623" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_624" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_625" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_626" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_627" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_628" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_629" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_630" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_631" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_632" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_633" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_634" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_635" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_636" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_637" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_638" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1038" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1040" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1041" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1043" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1045" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1046" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1048" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1050" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1051" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1053" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1055" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1056" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1058" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1060" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1061" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1063" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1065" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1066" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1068" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1070" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1071" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1073" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1075" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1076" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1078" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1080" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1081" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1083" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1085" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1086" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1088" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1090" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1091" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1093" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1095" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1096" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1098" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1100" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1101" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1103" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1105" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1106" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1108" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1110" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1111" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1112" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1113" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1114" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1115" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1116" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1117" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1118" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1119" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1120" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1121" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1122" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1123" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1124" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1125" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1126" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_0@[IOP=(3)][IoId=(0)] : Back_Left(0) (fixed)
IO_1@[IOP=(3)][IoId=(1)] : Back_Right(0) (fixed)
IO_2@[IOP=(3)][IoId=(2)] : Front_Left(0) (fixed)
IO_3@[IOP=(3)][IoId=(3)] : Front_Right(0) (fixed)
IO_3@[IOP=(0)][IoId=(3)] : Fuel_Injector(0) (fixed)
IO_2@[IOP=(0)][IoId=(2)] : Fuel_Pump(0) (fixed)
[IOP=(12)][IoId=(4)] : I2C_pins(0) (fixed)
IO_5@[IOP=(12)][IoId=(5)] : I2C_pins(1) (fixed)
IO_4@[IOP=(12)][IoId=(4)] : I2C_pins_SIOREF_0 (fixed)
IO_4@[IOP=(0)][IoId=(4)] : Ignition(0) (fixed)
IO_1@[IOP=(2)][IoId=(1)] : LED(0) (fixed)
IO_0@[IOP=(0)][IoId=(0)] : Overall_Consumption(0) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : Overall_Production(0) (fixed)
IO_6@[IOP=(12)][IoId=(6)] : Rx_1(0) (fixed)
IO_7@[IOP=(12)][IoId=(7)] : Tx_1(0) (fixed)
IO_5@[IOP=(0)][IoId=(5)] : Vref(0) (fixed)
SAR[1]@[FFB(SAR,1)] : \ADC_SAR_Seq_1:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_SAR_Seq_1:SAR:vRef_Vdda_1\
SAR[0]@[FFB(SAR,0)] : \ADC_SAR_Seq_2:SAR:ADC_SAR\
Log: apr.M0058: The analog placement iterative improvement is 54% done. (App=cydsfit)
Analog Placement Results:
IO_0@[IOP=(3)][IoId=(0)] : Back_Left(0) (fixed)
IO_1@[IOP=(3)][IoId=(1)] : Back_Right(0) (fixed)
IO_2@[IOP=(3)][IoId=(2)] : Front_Left(0) (fixed)
IO_3@[IOP=(3)][IoId=(3)] : Front_Right(0) (fixed)
IO_3@[IOP=(0)][IoId=(3)] : Fuel_Injector(0) (fixed)
IO_2@[IOP=(0)][IoId=(2)] : Fuel_Pump(0) (fixed)
[IOP=(12)][IoId=(4)] : I2C_pins(0) (fixed)
IO_5@[IOP=(12)][IoId=(5)] : I2C_pins(1) (fixed)
IO_4@[IOP=(12)][IoId=(4)] : I2C_pins_SIOREF_0 (fixed)
IO_4@[IOP=(0)][IoId=(4)] : Ignition(0) (fixed)
IO_1@[IOP=(2)][IoId=(1)] : LED(0) (fixed)
IO_0@[IOP=(0)][IoId=(0)] : Overall_Consumption(0) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : Overall_Production(0) (fixed)
IO_6@[IOP=(12)][IoId=(6)] : Rx_1(0) (fixed)
IO_7@[IOP=(12)][IoId=(7)] : Tx_1(0) (fixed)
IO_5@[IOP=(0)][IoId=(5)] : Vref(0) (fixed)
SAR[0]@[FFB(SAR,0)] : \ADC_SAR_Seq_1:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_SAR_Seq_1:SAR:vRef_Vdda_1\
SAR[1]@[FFB(SAR,1)] : \ADC_SAR_Seq_2:SAR:ADC_SAR\

Analog Placement phase: Elapsed time ==> 7s.456ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Analog Routing phase: Elapsed time ==> 0s.031ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: \ADC_SAR_Seq_1:Net_2803\ {
    sar_0_vplus
  }
  Net: Net_7 {
    p0_0
  }
  Net: Net_355 {
    p0_1
  }
  Net: Net_357 {
    p0_2
  }
  Net: Net_358 {
    p0_3
  }
  Net: Net_456 {
    p0_4
  }
  Net: Net_458 {
    p0_5
  }
  Net: Net_553 {
  }
  Net: Net_555 {
  }
  Net: Net_557 {
  }
  Net: Net_558 {
  }
  Net: Net_560 {
  }
  Net: Net_562 {
  }
  Net: Net_563 {
  }
  Net: Net_565 {
  }
  Net: Net_567 {
  }
  Net: Net_568 {
  }
  Net: Net_570 {
  }
  Net: Net_572 {
  }
  Net: Net_573 {
  }
  Net: Net_575 {
  }
  Net: Net_577 {
  }
  Net: Net_578 {
  }
  Net: Net_580 {
  }
  Net: Net_582 {
  }
  Net: Net_583 {
  }
  Net: Net_585 {
  }
  Net: Net_587 {
  }
  Net: Net_588 {
  }
  Net: Net_590 {
  }
  Net: Net_592 {
  }
  Net: Net_593 {
  }
  Net: Net_595 {
  }
  Net: Net_597 {
  }
  Net: Net_598 {
  }
  Net: Net_600 {
  }
  Net: Net_602 {
  }
  Net: Net_603 {
  }
  Net: Net_605 {
  }
  Net: Net_607 {
  }
  Net: Net_608 {
  }
  Net: Net_610 {
  }
  Net: Net_612 {
  }
  Net: Net_613 {
  }
  Net: Net_615 {
  }
  Net: Net_617 {
  }
  Net: Net_618 {
  }
  Net: Net_620 {
  }
  Net: Net_622 {
  }
  Net: Net_623 {
  }
  Net: Net_624 {
  }
  Net: Net_625 {
  }
  Net: Net_626 {
  }
  Net: Net_627 {
  }
  Net: Net_628 {
  }
  Net: Net_629 {
  }
  Net: Net_630 {
  }
  Net: Net_631 {
  }
  Net: Net_632 {
  }
  Net: Net_633 {
  }
  Net: Net_634 {
  }
  Net: Net_635 {
  }
  Net: Net_636 {
  }
  Net: Net_637 {
  }
  Net: Net_638 {
  }
  Net: \ADC_SAR_Seq_2:Net_2803\ {
    sar_1_vplus
  }
  Net: Net_1032 {
    p3_0
  }
  Net: Net_1033 {
    p3_1
  }
  Net: Net_1035 {
    p3_2
  }
  Net: Net_1036 {
    p3_3
  }
  Net: Net_1038 {
  }
  Net: Net_1040 {
  }
  Net: Net_1041 {
  }
  Net: Net_1043 {
  }
  Net: Net_1045 {
  }
  Net: Net_1046 {
  }
  Net: Net_1048 {
  }
  Net: Net_1050 {
  }
  Net: Net_1051 {
  }
  Net: Net_1053 {
  }
  Net: Net_1055 {
  }
  Net: Net_1056 {
  }
  Net: Net_1058 {
  }
  Net: Net_1060 {
  }
  Net: Net_1061 {
  }
  Net: Net_1063 {
  }
  Net: Net_1065 {
  }
  Net: Net_1066 {
  }
  Net: Net_1068 {
  }
  Net: Net_1070 {
  }
  Net: Net_1071 {
  }
  Net: Net_1073 {
  }
  Net: Net_1075 {
  }
  Net: Net_1076 {
  }
  Net: Net_1078 {
  }
  Net: Net_1080 {
  }
  Net: Net_1081 {
  }
  Net: Net_1083 {
  }
  Net: Net_1085 {
  }
  Net: Net_1086 {
  }
  Net: Net_1088 {
  }
  Net: Net_1090 {
  }
  Net: Net_1091 {
  }
  Net: Net_1093 {
  }
  Net: Net_1095 {
  }
  Net: Net_1096 {
  }
  Net: Net_1098 {
  }
  Net: Net_1100 {
  }
  Net: Net_1101 {
  }
  Net: Net_1103 {
  }
  Net: Net_1105 {
  }
  Net: Net_1106 {
  }
  Net: Net_1108 {
  }
  Net: Net_1110 {
  }
  Net: Net_1111 {
  }
  Net: Net_1112 {
  }
  Net: Net_1113 {
  }
  Net: Net_1114 {
  }
  Net: Net_1115 {
  }
  Net: Net_1116 {
  }
  Net: Net_1117 {
  }
  Net: Net_1118 {
  }
  Net: Net_1119 {
  }
  Net: Net_1120 {
  }
  Net: Net_1121 {
  }
  Net: Net_1122 {
  }
  Net: Net_1123 {
  }
  Net: Net_1124 {
  }
  Net: Net_1125 {
  }
  Net: Net_1126 {
  }
  Net: \ADC_SAR_Seq_1:SAR:Net_126\ {
    sar_0_vrefhi
    sar_0_vminus_x_sar_0_vrefhi
    sar_0_vminus
  }
  Net: \ADC_SAR_Seq_1:SAR:Net_209\ {
  }
  Net: \ADC_SAR_Seq_1:SAR:Net_235\ {
    sar_1_vref
    sar_1_vref_x_sar_1_vref_vdda_vdda_2
    sar_1_vref_vdda_vdda_2
    common_sar_vref_vdda/2_x_sar_1_vref_vdda_vdda_2
    common_sar_vref_vdda/2
    common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2
    sar_0_vref_vdda_vdda_2
    sar_0_vref_x_sar_0_vref_vdda_vdda_2
    sar_0_vref
  }
  Net: \ADC_SAR_Seq_2:SAR:Net_126\ {
    sar_1_vrefhi
    sar_1_vminus_x_sar_1_vrefhi
    sar_1_vminus
  }
  Net: \ADC_SAR_Seq_2:SAR:Net_209\ {
  }
  Net: AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\ {
    sar_0_vplus
    agl5_x_sar_0_vplus
    agl5
    agl5_x_p0_5
    agl6_x_sar_0_vplus
    agl6
    agl6_x_p0_2
    agl4_x_sar_0_vplus
    agl4
    agl4_x_p0_4
    agl7_x_sar_0_vplus
    agl7
    agl7_x_p0_3
    agl5_x_p0_1
    agl4_x_p0_0
    p0_5
    p0_2
    p0_4
    p0_3
    p0_1
    p0_0
  }
  Net: AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\ {
    sar_1_vplus
    agr5_x_sar_1_vplus
    agr5
    agr5_x_p3_1
    agr7_x_sar_1_vplus
    agr7
    agr7_x_p3_3
    agr4_x_sar_1_vplus
    agr4
    agr4_x_p3_0
    agr6_x_sar_1_vplus
    agr6
    agr6_x_p3_2
    p3_1
    p3_3
    p3_0
    p3_2
  }
}
Map of item to net {
  sar_0_vrefhi                                     -> \ADC_SAR_Seq_1:SAR:Net_126\
  sar_0_vminus_x_sar_0_vrefhi                      -> \ADC_SAR_Seq_1:SAR:Net_126\
  sar_0_vminus                                     -> \ADC_SAR_Seq_1:SAR:Net_126\
  sar_1_vref                                       -> \ADC_SAR_Seq_1:SAR:Net_235\
  sar_1_vref_x_sar_1_vref_vdda_vdda_2              -> \ADC_SAR_Seq_1:SAR:Net_235\
  sar_1_vref_vdda_vdda_2                           -> \ADC_SAR_Seq_1:SAR:Net_235\
  common_sar_vref_vdda/2_x_sar_1_vref_vdda_vdda_2  -> \ADC_SAR_Seq_1:SAR:Net_235\
  common_sar_vref_vdda/2                           -> \ADC_SAR_Seq_1:SAR:Net_235\
  common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2  -> \ADC_SAR_Seq_1:SAR:Net_235\
  sar_0_vref_vdda_vdda_2                           -> \ADC_SAR_Seq_1:SAR:Net_235\
  sar_0_vref_x_sar_0_vref_vdda_vdda_2              -> \ADC_SAR_Seq_1:SAR:Net_235\
  sar_0_vref                                       -> \ADC_SAR_Seq_1:SAR:Net_235\
  sar_1_vrefhi                                     -> \ADC_SAR_Seq_2:SAR:Net_126\
  sar_1_vminus_x_sar_1_vrefhi                      -> \ADC_SAR_Seq_2:SAR:Net_126\
  sar_1_vminus                                     -> \ADC_SAR_Seq_2:SAR:Net_126\
  sar_0_vplus                                      -> \ADC_SAR_Seq_1:Net_2803\
  p0_0                                             -> Net_7
  p0_1                                             -> Net_355
  p0_2                                             -> Net_357
  p0_3                                             -> Net_358
  p0_4                                             -> Net_456
  p0_5                                             -> Net_458
  sar_1_vplus                                      -> \ADC_SAR_Seq_2:Net_2803\
  p3_0                                             -> Net_1032
  p3_1                                             -> Net_1033
  p3_2                                             -> Net_1035
  p3_3                                             -> Net_1036
  agl5_x_sar_0_vplus                               -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl5                                             -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl5_x_p0_5                                      -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl6_x_sar_0_vplus                               -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl6                                             -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl6_x_p0_2                                      -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl4_x_sar_0_vplus                               -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl4                                             -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl4_x_p0_4                                      -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl7_x_sar_0_vplus                               -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl7                                             -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl7_x_p0_3                                      -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl5_x_p0_1                                      -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl4_x_p0_0                                      -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agr5_x_sar_1_vplus                               -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
  agr5                                             -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
  agr5_x_p3_1                                      -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
  agr7_x_sar_1_vplus                               -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
  agr7                                             -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
  agr7_x_p3_3                                      -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
  agr4_x_sar_1_vplus                               -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
  agr4                                             -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
  agr4_x_p3_0                                      -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
  agr6_x_sar_1_vplus                               -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
  agr6                                             -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
  agr6_x_p3_2                                      -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
}
Mux Info {
  Mux: \ADC_SAR_Seq_1:AMuxHw_2\ {
     Mouth: \ADC_SAR_Seq_1:Net_2803\
     Guts:  AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_7
      Outer: agl4_x_p0_0
      Inner: __open__
      Path {
        p0_0
        agl4_x_p0_0
        agl4
        agl4_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 1 {
      Net:   Net_355
      Outer: agl5_x_p0_1
      Inner: __open__
      Path {
        p0_1
        agl5_x_p0_1
        agl5
        agl5_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 2 {
      Net:   Net_357
      Outer: agl6_x_p0_2
      Inner: agl6_x_sar_0_vplus
      Path {
        p0_2
        agl6_x_p0_2
        agl6
        agl6_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 3 {
      Net:   Net_358
      Outer: agl7_x_p0_3
      Inner: agl7_x_sar_0_vplus
      Path {
        p0_3
        agl7_x_p0_3
        agl7
        agl7_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 4 {
      Net:   Net_456
      Outer: agl4_x_p0_4
      Inner: __open__
      Path {
        p0_4
        agl4_x_p0_4
        agl4
        agl4_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 5 {
      Net:   Net_458
      Outer: agl5_x_p0_5
      Inner: __open__
      Path {
        p0_5
        agl5_x_p0_5
        agl5
        agl5_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 6 {
      Net:   Net_553
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_555
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_557
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_558
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_560
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_562
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_563
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_565
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_567
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_568
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_570
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_572
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_573
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_575
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_577
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_578
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_580
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_582
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_583
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_585
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_587
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_588
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_590
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_592
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_593
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_595
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_597
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_598
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_600
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_602
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_603
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_605
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_607
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_608
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_610
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_612
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_613
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_615
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_617
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_618
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_620
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_622
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_623
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_624
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_625
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_626
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_627
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_628
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_629
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_630
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_631
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_632
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_633
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_634
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_635
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_636
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_637
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_638
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
  Mux: \ADC_SAR_Seq_2:AMuxHw_2\ {
     Mouth: \ADC_SAR_Seq_2:Net_2803\
     Guts:  AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_1032
      Outer: agr4_x_p3_0
      Inner: agr4_x_sar_1_vplus
      Path {
        p3_0
        agr4_x_p3_0
        agr4
        agr4_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 1 {
      Net:   Net_1033
      Outer: agr5_x_p3_1
      Inner: agr5_x_sar_1_vplus
      Path {
        p3_1
        agr5_x_p3_1
        agr5
        agr5_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 2 {
      Net:   Net_1035
      Outer: agr6_x_p3_2
      Inner: agr6_x_sar_1_vplus
      Path {
        p3_2
        agr6_x_p3_2
        agr6
        agr6_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 3 {
      Net:   Net_1036
      Outer: agr7_x_p3_3
      Inner: agr7_x_sar_1_vplus
      Path {
        p3_3
        agr7_x_p3_3
        agr7
        agr7_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 4 {
      Net:   Net_1038
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_1040
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_1041
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_1043
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_1045
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_1046
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_1048
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_1050
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_1051
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_1053
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_1055
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_1056
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_1058
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_1060
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_1061
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_1063
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_1065
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_1066
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_1068
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_1070
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_1071
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_1073
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_1075
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_1076
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_1078
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_1080
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_1081
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_1083
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_1085
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_1086
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_1088
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_1090
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_1091
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_1093
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_1095
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_1096
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_1098
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_1100
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_1101
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_1103
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_1105
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_1106
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_1108
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_1110
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_1111
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_1112
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_1113
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_1114
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_1115
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_1116
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_1117
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_1118
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_1119
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_1120
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_1121
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_1122
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_1123
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_1124
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_1125
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_1126
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = True
IsVddaHalfUsedForSar1 = True
Analog Code Generation phase: Elapsed time ==> 0s.385ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 5.7 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   48 :    0 :   48 : 100.00%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            7.90
                   Pterms :            4.69
               Macrocells :            3.69
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.037ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.332ms
</CYPRESSTAG>
<CYPRESSTAG name="Simulated Annealing">
Annealing: Elapsed time ==> 0s.015ms
<CYPRESSTAG name="Simulated Annealing Results">
The seed used for moves was 114161200.
Inital cost was 833, final cost is 833 (0.00% improvement).</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         24 :      10.71 :       7.38
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] contents:
LAB@[UDB=(0,0)][LB=0] #macrocells=4, #inputs=11, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:rx_state_0\, Mode=(T-Register) @ [UDB=(0,0)][LB=0][MC=0]
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * !\UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !Net_25
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * !\UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !\UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_1:BUART:rx_load_fifo\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=1]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              !\UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_load_fifo\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_1:BUART:rx_state_3\, Mode=(T-Register) @ [UDB=(0,0)][LB=0][MC=2]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_3\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:rx_status_3\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=3]
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !Net_25
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:rx_status_3\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,0)][LB=1] #macrocells=3, #inputs=10, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:rx_state_2\, Mode=(T-Register) @ [UDB=(0,0)][LB=1][MC=0]
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !Net_25 * \UART_1:BUART:rx_last\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_1:BUART:rx_counter_load\, Mode=(Combinatorial) @ [UDB=(0,0)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\
        );
        Output = \UART_1:BUART:rx_counter_load\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:rx_last\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_25
        );
        Output = \UART_1:BUART:rx_last\ (fanout=1)
        Properties               : 
        {
        }
}

count7cell: Name =\UART_1:BUART:sRX:RxBitCounter\
    PORT MAP (
        clock => \UART_1:Net_9\ ,
        load => \UART_1:BUART:rx_counter_load\ ,
        count_6 => \UART_1:BUART:rx_count_6\ ,
        count_5 => \UART_1:BUART:rx_count_5\ ,
        count_4 => \UART_1:BUART:rx_count_4\ ,
        count_3 => \UART_1:BUART:rx_count_3\ ,
        count_2 => \UART_1:BUART:rx_count_2\ ,
        count_1 => \UART_1:BUART:rx_count_1\ ,
        count_0 => \UART_1:BUART:rx_count_0\ ,
        tc => \UART_1:BUART:rx_count7_tc\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "1110010"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,1)] contents:
LAB@[UDB=(0,1)][LB=0] #macrocells=3, #inputs=9, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:tx_state_2\, Mode=(T-Register) @ [UDB=(0,1)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_state_2\ * \UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_counter_dp\ * \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:tx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\UART_1:BUART:tx_bitclk\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_state_2\
            + !\UART_1:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART_1:BUART:tx_bitclk\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:rx_bitclk_enable\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !\UART_1:BUART:rx_count_0\
        );
        Output = \UART_1:BUART:rx_bitclk_enable\ (fanout=6)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,1)][LB=1] #macrocells=4, #inputs=7, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:pollcount_1\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=0]
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !\UART_1:BUART:pollcount_1\ * Net_25 * 
              \UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              \UART_1:BUART:pollcount_1\ * !Net_25
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              \UART_1:BUART:pollcount_1\ * !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:pollcount_1\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_1:BUART:pollcount_0\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !Net_25 * \UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              Net_25 * !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:pollcount_0\ (fanout=5)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_1:BUART:rx_postpoll\, Mode=(Combinatorial) @ [UDB=(0,1)][LB=1][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \UART_1:BUART:pollcount_1\
            + Net_25 * \UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:rx_postpoll\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:rx_status_4\, Mode=(Combinatorial) @ [UDB=(0,1)][LB=1][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_1:BUART:rx_load_fifo\ * \UART_1:BUART:rx_fifofull\
        );
        Output = \UART_1:BUART:rx_status_4\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART_1:BUART:sRX:RxShifter:u0\
    PORT MAP (
        clock => \UART_1:Net_9\ ,
        cs_addr_2 => \UART_1:BUART:tx_ctrl_mark_last\ ,
        cs_addr_1 => \UART_1:BUART:rx_state_0\ ,
        cs_addr_0 => \UART_1:BUART:rx_bitclk_enable\ ,
        route_si => \UART_1:BUART:rx_postpoll\ ,
        f0_load => \UART_1:BUART:rx_load_fifo\ ,
        f0_bus_stat_comb => \UART_1:BUART:rx_fifonotempty\ ,
        f0_blk_stat_comb => \UART_1:BUART:rx_fifofull\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,2)] contents:
LAB@[UDB=(0,2)][LB=0] #macrocells=4, #inputs=12, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:tx_state_0\, Mode=(T-Register) @ [UDB=(0,2)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * 
              !\UART_1:BUART:tx_fifo_empty\
            + !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_fifo_empty\ * !\UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * 
              \UART_1:BUART:tx_fifo_empty\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_0\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:tx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_1:BUART:tx_status_0\, Mode=(Combinatorial) @ [UDB=(0,2)][LB=0][MC=1]
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * 
              \UART_1:BUART:tx_fifo_empty\ * \UART_1:BUART:tx_state_2\
        );
        Output = \UART_1:BUART:tx_status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_1:BUART:rx_status_5\, Mode=(Combinatorial) @ [UDB=(0,2)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_1:BUART:rx_fifonotempty\ * 
              \UART_1:BUART:rx_state_stop1_reg\
        );
        Output = \UART_1:BUART:rx_status_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:rx_state_stop1_reg\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=3]
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_state_3\ * \UART_1:BUART:rx_state_2\
        );
        Output = \UART_1:BUART:rx_state_stop1_reg\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }
}

statusicell: Name =\UART_1:BUART:sRX:RxSts\
    PORT MAP (
        clock => \UART_1:Net_9\ ,
        status_5 => \UART_1:BUART:rx_status_5\ ,
        status_4 => \UART_1:BUART:rx_status_4\ ,
        status_3 => \UART_1:BUART:rx_status_3\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "1011111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,3)] contents:
LAB@[UDB=(0,3)][LB=0] #macrocells=2, #inputs=8, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:txn\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART_1:BUART:txn\ * \UART_1:BUART:tx_state_1\ * 
              !\UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:txn\ * \UART_1:BUART:tx_state_2\
            + !\UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_shift_out\ * !\UART_1:BUART:tx_state_2\
            + !\UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_state_2\ * !\UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_shift_out\ * !\UART_1:BUART:tx_state_2\ * 
              !\UART_1:BUART:tx_counter_dp\ * \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:txn\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_1:BUART:tx_state_1\, Mode=(T-Register) @ [UDB=(0,3)][LB=0][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_counter_dp\ * \UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:tx_state_0\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:tx_state_1\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,3)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART_1:BUART:sTX:TxShifter:u0\
    PORT MAP (
        clock => \UART_1:Net_9\ ,
        cs_addr_2 => \UART_1:BUART:tx_state_1\ ,
        cs_addr_1 => \UART_1:BUART:tx_state_0\ ,
        cs_addr_0 => \UART_1:BUART:tx_bitclk_enable_pre\ ,
        so_comb => \UART_1:BUART:tx_shift_out\ ,
        f0_bus_stat_comb => \UART_1:BUART:tx_fifo_notfull\ ,
        f0_blk_stat_comb => \UART_1:BUART:tx_fifo_empty\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

statusicell: Name =\UART_1:BUART:sTX:TxSts\
    PORT MAP (
        clock => \UART_1:Net_9\ ,
        status_3 => \UART_1:BUART:tx_fifo_notfull\ ,
        status_2 => \UART_1:BUART:tx_status_2\ ,
        status_1 => \UART_1:BUART:tx_fifo_empty\ ,
        status_0 => \UART_1:BUART:tx_status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0000001"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,4)] contents:
LAB@[UDB=(0,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,4)][LB=1] #macrocells=4, #inputs=11, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:counter_load_not\, Mode=(Combinatorial) @ [UDB=(0,4)][LB=1][MC=3]
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\
            + !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_state_2\
        );
        Output = \UART_1:BUART:counter_load_not\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART_1:BUART:sTX:sCLOCK:TxBitClkGen\
    PORT MAP (
        clock => \UART_1:Net_9\ ,
        cs_addr_0 => \UART_1:BUART:counter_load_not\ ,
        ce0_reg => \UART_1:BUART:tx_bitclk_enable_pre\ ,
        ce1_reg => \UART_1:BUART:tx_counter_dp\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,5)] contents:
LAB@[UDB=(0,5)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,5)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,0)] contents:
LAB@[UDB=(1,0)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,0)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,1)] contents:
LAB@[UDB=(1,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }
}

statuscell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \ADC_SAR_Seq_1:clock\ ,
        status_0 => Net_549 ,
        clk_en => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)

UDB [UDB=(1,2)] contents:
LAB@[UDB=(1,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }
}

synccell: Name =\ADC_SAR_Seq_1:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \ADC_SAR_Seq_1:nrq\ ,
        out => \ADC_SAR_Seq_1:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

synccell: Name =\ADC_SAR_Seq_2:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \ADC_SAR_Seq_2:nrq\ ,
        out => \ADC_SAR_Seq_2:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,3)] contents:
LAB@[UDB=(1,3)][LB=0] #macrocells=4, #inputs=7, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_549
            + \ADC_SAR_Seq_1:Net_3935\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(1,3)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_1030 * !\ADC_SAR_Seq_2:bSAR_SEQ:load_period\
        );
        Output = \ADC_SAR_Seq_2:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_1:BUART:tx_status_2\, Mode=(Combinatorial) @ [UDB=(1,3)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:tx_fifo_notfull\
        );
        Output = \UART_1:BUART:tx_status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=Net_20, Mode=(Combinatorial) @ [UDB=(1,3)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:txn\
        );
        Output = Net_20 (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,3)][LB=1] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=Net_549, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\
        );
        Output = Net_549 (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

statuscell: Name =\ADC_SAR_Seq_2:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \ADC_SAR_Seq_2:clock\ ,
        status_0 => Net_1031 ,
        clk_en => \ADC_SAR_Seq_2:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_SAR_Seq_2:bSAR_SEQ:enable\)

UDB [UDB=(1,4)] contents:
LAB@[UDB=(1,4)][LB=0] #macrocells=3, #inputs=5, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_1031
            + \ADC_SAR_Seq_2:Net_3935\
        );
        Output = \ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=__ONE__, Mode=(Combinatorial) @ [UDB=(1,4)][LB=0][MC=1]
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(1,4)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_548 * !\ADC_SAR_Seq_1:bSAR_SEQ:load_period\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,4)][LB=1] #macrocells=3, #inputs=11, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=Net_1031, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_2:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_SAR_Seq_2:bSAR_SEQ:nrq_reg\
        );
        Output = Net_1031 (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_2:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_SAR_Seq_2:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(1,4)][LB=1][MC=2]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:ch_addr_5\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:ch_addr_4\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:ch_addr_3\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:ch_addr_2\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    [McSlotId=3]: (empty)
}

controlcell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \ADC_SAR_Seq_1:clock\ ,
        control_7 => \ADC_SAR_Seq_1:bSAR_SEQ:control_7\ ,
        control_6 => \ADC_SAR_Seq_1:bSAR_SEQ:control_6\ ,
        control_5 => \ADC_SAR_Seq_1:bSAR_SEQ:control_5\ ,
        control_4 => \ADC_SAR_Seq_1:bSAR_SEQ:control_4\ ,
        control_3 => \ADC_SAR_Seq_1:bSAR_SEQ:control_3\ ,
        control_2 => \ADC_SAR_Seq_1:bSAR_SEQ:control_2\ ,
        control_1 => \ADC_SAR_Seq_1:bSAR_SEQ:load_period\ ,
        control_0 => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,5)] contents:
LAB@[UDB=(1,5)][LB=0] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_4\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_2\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,5)][LB=1] #macrocells=1, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(1,5)][LB=1][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:ch_addr_5\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:ch_addr_4\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:ch_addr_3\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:ch_addr_2\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:ch_addr_1\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:ch_addr_1\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ * 
              \ADC_SAR_Seq_1:ch_addr_0\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ * 
              !\ADC_SAR_Seq_1:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

count7cell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \ADC_SAR_Seq_1:clock\ ,
        load => \ADC_SAR_Seq_1:bSAR_SEQ:load_period\ ,
        enable => \ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\ ,
        count_6 => \ADC_SAR_Seq_1:bSAR_SEQ:count_6\ ,
        count_5 => \ADC_SAR_Seq_1:ch_addr_5\ ,
        count_4 => \ADC_SAR_Seq_1:ch_addr_4\ ,
        count_3 => \ADC_SAR_Seq_1:ch_addr_3\ ,
        count_2 => \ADC_SAR_Seq_1:ch_addr_2\ ,
        count_1 => \ADC_SAR_Seq_1:ch_addr_1\ ,
        count_0 => \ADC_SAR_Seq_1:ch_addr_0\ ,
        tc => \ADC_SAR_Seq_1:bSAR_SEQ:cnt_tc\ ,
        clk_en => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000101"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)

UDB [UDB=(2,0)] contents:
LAB@[UDB=(2,0)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,0)][LB=1] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_3\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,1)] contents:
LAB@[UDB=(2,1)][LB=0] #macrocells=4, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(2,1)][LB=0][MC=1]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:ch_addr_5\
            + !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:ch_addr_4\
            + !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:ch_addr_3\
            + !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:ch_addr_2\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,1)][LB=1] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_5\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_4\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,2)] contents:
LAB@[UDB=(2,2)][LB=0] #macrocells=2, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(2,2)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:ch_addr_5\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:ch_addr_4\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:ch_addr_3\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:ch_addr_2\
            + !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:ch_addr_1\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:ch_addr_1\
            + !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ * 
              \ADC_SAR_Seq_2:ch_addr_0\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ * 
              !\ADC_SAR_Seq_2:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_1:BUART:tx_ctrl_mark_last\, Mode=(T-Register) @ [UDB=(2,2)][LB=0][MC=1]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:tx_ctrl_mark_last\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,2)][LB=1] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_1\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }
}

UDB [UDB=(2,3)] contents:
LAB@[UDB=(2,3)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,3)][LB=1] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_2\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }
}

count7cell: Name =\ADC_SAR_Seq_2:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \ADC_SAR_Seq_2:clock\ ,
        load => \ADC_SAR_Seq_2:bSAR_SEQ:load_period\ ,
        enable => \ADC_SAR_Seq_2:bSAR_SEQ:cnt_enable\ ,
        count_6 => \ADC_SAR_Seq_2:bSAR_SEQ:count_6\ ,
        count_5 => \ADC_SAR_Seq_2:ch_addr_5\ ,
        count_4 => \ADC_SAR_Seq_2:ch_addr_4\ ,
        count_3 => \ADC_SAR_Seq_2:ch_addr_3\ ,
        count_2 => \ADC_SAR_Seq_2:ch_addr_2\ ,
        count_1 => \ADC_SAR_Seq_2:ch_addr_1\ ,
        count_0 => \ADC_SAR_Seq_2:ch_addr_0\ ,
        tc => \ADC_SAR_Seq_2:bSAR_SEQ:cnt_tc\ ,
        clk_en => \ADC_SAR_Seq_2:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000011"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_SAR_Seq_2:bSAR_SEQ:enable\)

UDB [UDB=(2,4)] contents:
LAB@[UDB=(2,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }
}

controlcell: Name =\ADC_SAR_Seq_2:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \ADC_SAR_Seq_2:clock\ ,
        control_7 => \ADC_SAR_Seq_2:bSAR_SEQ:control_7\ ,
        control_6 => \ADC_SAR_Seq_2:bSAR_SEQ:control_6\ ,
        control_5 => \ADC_SAR_Seq_2:bSAR_SEQ:control_5\ ,
        control_4 => \ADC_SAR_Seq_2:bSAR_SEQ:control_4\ ,
        control_3 => \ADC_SAR_Seq_2:bSAR_SEQ:control_3\ ,
        control_2 => \ADC_SAR_Seq_2:bSAR_SEQ:control_2\ ,
        control_1 => \ADC_SAR_Seq_2:bSAR_SEQ:load_period\ ,
        control_0 => \ADC_SAR_Seq_2:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,5)] contents:
LAB@[UDB=(2,5)][LB=0] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_1\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_3\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,5)][LB=1] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_5\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }
}

UDB [UDB=(3,0)] contents:
LAB@[UDB=(3,0)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,0)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,1)] contents:
LAB@[UDB=(3,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,2)] contents:
LAB@[UDB=(3,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,2)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,3)] contents:
LAB@[UDB=(3,3)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,3)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,4)] contents:
LAB@[UDB=(3,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,5)] contents:
LAB@[UDB=(3,5)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,5)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }
}

Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =\ADC_SAR_Seq_1:IRQ\
        PORT MAP (
            interrupt => Net_549 );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(1)] 
    interrupt: Name =\ADC_SAR_Seq_2:IRQ\
        PORT MAP (
            interrupt => Net_1031 );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(15)] 
    interrupt: Name =\EZI2C_1:isr\
        PORT MAP (
            interrupt => \EZI2C_1:Net_172\ );
        Properties:
        {
            int_type = "00"
        }
Drq container @ [DrqContainer=(0)]: 
  Dma@ [DrqContainer=(0)][DrqId=(0)] 
    drqcell: Name =\ADC_SAR_Seq_1:FinalBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_1:Net_3698\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_1:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(1)] 
    drqcell: Name =\ADC_SAR_Seq_1:TempBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_1:Net_3830\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_1:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(2)] 
    drqcell: Name =\ADC_SAR_Seq_2:FinalBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_2:Net_3698\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_2:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(3)] 
    drqcell: Name =\ADC_SAR_Seq_2:TempBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_2:Net_3830\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_2:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 contains the following IO cells:
[IoId=0]: 
Pin : Name = Overall_Consumption(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Overall_Consumption(0)__PA ,
        analog_term => Net_7 ,
        pad => Overall_Consumption(0)_PAD ,
        input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = Overall_Production(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Overall_Production(0)__PA ,
        analog_term => Net_355 ,
        pad => Overall_Production(0)_PAD ,
        input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = Fuel_Pump(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Fuel_Pump(0)__PA ,
        analog_term => Net_357 ,
        pad => Fuel_Pump(0)_PAD ,
        input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\ );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = Fuel_Injector(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Fuel_Injector(0)__PA ,
        analog_term => Net_358 ,
        pad => Fuel_Injector(0)_PAD ,
        input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\ );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = Ignition(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Ignition(0)__PA ,
        analog_term => Net_456 ,
        pad => Ignition(0)_PAD ,
        input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\ );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = Vref(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Vref(0)__PA ,
        analog_term => Net_458 ,
        pad => Vref(0)_PAD ,
        input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\ );
    Properties:
    {
    }

Port 1 is empty
Port 2 contains the following IO cells:
[IoId=1]: 
Pin : Name = LED(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LED(0)__PA ,
        input => __ONE__ ,
        pad => LED(0)_PAD );
    Properties:
    {
    }

Port 3 contains the following IO cells:
[IoId=0]: 
Pin : Name = Back_Left(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Back_Left(0)__PA ,
        analog_term => Net_1032 ,
        pad => Back_Left(0)_PAD ,
        input => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = Back_Right(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Back_Right(0)__PA ,
        analog_term => Net_1033 ,
        pad => Back_Right(0)_PAD ,
        input => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = Front_Left(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Front_Left(0)__PA ,
        analog_term => Net_1035 ,
        pad => Front_Left(0)_PAD ,
        input => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_2\ );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = Front_Right(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Front_Right(0)__PA ,
        analog_term => Net_1036 ,
        pad => Front_Right(0)_PAD ,
        input => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_3\ );
    Properties:
    {
    }

Port 12 contains the following IO cells:
[IoId=4]: 
Pin : Name = I2C_pins(0)
    Attributes:
        Alias: scl
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: OPEN_DRAIN_LO
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: True
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: ENABLED
        SIO Vtrip: MULTIPLIER_0_4_OR_1
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, SIO, I2CWKUP_SCL, HOTSWAP
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => I2C_pins(0)__PA ,
        fb => \EZI2C_1:Net_175\ ,
        input => \EZI2C_1:Net_174\ ,
        pad => I2C_pins(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = I2C_pins(1)
    Attributes:
        Alias: sda
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: OPEN_DRAIN_LO
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: True
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: ENABLED
        SIO Vtrip: MULTIPLIER_0_4_OR_1
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, SIO, I2CWKUP_SDA, HOTSWAP
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => I2C_pins(1)__PA ,
        fb => \EZI2C_1:Net_181\ ,
        input => \EZI2C_1:Net_173\ ,
        pad => I2C_pins(1)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = Rx_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Rx_1(0)__PA ,
        fb => Net_25 ,
        pad => Rx_1(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = Tx_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => Tx_1(0)__PA ,
        input => Net_20 ,
        pad => Tx_1(0)_PAD );
    Properties:
    {
    }

Port 15 is empty
CAN 2.0b group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => \ADC_SAR_Seq_1:clock\ ,
            dclk_0 => \ADC_SAR_Seq_1:clock_local\ ,
            dclk_glb_1 => \ADC_SAR_Seq_2:clock\ ,
            dclk_1 => \ADC_SAR_Seq_2:clock_local\ ,
            dclk_glb_2 => \UART_1:Net_9\ ,
            dclk_2 => \UART_1:Net_9_local\ );
        Properties:
        {
        }
Comparator group 0: empty
Digital Filter Block group 0: empty
Delta-Sigma ADC group 0: empty
Decimator group 0: empty
EMIF group 0: empty
I2C group 0: 
    I2C Block @ F(I2C,0): 
    i2ccell: Name =\EZI2C_1:I2C_Prim\
        PORT MAP (
            scl_in => \EZI2C_1:Net_175\ ,
            sda_in => \EZI2C_1:Net_181\ ,
            scl_out => \EZI2C_1:Net_174\ ,
            sda_out => \EZI2C_1:Net_173\ ,
            interrupt => \EZI2C_1:Net_172\ );
        Properties:
        {
            cy_registers = ""
            use_wakeup = 1
        }
Segment LCD group 0: empty
LVD group 0: empty
PM group 0: empty
Analog (SC/CT) Blocks group 0: empty
SPC group 0: empty
Timer group 0: empty
USB group 0: empty
VIDAC group 0: empty
Opamp group 0: empty
CapSense Buffers group 0: empty
Vref group 0: 
    Vref Block @ F(Vref,13): 
    vrefcell: Name =\ADC_SAR_Seq_1:SAR:vRef_Vdda_1\
        PORT MAP (
            vout => \ADC_SAR_Seq_1:SAR:Net_235\ );
        Properties:
        {
            autoenable = 1
            guid = "4720866E-BC14-478d-B8A0-3E44F38CADAC"
            ignoresleep = 0
            name = "Vdda/2"
        }
LPF group 0: empty
SAR ADC group 0: 
    SAR Block @ F(SAR,0): 
    sarcell: Name =\ADC_SAR_Seq_1:SAR:ADC_SAR\
        PORT MAP (
            vplus => \ADC_SAR_Seq_1:Net_2803\ ,
            vminus => \ADC_SAR_Seq_1:SAR:Net_126\ ,
            ext_pin => \ADC_SAR_Seq_1:SAR:Net_209\ ,
            vrefhi_out => \ADC_SAR_Seq_1:SAR:Net_126\ ,
            vref => \ADC_SAR_Seq_1:SAR:Net_235\ ,
            clk_udb => \ADC_SAR_Seq_1:clock_local\ ,
            irq => \ADC_SAR_Seq_1:SAR:Net_252\ ,
            next => Net_548 ,
            data_out_udb_11 => \ADC_SAR_Seq_1:SAR:Net_207_11\ ,
            data_out_udb_10 => \ADC_SAR_Seq_1:SAR:Net_207_10\ ,
            data_out_udb_9 => \ADC_SAR_Seq_1:SAR:Net_207_9\ ,
            data_out_udb_8 => \ADC_SAR_Seq_1:SAR:Net_207_8\ ,
            data_out_udb_7 => \ADC_SAR_Seq_1:SAR:Net_207_7\ ,
            data_out_udb_6 => \ADC_SAR_Seq_1:SAR:Net_207_6\ ,
            data_out_udb_5 => \ADC_SAR_Seq_1:SAR:Net_207_5\ ,
            data_out_udb_4 => \ADC_SAR_Seq_1:SAR:Net_207_4\ ,
            data_out_udb_3 => \ADC_SAR_Seq_1:SAR:Net_207_3\ ,
            data_out_udb_2 => \ADC_SAR_Seq_1:SAR:Net_207_2\ ,
            data_out_udb_1 => \ADC_SAR_Seq_1:SAR:Net_207_1\ ,
            data_out_udb_0 => \ADC_SAR_Seq_1:SAR:Net_207_0\ ,
            eof_udb => \ADC_SAR_Seq_1:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }
    SAR Block @ F(SAR,1): 
    sarcell: Name =\ADC_SAR_Seq_2:SAR:ADC_SAR\
        PORT MAP (
            vplus => \ADC_SAR_Seq_2:Net_2803\ ,
            vminus => \ADC_SAR_Seq_2:SAR:Net_126\ ,
            ext_pin => \ADC_SAR_Seq_2:SAR:Net_209\ ,
            vrefhi_out => \ADC_SAR_Seq_2:SAR:Net_126\ ,
            vref => \ADC_SAR_Seq_1:SAR:Net_235\ ,
            clk_udb => \ADC_SAR_Seq_2:clock_local\ ,
            irq => \ADC_SAR_Seq_2:SAR:Net_252\ ,
            next => Net_1030 ,
            data_out_udb_11 => \ADC_SAR_Seq_2:SAR:Net_207_11\ ,
            data_out_udb_10 => \ADC_SAR_Seq_2:SAR:Net_207_10\ ,
            data_out_udb_9 => \ADC_SAR_Seq_2:SAR:Net_207_9\ ,
            data_out_udb_8 => \ADC_SAR_Seq_2:SAR:Net_207_8\ ,
            data_out_udb_7 => \ADC_SAR_Seq_2:SAR:Net_207_7\ ,
            data_out_udb_6 => \ADC_SAR_Seq_2:SAR:Net_207_6\ ,
            data_out_udb_5 => \ADC_SAR_Seq_2:SAR:Net_207_5\ ,
            data_out_udb_4 => \ADC_SAR_Seq_2:SAR:Net_207_4\ ,
            data_out_udb_3 => \ADC_SAR_Seq_2:SAR:Net_207_3\ ,
            data_out_udb_2 => \ADC_SAR_Seq_2:SAR:Net_207_2\ ,
            data_out_udb_1 => \ADC_SAR_Seq_2:SAR:Net_207_1\ ,
            data_out_udb_0 => \ADC_SAR_Seq_2:SAR:Net_207_0\ ,
            eof_udb => \ADC_SAR_Seq_2:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\ADC_SAR_Seq_1:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_638 ,
            muxin_62 => Net_637 ,
            muxin_61 => Net_636 ,
            muxin_60 => Net_635 ,
            muxin_59 => Net_634 ,
            muxin_58 => Net_633 ,
            muxin_57 => Net_632 ,
            muxin_56 => Net_631 ,
            muxin_55 => Net_630 ,
            muxin_54 => Net_629 ,
            muxin_53 => Net_628 ,
            muxin_52 => Net_627 ,
            muxin_51 => Net_626 ,
            muxin_50 => Net_625 ,
            muxin_49 => Net_624 ,
            muxin_48 => Net_623 ,
            muxin_47 => Net_622 ,
            muxin_46 => Net_620 ,
            muxin_45 => Net_618 ,
            muxin_44 => Net_617 ,
            muxin_43 => Net_615 ,
            muxin_42 => Net_613 ,
            muxin_41 => Net_612 ,
            muxin_40 => Net_610 ,
            muxin_39 => Net_608 ,
            muxin_38 => Net_607 ,
            muxin_37 => Net_605 ,
            muxin_36 => Net_603 ,
            muxin_35 => Net_602 ,
            muxin_34 => Net_600 ,
            muxin_33 => Net_598 ,
            muxin_32 => Net_597 ,
            muxin_31 => Net_595 ,
            muxin_30 => Net_593 ,
            muxin_29 => Net_592 ,
            muxin_28 => Net_590 ,
            muxin_27 => Net_588 ,
            muxin_26 => Net_587 ,
            muxin_25 => Net_585 ,
            muxin_24 => Net_583 ,
            muxin_23 => Net_582 ,
            muxin_22 => Net_580 ,
            muxin_21 => Net_578 ,
            muxin_20 => Net_577 ,
            muxin_19 => Net_575 ,
            muxin_18 => Net_573 ,
            muxin_17 => Net_572 ,
            muxin_16 => Net_570 ,
            muxin_15 => Net_568 ,
            muxin_14 => Net_567 ,
            muxin_13 => Net_565 ,
            muxin_12 => Net_563 ,
            muxin_11 => Net_562 ,
            muxin_10 => Net_560 ,
            muxin_9 => Net_558 ,
            muxin_8 => Net_557 ,
            muxin_7 => Net_555 ,
            muxin_6 => Net_553 ,
            muxin_5 => Net_458 ,
            muxin_4 => Net_456 ,
            muxin_3 => Net_358 ,
            muxin_2 => Net_357 ,
            muxin_1 => Net_355 ,
            muxin_0 => Net_7 ,
            hw_ctrl_en_63 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_6\ ,
            vout => \ADC_SAR_Seq_1:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
    Amux Block @ <No Location>: 
    amuxcell: Name =\ADC_SAR_Seq_2:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_1126 ,
            muxin_62 => Net_1125 ,
            muxin_61 => Net_1124 ,
            muxin_60 => Net_1123 ,
            muxin_59 => Net_1122 ,
            muxin_58 => Net_1121 ,
            muxin_57 => Net_1120 ,
            muxin_56 => Net_1119 ,
            muxin_55 => Net_1118 ,
            muxin_54 => Net_1117 ,
            muxin_53 => Net_1116 ,
            muxin_52 => Net_1115 ,
            muxin_51 => Net_1114 ,
            muxin_50 => Net_1113 ,
            muxin_49 => Net_1112 ,
            muxin_48 => Net_1111 ,
            muxin_47 => Net_1110 ,
            muxin_46 => Net_1108 ,
            muxin_45 => Net_1106 ,
            muxin_44 => Net_1105 ,
            muxin_43 => Net_1103 ,
            muxin_42 => Net_1101 ,
            muxin_41 => Net_1100 ,
            muxin_40 => Net_1098 ,
            muxin_39 => Net_1096 ,
            muxin_38 => Net_1095 ,
            muxin_37 => Net_1093 ,
            muxin_36 => Net_1091 ,
            muxin_35 => Net_1090 ,
            muxin_34 => Net_1088 ,
            muxin_33 => Net_1086 ,
            muxin_32 => Net_1085 ,
            muxin_31 => Net_1083 ,
            muxin_30 => Net_1081 ,
            muxin_29 => Net_1080 ,
            muxin_28 => Net_1078 ,
            muxin_27 => Net_1076 ,
            muxin_26 => Net_1075 ,
            muxin_25 => Net_1073 ,
            muxin_24 => Net_1071 ,
            muxin_23 => Net_1070 ,
            muxin_22 => Net_1068 ,
            muxin_21 => Net_1066 ,
            muxin_20 => Net_1065 ,
            muxin_19 => Net_1063 ,
            muxin_18 => Net_1061 ,
            muxin_17 => Net_1060 ,
            muxin_16 => Net_1058 ,
            muxin_15 => Net_1056 ,
            muxin_14 => Net_1055 ,
            muxin_13 => Net_1053 ,
            muxin_12 => Net_1051 ,
            muxin_11 => Net_1050 ,
            muxin_10 => Net_1048 ,
            muxin_9 => Net_1046 ,
            muxin_8 => Net_1045 ,
            muxin_7 => Net_1043 ,
            muxin_6 => Net_1041 ,
            muxin_5 => Net_1040 ,
            muxin_4 => Net_1038 ,
            muxin_3 => Net_1036 ,
            muxin_2 => Net_1035 ,
            muxin_1 => Net_1033 ,
            muxin_0 => Net_1032 ,
            hw_ctrl_en_63 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_4\ ,
            vout => \ADC_SAR_Seq_2:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |                        | 
Port | Pin | Fixed |      Type |       Drive Mode |                   Name | Connections
-----+-----+-------+-----------+------------------+------------------------+-----------------------------------------------------------------
   0 |   0 |     * |      NONE |      HI_Z_ANALOG | Overall_Consumption(0) | In(\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_7)
     |   1 |     * |      NONE |      HI_Z_ANALOG |  Overall_Production(0) | In(\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_355)
     |   2 |     * |      NONE |      HI_Z_ANALOG |           Fuel_Pump(0) | In(\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\), Analog(Net_357)
     |   3 |     * |      NONE |      HI_Z_ANALOG |       Fuel_Injector(0) | In(\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\), Analog(Net_358)
     |   4 |     * |      NONE |      HI_Z_ANALOG |            Ignition(0) | In(\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\), Analog(Net_456)
     |   5 |     * |      NONE |      HI_Z_ANALOG |                Vref(0) | In(\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\), Analog(Net_458)
-----+-----+-------+-----------+------------------+------------------------+-----------------------------------------------------------------
   2 |   1 |     * |      NONE |         CMOS_OUT |                 LED(0) | In(__ONE__)
-----+-----+-------+-----------+------------------+------------------------+-----------------------------------------------------------------
   3 |   0 |     * |      NONE |      HI_Z_ANALOG |           Back_Left(0) | In(\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_1032)
     |   1 |     * |      NONE |      HI_Z_ANALOG |          Back_Right(0) | In(\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_1033)
     |   2 |     * |      NONE |      HI_Z_ANALOG |          Front_Left(0) | In(\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_2\), Analog(Net_1035)
     |   3 |     * |      NONE |      HI_Z_ANALOG |         Front_Right(0) | In(\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_3\), Analog(Net_1036)
-----+-----+-------+-----------+------------------+------------------------+-----------------------------------------------------------------
  12 |   4 |     * |      NONE |    OPEN_DRAIN_LO |            I2C_pins(0) | FB(\EZI2C_1:Net_175\), In(\EZI2C_1:Net_174\)
     |   5 |     * |      NONE |    OPEN_DRAIN_LO |            I2C_pins(1) | FB(\EZI2C_1:Net_181\), In(\EZI2C_1:Net_173\)
     |   6 |     * |      NONE |     HI_Z_DIGITAL |                Rx_1(0) | FB(Net_25)
     |   7 |     * |      NONE |         CMOS_OUT |                Tx_1(0) | In(Net_20)
---------------------------------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.022ms
Digital Placement phase: Elapsed time ==> 6s.701ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
Routing successful.
Digital Routing phase: Elapsed time ==> 4s.790ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream and API generation">
Bitstream and API generation phase: Elapsed time ==> 0s.438ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream verification">
Bitstream verification phase: Elapsed time ==> 0s.147ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Timing report is in VTM16 Current Sensors_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.734ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.005ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.363ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 21s.855ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 21s.917ms
API generation phase: Elapsed time ==> 1s.672ms
Dependency generation phase: Elapsed time ==> 0s.051ms
Cleanup phase: Elapsed time ==> 0s.002ms
